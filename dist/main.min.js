(()=>{var t={465:(t,e,n)=>{t=n.nmd(t);var r="__lodash_hash_undefined__",i=9007199254740991,o="[object Arguments]",a="[object Boolean]",s="[object Date]",u="[object Function]",l="[object GeneratorFunction]",c="[object Map]",d="[object Number]",h="[object Object]",f="[object Promise]",p="[object RegExp]",m="[object Set]",v="[object String]",g="[object Symbol]",x="[object WeakMap]",y="[object ArrayBuffer]",_="[object DataView]",b="[object Float32Array]",A="[object Float64Array]",T="[object Int8Array]",S="[object Int16Array]",N="[object Int32Array]",F="[object Uint8Array]",w="[object Uint8ClampedArray]",P="[object Uint16Array]",L="[object Uint32Array]",O=/\w*$/,E=/^\[object .+?Constructor\]$/,R=/^(?:0|[1-9]\d*)$/,M={};M[o]=M["[object Array]"]=M[y]=M[_]=M[a]=M[s]=M[b]=M[A]=M[T]=M[S]=M[N]=M[c]=M[d]=M[h]=M[p]=M[m]=M[v]=M[g]=M[F]=M[w]=M[P]=M[L]=!0,M["[object Error]"]=M[u]=M[x]=!1;var I="object"==typeof n.g&&n.g&&n.g.Object===Object&&n.g,U="object"==typeof self&&self&&self.Object===Object&&self,C=I||U||Function("return this")(),X=e&&!e.nodeType&&e,D=X&&t&&!t.nodeType&&t,z=D&&D.exports===X;function B(t,e){return t.set(e[0],e[1]),t}function J(t,e){return t.add(e),t}function Q(t,e,n,r){var i=-1,o=t?t.length:0;for(r&&o&&(n=t[++i]);++i<o;)n=e(n,t[i],i,t);return n}function Y(t){var e=!1;if(null!=t&&"function"!=typeof t.toString)try{e=!!(t+"")}catch(t){}return e}function j(t){var e=-1,n=Array(t.size);return t.forEach((function(t,r){n[++e]=[r,t]})),n}function V(t,e){return function(n){return t(e(n))}}function G(t){var e=-1,n=Array(t.size);return t.forEach((function(t){n[++e]=t})),n}var H,k=Array.prototype,W=Function.prototype,q=Object.prototype,$=C["__core-js_shared__"],K=(H=/[^.]+$/.exec($&&$.keys&&$.keys.IE_PROTO||""))?"Symbol(src)_1."+H:"",Z=W.toString,tt=q.hasOwnProperty,et=q.toString,nt=RegExp("^"+Z.call(tt).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),rt=z?C.Buffer:void 0,it=C.Symbol,ot=C.Uint8Array,at=V(Object.getPrototypeOf,Object),st=Object.create,ut=q.propertyIsEnumerable,lt=k.splice,ct=Object.getOwnPropertySymbols,dt=rt?rt.isBuffer:void 0,ht=V(Object.keys,Object),ft=Dt(C,"DataView"),pt=Dt(C,"Map"),mt=Dt(C,"Promise"),vt=Dt(C,"Set"),gt=Dt(C,"WeakMap"),xt=Dt(Object,"create"),yt=Yt(ft),_t=Yt(pt),bt=Yt(mt),At=Yt(vt),Tt=Yt(gt),St=it?it.prototype:void 0,Nt=St?St.valueOf:void 0;function Ft(t){var e=-1,n=t?t.length:0;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}function wt(t){var e=-1,n=t?t.length:0;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}function Pt(t){var e=-1,n=t?t.length:0;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}function Lt(t){this.__data__=new wt(t)}function Ot(t,e){var n=Vt(t)||function(t){return function(t){return function(t){return!!t&&"object"==typeof t}(t)&&Gt(t)}(t)&&tt.call(t,"callee")&&(!ut.call(t,"callee")||et.call(t)==o)}(t)?function(t,e){for(var n=-1,r=Array(t);++n<t;)r[n]=e(n);return r}(t.length,String):[],r=n.length,i=!!r;for(var a in t)!e&&!tt.call(t,a)||i&&("length"==a||Jt(a,r))||n.push(a);return n}function Et(t,e,n){var r=t[e];tt.call(t,e)&&jt(r,n)&&(void 0!==n||e in t)||(t[e]=n)}function Rt(t,e){for(var n=t.length;n--;)if(jt(t[n][0],e))return n;return-1}function Mt(t,e,n,r,i,f,x){var E;if(r&&(E=f?r(t,i,f,x):r(t)),void 0!==E)return E;if(!Wt(t))return t;var R=Vt(t);if(R){if(E=function(t){var e=t.length,n=t.constructor(e);e&&"string"==typeof t[0]&&tt.call(t,"index")&&(n.index=t.index,n.input=t.input);return n}(t),!e)return function(t,e){var n=-1,r=t.length;e||(e=Array(r));for(;++n<r;)e[n]=t[n];return e}(t,E)}else{var I=Bt(t),U=I==u||I==l;if(Ht(t))return function(t,e){if(e)return t.slice();var n=new t.constructor(t.length);return t.copy(n),n}(t,e);if(I==h||I==o||U&&!f){if(Y(t))return f?t:{};if(E=function(t){return"function"!=typeof t.constructor||Qt(t)?{}:(e=at(t),Wt(e)?st(e):{});var e}(U?{}:t),!e)return function(t,e){return Ct(t,zt(t),e)}(t,function(t,e){return t&&Ct(e,qt(e),t)}(E,t))}else{if(!M[I])return f?t:{};E=function(t,e,n,r){var i=t.constructor;switch(e){case y:return Ut(t);case a:case s:return new i(+t);case _:return function(t,e){var n=e?Ut(t.buffer):t.buffer;return new t.constructor(n,t.byteOffset,t.byteLength)}(t,r);case b:case A:case T:case S:case N:case F:case w:case P:case L:return function(t,e){var n=e?Ut(t.buffer):t.buffer;return new t.constructor(n,t.byteOffset,t.length)}(t,r);case c:return function(t,e,n){return Q(e?n(j(t),!0):j(t),B,new t.constructor)}(t,r,n);case d:case v:return new i(t);case p:return function(t){var e=new t.constructor(t.source,O.exec(t));return e.lastIndex=t.lastIndex,e}(t);case m:return function(t,e,n){return Q(e?n(G(t),!0):G(t),J,new t.constructor)}(t,r,n);case g:return o=t,Nt?Object(Nt.call(o)):{}}var o}(t,I,Mt,e)}}x||(x=new Lt);var C=x.get(t);if(C)return C;if(x.set(t,E),!R)var X=n?function(t){return function(t,e,n){var r=e(t);return Vt(t)?r:function(t,e){for(var n=-1,r=e.length,i=t.length;++n<r;)t[i+n]=e[n];return t}(r,n(t))}(t,qt,zt)}(t):qt(t);return function(t,e){for(var n=-1,r=t?t.length:0;++n<r&&!1!==e(t[n],n,t););}(X||t,(function(i,o){X&&(i=t[o=i]),Et(E,o,Mt(i,e,n,r,o,t,x))})),E}function It(t){return!(!Wt(t)||(e=t,K&&K in e))&&(kt(t)||Y(t)?nt:E).test(Yt(t));var e}function Ut(t){var e=new t.constructor(t.byteLength);return new ot(e).set(new ot(t)),e}function Ct(t,e,n,r){n||(n={});for(var i=-1,o=e.length;++i<o;){var a=e[i],s=r?r(n[a],t[a],a,n,t):void 0;Et(n,a,void 0===s?t[a]:s)}return n}function Xt(t,e){var n,r,i=t.__data__;return("string"==(r=typeof(n=e))||"number"==r||"symbol"==r||"boolean"==r?"__proto__"!==n:null===n)?i["string"==typeof e?"string":"hash"]:i.map}function Dt(t,e){var n=function(t,e){return null==t?void 0:t[e]}(t,e);return It(n)?n:void 0}Ft.prototype.clear=function(){this.__data__=xt?xt(null):{}},Ft.prototype.delete=function(t){return this.has(t)&&delete this.__data__[t]},Ft.prototype.get=function(t){var e=this.__data__;if(xt){var n=e[t];return n===r?void 0:n}return tt.call(e,t)?e[t]:void 0},Ft.prototype.has=function(t){var e=this.__data__;return xt?void 0!==e[t]:tt.call(e,t)},Ft.prototype.set=function(t,e){return this.__data__[t]=xt&&void 0===e?r:e,this},wt.prototype.clear=function(){this.__data__=[]},wt.prototype.delete=function(t){var e=this.__data__,n=Rt(e,t);return!(n<0)&&(n==e.length-1?e.pop():lt.call(e,n,1),!0)},wt.prototype.get=function(t){var e=this.__data__,n=Rt(e,t);return n<0?void 0:e[n][1]},wt.prototype.has=function(t){return Rt(this.__data__,t)>-1},wt.prototype.set=function(t,e){var n=this.__data__,r=Rt(n,t);return r<0?n.push([t,e]):n[r][1]=e,this},Pt.prototype.clear=function(){this.__data__={hash:new Ft,map:new(pt||wt),string:new Ft}},Pt.prototype.delete=function(t){return Xt(this,t).delete(t)},Pt.prototype.get=function(t){return Xt(this,t).get(t)},Pt.prototype.has=function(t){return Xt(this,t).has(t)},Pt.prototype.set=function(t,e){return Xt(this,t).set(t,e),this},Lt.prototype.clear=function(){this.__data__=new wt},Lt.prototype.delete=function(t){return this.__data__.delete(t)},Lt.prototype.get=function(t){return this.__data__.get(t)},Lt.prototype.has=function(t){return this.__data__.has(t)},Lt.prototype.set=function(t,e){var n=this.__data__;if(n instanceof wt){var r=n.__data__;if(!pt||r.length<199)return r.push([t,e]),this;n=this.__data__=new Pt(r)}return n.set(t,e),this};var zt=ct?V(ct,Object):function(){return[]},Bt=function(t){return et.call(t)};function Jt(t,e){return!!(e=null==e?i:e)&&("number"==typeof t||R.test(t))&&t>-1&&t%1==0&&t<e}function Qt(t){var e=t&&t.constructor;return t===("function"==typeof e&&e.prototype||q)}function Yt(t){if(null!=t){try{return Z.call(t)}catch(t){}try{return t+""}catch(t){}}return""}function jt(t,e){return t===e||t!=t&&e!=e}(ft&&Bt(new ft(new ArrayBuffer(1)))!=_||pt&&Bt(new pt)!=c||mt&&Bt(mt.resolve())!=f||vt&&Bt(new vt)!=m||gt&&Bt(new gt)!=x)&&(Bt=function(t){var e=et.call(t),n=e==h?t.constructor:void 0,r=n?Yt(n):void 0;if(r)switch(r){case yt:return _;case _t:return c;case bt:return f;case At:return m;case Tt:return x}return e});var Vt=Array.isArray;function Gt(t){return null!=t&&function(t){return"number"==typeof t&&t>-1&&t%1==0&&t<=i}(t.length)&&!kt(t)}var Ht=dt||function(){return!1};function kt(t){var e=Wt(t)?et.call(t):"";return e==u||e==l}function Wt(t){var e=typeof t;return!!t&&("object"==e||"function"==e)}function qt(t){return Gt(t)?Ot(t):function(t){if(!Qt(t))return ht(t);var e=[];for(var n in Object(t))tt.call(t,n)&&"constructor"!=n&&e.push(n);return e}(t)}t.exports=function(t){return Mt(t,!0,!0)}}},e={};function n(r){var i=e[r];if(void 0!==i)return i.exports;var o=e[r]={id:r,loaded:!1,exports:{}};return t[r](o,o.exports,n),o.loaded=!0,o.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nmd=t=>(t.paths=[],t.children||(t.children=[]),t),(()=>{"use strict";const t=THREE;function e(t,n=""){return Object.keys(t).reduce(((r,i)=>{const o=n.length?`${n}.`:"";return"object"==typeof t[i]&&null!==t[i]&&Object.keys(t[i]).length?Object.assign(r,e(t[i],o+i)):r[o+i]=t[i],r}),{})}const r="d~i-f*f";let i;const o="string",a="number",s="boolean";function u(t){const{types:e}=i;return e.includes(typeof t)}function l(t,n,i,a,s){const l=function(t,e,n=[],r=[]){typeof n===o&&(n=n.split(",")),typeof r===o&&(r=r.split(","));const i=Object.keys(t);let a=n.length?i.filter((t=>n.includes(t))):i.filter((t=>!r.includes(t)));return e&&(a=a.filter((t=>t!==e))),a.sort()}(t,n,i,a),c=e(Object.keys(t).filter((t=>l.includes(t))).reduce(((e,n)=>Object.assign(e,{[n]:t[n]})),{})),d=Object.keys(c).filter((t=>u(c[t]))).reduce(((t,e)=>Object.assign(t,{[e]:c[e]})),{});if(!s)return d;const h=function(t,e){let n=0;return Object.keys(t).sort().reduce(((r,i)=>{const o=t[i];return o!==e[i]&&(r[i]=o,r["d~i-f*f"].push(n)),n++,r}),{[r]:[]})}(d,e(s));return s||delete h["d~i-f*f"],h}function c(t,e,n){if(void 0!==n[t])return typeof n[t]===s?Boolean(e):typeof n[t]===a?Number(e):e}function d(t){const{digits:e}=i;if(typeof t!==a||Number.isInteger(t)||!e)return t;const n=Math.pow(10,e);return t=Math.round(t*n)/n}i={name:"winlo",separator:"~",overwrite:!0,types:[o,a,s],digits:3,diffSeparator:".",reset:function(){i.hash="",i.search=""},init:function(){i.search||i.hash||(i.hash="/",i.reset())},save:function(t,e=!0,{hash:n,include:r,exclude:o,reference:a}={}){const{name:s,overwrite:c,separator:h,search:f,diffSeparator:p}=i,m=new URLSearchParams(c?void 0:f),v=t[n];v&&u(v)?i.hash=v:n=!1;const g=l(t,n,r,o,a),x=Object.entries(g);if(!x.length)return;let y;if(x.forEach((([t,e])=>g[t]=d(e))),e){y=!0===e?s:e;const t=g["d~i-f*f"],n=t?t.join(p):"";delete g["d~i-f*f"];let r=Object.keys(g).sort().map((t=>g[t])).join(h);if(n.length){r+=`${`${h}${h}`}${n}`}r.length&&m.set(y,r)}else{delete g["d~i-f*f"];new URLSearchParams(g).forEach(((t,e)=>{e=c?e:`${s}.${e}`,m.set(e,t)}))}return i.search=m,t},load:function(t,n=!0,{hash:r,include:o,exclude:a}={}){const{name:s,separator:u,search:h,diffSeparator:f}=i,p=new URLSearchParams(h);if(r&&void 0!==t[r]){let e=window.location.hash;e&&(e=e.substring(1),t[r]=c(r,e,t))}let m=e(t);if(n){const e=function(t){return Object.keys(t).sort()}(l(t,r,o,a));if(!e.length)return;const i=!0===n?s:n;let d=p.get(i);if(!d)return;const h=`${u}${u}`;let v;if(d.includes(h)){const t=d.split(h);v=t[1].split(f),d=t[0]}let g=d.split(u);if(g.length!==e.length&&!v)return;let x=0;e.forEach((t=>{(!v||v.includes(x.toString()))&&(m[t]=c(t,g.shift(),m)),x++}))}else p.forEach(((t,e)=>{const n=c(e,t,m);void 0!==c&&(m[e]=n)}));m=function(t){return Object.keys(t).reduce(((e,n)=>(n.split(".").reduce(((e,r,i,o)=>e[r]||(e[r]=isNaN(Number(o[i+1]))?o.length-1===i?t[n]:{}:[])),e),e)),{})}(m);for(let e in m)t[e]=d(m[e]);return t},round:d,get hash(){let t=window.location.hash;if(t&&(t=t.substring(1)),t.length)return t},set hash(t){t.length&&"#"!==t.charAt(0)&&(t="#"+t),window.location.hash=t},get search(){return window.location.search},set search(t){window.location.search=t}};const h=i;function f(t){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},f(t)}function p(t,e){return p=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},p(t,e)}function m(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=g(t);if(e){var i=g(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return v(this,n)}}function v(t,e){if(e&&("object"===f(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function g(t){return g=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},g(t)}var x=function(e){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&p(t,e)}(r,e);var n=m(r);function r(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,r),n.call(this,{glslVersion:t.GLSL3,uniforms:{tMap:new t.Uniform(null),uBluriness:new t.Uniform(1),uDirection:new t.Uniform(new t.Vector2(1,0)),uResolution:new t.Uniform(new t.Vector2)},vertexShader:"in vec2 uv;\r\nin vec3 position;\r\n\r\nout vec2 vUv;\r\n\r\nvoid main() {\r\n    vUv = uv;\r\n\r\n    gl_Position = vec4(position, 1.0);\r\n}",fragmentShader:"precision highp float;\r\n\r\nuniform sampler2D tMap;\r\nuniform float uBluriness;\r\nuniform vec2 uDirection;\r\nuniform vec2 uResolution;\r\n\r\nin vec2 vUv;\r\n\r\nout vec4 FragColor;\r\n\r\nvec4 blur13(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\r\n  vec4 color = vec4(0.0);\r\n  vec2 off1 = vec2(1.411764705882353) * direction;\r\n  vec2 off2 = vec2(3.2941176470588234) * direction;\r\n  vec2 off3 = vec2(5.176470588235294) * direction;\r\n  color += texture(image, uv) * 0.1964825501511404;\r\n  color += texture(image, uv + (off1 / resolution)) * 0.2969069646728344;\r\n  color += texture(image, uv - (off1 / resolution)) * 0.2969069646728344;\r\n  color += texture(image, uv + (off2 / resolution)) * 0.09447039785044732;\r\n  color += texture(image, uv - (off2 / resolution)) * 0.09447039785044732;\r\n  color += texture(image, uv + (off3 / resolution)) * 0.010381362401148057;\r\n  color += texture(image, uv - (off3 / resolution)) * 0.010381362401148057;\r\n  return color;\r\n}\r\n\r\nvoid main() {\r\n    FragColor = blur13(tMap, vUv, uResolution, smoothstep(0.5 + uBluriness * 0.5, 0.0, vUv.y) * uDirection);\r\n}",blending:t.NoBlending,depthWrite:!1,depthTest:!1})}return r}(t.RawShaderMaterial);function y(t){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},y(t)}function _(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function b(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function A(t,e){return A=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},A(t,e)}function T(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=N(t);if(e){var i=N(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return S(this,n)}}function S(t,e){if(e&&("object"===y(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function N(t){return N=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},N(t)}var F=function(e){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&A(t,e)}(a,e);var n,r,i,o=T(a);function a(){var e,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=n.width,i=void 0===r?512:r,s=n.height,u=void 0===s?512:s,l=n.clipBias,c=void 0===l?0:l,d=n.blurIterations,h=void 0===d?8:d,f=n.blurFactor,p=void 0===f?1:f;return _(this,a),(e=o.call(this)).clipBias=c,e.blurIterations=h,e.reflectorPlane=new t.Plane,e.normal=new t.Vector3,e.reflectorWorldPosition=new t.Vector3,e.cameraWorldPosition=new t.Vector3,e.rotationMatrix=new t.Matrix4,e.lookAtPosition=new t.Vector3(0,0,-1),e.clipPlane=new t.Vector4,e.view=new t.Vector3,e.target=new t.Vector3,e.q=new t.Vector4,e.textureMatrix=new t.Matrix4,e.virtualCamera=new t.PerspectiveCamera,e.textureMatrixUniform=new t.Uniform(e.textureMatrix),e.renderTarget=new t.WebGLRenderTarget(i,u,{format:t.RGBFormat,depthBuffer:!1}),e.renderTargetRead=e.renderTarget.clone(),e.renderTargetWrite=e.renderTarget.clone(),e.renderTarget.depthBuffer=!0,e.renderTargetUniform=e.blurIterations>0?new t.Uniform(e.renderTargetRead.texture):new t.Uniform(e.renderTarget.texture),e.blurMaterial=new x,e.blurMaterial.uniforms.uBluriness.value=p,e.blurMaterial.uniforms.uResolution.value.set(i,u),e.screenScene=new t.Scene,e.screenCamera=new t.OrthographicCamera(-1,1,1,-1,0,1),e.screenGeometry=a.getFullscreenTriangle(),e.screen=new t.Mesh(e.screenGeometry,e.blurMaterial),e.screen.frustumCulled=!1,e.screenScene.add(e.screen),e}return n=a,r=[{key:"setSize",value:function(t,e){this.renderTarget.setSize(t,e),this.renderTargetRead.setSize(t,e),this.renderTargetWrite.setSize(t,e),this.blurMaterial.uniforms.uResolution.value.set(t,e)}},{key:"update",value:function(t,e,n){if(this.reflectorWorldPosition.setFromMatrixPosition(this.matrixWorld),this.cameraWorldPosition.setFromMatrixPosition(n.matrixWorld),this.rotationMatrix.extractRotation(this.matrixWorld),this.normal.set(0,0,1),this.normal.applyMatrix4(this.rotationMatrix),this.view.subVectors(this.reflectorWorldPosition,this.cameraWorldPosition),!(this.view.dot(this.normal)>0)){this.view.reflect(this.normal).negate(),this.view.add(this.reflectorWorldPosition),this.rotationMatrix.extractRotation(n.matrixWorld),this.lookAtPosition.set(0,0,-1),this.lookAtPosition.applyMatrix4(this.rotationMatrix),this.lookAtPosition.add(this.cameraWorldPosition),this.target.subVectors(this.reflectorWorldPosition,this.lookAtPosition),this.target.reflect(this.normal).negate(),this.target.add(this.reflectorWorldPosition),this.virtualCamera.position.copy(this.view),this.virtualCamera.up.set(0,1,0),this.virtualCamera.up.applyMatrix4(this.rotationMatrix),this.virtualCamera.up.reflect(this.normal),this.virtualCamera.lookAt(this.target),this.virtualCamera.far=n.far,this.virtualCamera.updateMatrixWorld(),this.virtualCamera.projectionMatrix.copy(n.projectionMatrix),this.textureMatrix.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),this.textureMatrix.multiply(this.virtualCamera.projectionMatrix),this.textureMatrix.multiply(this.virtualCamera.matrixWorldInverse),this.textureMatrix.multiply(this.matrixWorld),this.reflectorPlane.setFromNormalAndCoplanarPoint(this.normal,this.reflectorWorldPosition),this.reflectorPlane.applyMatrix4(this.virtualCamera.matrixWorldInverse),this.clipPlane.set(this.reflectorPlane.normal.x,this.reflectorPlane.normal.y,this.reflectorPlane.normal.z,this.reflectorPlane.constant);var r=this.virtualCamera.projectionMatrix;this.q.x=(Math.sign(this.clipPlane.x)+r.elements[8])/r.elements[0],this.q.y=(Math.sign(this.clipPlane.y)+r.elements[9])/r.elements[5],this.q.z=-1,this.q.w=(1+r.elements[10])/r.elements[14],this.clipPlane.multiplyScalar(2/this.clipPlane.dot(this.q)),r.elements[2]=this.clipPlane.x,r.elements[6]=this.clipPlane.y,r.elements[10]=this.clipPlane.z+1-this.clipBias,r.elements[14]=this.clipPlane.w;var i=t.getRenderTarget(),o=t.xr.enabled,a=t.shadowMap.autoUpdate;t.xr.enabled=!1,t.shadowMap.autoUpdate=!1,t.setRenderTarget(this.renderTarget),t.state.buffers.depth.setMask(!0),!1===t.autoClear&&t.clear(),t.render(e,this.virtualCamera);for(var s=this.blurIterations,u=0;u<s;u++){this.blurMaterial.uniforms.tMap.value=0===u?this.renderTarget.texture:this.renderTargetRead.texture;var l=.5*(s-u-1);this.blurMaterial.uniforms.uDirection.value.set(u%2==0?l:0,u%2==0?0:l),t.setRenderTarget(this.renderTargetWrite),!1===t.autoClear&&t.clear(),t.render(this.screenScene,this.screenCamera);var c=this.renderTargetRead;this.renderTargetRead=this.renderTargetWrite,this.renderTargetWrite=c,this.renderTargetUniform.value=this.renderTargetRead.texture}t.xr.enabled=o,t.shadowMap.autoUpdate=a,t.setRenderTarget(i)}}},{key:"destroy",value:function(){for(var t in this.renderTargetWrite.dispose(),this.renderTargetRead.dispose(),this.renderTarget.dispose(),this.blurMaterial.dispose(),this.screenGeometry.dispose(),this)this[t]=null;return null}}],r&&b(n.prototype,r),i&&b(n,i),a}(t.Group);F.getFullscreenTriangle=function(){var e=new t.BufferGeometry,n=new Float32Array([-1,-1,3,-1,-1,3]),r=new Float32Array([0,0,2,0,0,2]);return e.setAttribute("position",new t.BufferAttribute(n,2)),e.setAttribute("uv",new t.BufferAttribute(r,2)),e};const w="in vec3 position;\r\nin vec2 uv;\r\n\r\nuniform mat4 modelViewMatrix;\r\nuniform mat4 projectionMatrix;\r\n\r\nuniform mat3 uMapTransform;\r\nuniform mat4 uMatrix;\r\n\r\nout vec2 vUv;\r\nout vec4 vCoord;\r\n\r\nvoid main() {\r\n    vUv = (uMapTransform * vec3(uv, 1.0)).xy;\r\n    vCoord = uMatrix * vec4(position, 1.0);\r\n\r\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n}",P="precision highp float;\r\n\r\nuniform sampler2D tMap;\r\nuniform sampler2D tReflect;\r\nuniform vec3 uColor;\r\n\r\n#ifdef USE_FOG\r\n    uniform vec3 uFogColor;\r\n    uniform float uFogNear;\r\n    uniform float uFogFar;\r\n#endif\r\n\r\nin vec2 vUv;\r\nin vec4 vCoord;\r\n\r\nout vec4 FragColor;\r\n\r\nfloat blendOverlay(float x, float y) {\r\n    return (x < 0.5) ? (2.0 * x * y) : (1.0 - 2.0 * (1.0 - x) * (1.0 - y));\r\n}\r\n\r\nvec4 blendOverlay(vec4 x, vec4 y, float opacity) {\r\n    vec4 z = vec4(blendOverlay(x.r, y.r), blendOverlay(x.g, y.g), blendOverlay(x.b, y.b), blendOverlay(x.a, y.a));\r\n    return z * opacity + x * (1.0 - opacity);\r\n}\r\n\r\nfloat random(vec2 co) {\r\n    float a = 12.9898;\r\n    float b = 78.233;\r\n    float c = 43758.5453;\r\n    float dt = dot(co.xy, vec2(a, b));\r\n    float sn = mod(dt, 3.14);\r\n    return fract(sin(sn) * c);\r\n}\r\n\r\nvec3 dither(vec3 color) {\r\n    // Calculate grid position\r\n    float grid_position = random(gl_FragCoord.xy);\r\n\r\n    // Shift the individual colors differently, thus making it even harder to see the dithering pattern\r\n    vec3 dither_shift_RGB = vec3(0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0);\r\n\r\n    // Modify shift acording to grid position\r\n    dither_shift_RGB = mix(2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position);\r\n\r\n    // Shift the color by dither_shift\r\n    return color + dither_shift_RGB;\r\n}\r\n\r\nvoid main() {\r\n    vec4 base = texture(tMap, vUv);\r\n    vec4 blend = textureProj(tReflect, vCoord);\r\n\r\n    FragColor = base * blend;\r\n\r\n    base = FragColor;\r\n    blend = vec4(uColor, 1.0);\r\n\r\n    FragColor = blendOverlay(base, blend, 1.0);\r\n\r\n    #ifdef USE_FOG\r\n        float fogDepth = gl_FragCoord.z / gl_FragCoord.w;\r\n        float fogFactor = smoothstep(uFogNear, uFogFar, fogDepth);\r\n\r\n        FragColor.rgb = mix(FragColor.rgb, uFogColor, fogFactor);\r\n    #endif\r\n\r\n    #ifdef DITHERING\r\n        FragColor.rgb = dither(FragColor.rgb);\r\n    #endif\r\n}";function L(t){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},L(t)}function O(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function E(t,e){return E=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},E(t,e)}function R(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=I(t);if(e){var i=I(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return M(this,n)}}function M(t,e){if(e&&("object"===L(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function I(t){return I=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},I(t)}var U=function(e){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&E(t,e)}(r,e);var n=R(r);function r(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},i=e.color,o=void 0===i?new t.Color(8355711):i,a=e.map,s=void 0===a?null:a,u=e.fog,l=void 0===u?null:u,c=e.dithering,d=void 0!==c&&c;O(this,r);var h={glslVersion:t.GLSL3,defines:{},uniforms:{tMap:new t.Uniform(null),tReflect:new t.Uniform(null),uMapTransform:new t.Uniform(new t.Matrix3),uMatrix:new t.Uniform(new t.Matrix4),uColor:new t.Uniform(o instanceof t.Color?o:new t.Color(o))},vertexShader:w,fragmentShader:P};return s&&(s.updateMatrix(),h.uniforms=Object.assign(h.uniforms,{tMap:new t.Uniform(s),uMapTransform:new t.Uniform(s.matrix)})),l&&(h.defines=Object.assign(h.defines,{USE_FOG:""}),h.uniforms=Object.assign(h.uniforms,{uFogColor:new t.Uniform(l.color),uFogNear:new t.Uniform(l.near),uFogFar:new t.Uniform(l.far)})),d&&(h.defines=Object.assign(h.defines,{DITHERING:""})),n.call(this,h)}return r}(t.RawShaderMaterial);function C(t){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},C(t)}function X(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function D(t,e){return D=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},D(t,e)}function z(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=J(t);if(e){var i=J(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return B(this,n)}}function B(t,e){if(e&&("object"===C(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function J(t){return J=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},J(t)}var Q=function(e){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&D(t,e)}(a,e);var n,r,i,o=z(a);function a(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(e=o.call(this)).reflector=new F,e.size=t,e}return n=a,r=[{key:"init",value:function(e,n){var r=this,i=this.size,o=new t.PlaneGeometry(i,i);e&&(e.wrapS=t.RepeatWrapping,e.wrapT=t.RepeatWrapping,e.repeat.set(16,16));var a=n.fog,s=new U({map:e,fog:a,dithering:!0});s.uniforms.tReflect=this.reflector.renderTargetUniform,s.uniforms.uMatrix=this.reflector.textureMatrixUniform;var u=new t.Mesh(o,s);u.rotation.x=-Math.PI/2,u.add(this.reflector),u.onBeforeRender=function(t,e,n){r.visible=!1,r.reflector.update(t,e,n),r.visible=!0},this.add(u)}},{key:"resize",value:function(e,n,r){e=Math.round(e/r),n=Math.round(n/r),e=t.MathUtils.floorPowerOfTwo(e)/2,n=1024,this.reflector.setSize(e,n)}}],r&&X(n.prototype,r),i&&X(n,i),a}(t.Group);var Y=n(465),j=n.n(Y);function V(t){var e,n=this,r=(e=4022871197,function(t){t=String(t);for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)});n.random=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(t),n.s0<0&&(n.s0+=1),n.s1-=r(t),n.s1<0&&(n.s1+=1),n.s2-=r(t),n.s2<0&&(n.s2+=1)}function G(t,e){return Math.floor(Math.random()*(e-t+1)+t)}function H(t){return G(0,t)}const k={random:{int:G,uint:H,item:function(t){return t[H(t.length-1)]},boolean:function(){return Math.random()<.5}}},W=[["black","white","red","green","blue","pink","purple","orange","silver","golden","iron","stone","velvet","opal","ivory","coral","broken","pearl","silk","fire","ice","thunder","falling","rising","diamond","turquoise","ruby","emerald","onyx","lapis","jade","amber"],["shield","sword","spear","arrow","knight","king","queen","phoenix","box","garden","flower","apple","echo","gambit","fist","dragon","sun","moon","star","cloud","rain","wind","dawn","storm","eagle","tiger","lion","puma","wolf","panther","dove","fox"]],q=[["loud","adorab","glad","zealous","grumpi","happi","polite","expert","awkward","warm","sincere","shy","quiet","lazi","mad","bold"].map((t=>`${t}ly`)),["beam","giggl","paint","smil","danc","laugh","sing","sneez","clapp","whistl","hopp","cheer","fly","greet","wav","juggl"].map((t=>`${t}ing`)),["smart","creative","bubbly","fun","cute","tiny","giant","laidback","upbeat","kind","cool","brave","dumb","tipsy","popular","generous"],["puppy","kitten","monkey","pumpkin","robot","nun","ninja","giraffe","baby","penguin","panda","koala","bear","wizard","pirate","knight"]],$="abcdefghijklmnopqrstuvwxyz".split(""),K="aeiou".split(""),Z=$.filter((t=>!K.includes(t))),tt={alphabet:$,vowels:K,consonnants:Z},et={CODENAME:"codename",DESCRIPTION:"description",GIBBERISH:"gibberish",SERIAL:"serial"};const nt={NONE:"",DASH:"-",DOT:".",TILDE:"~",UNDERSCORE:"_"};let rt="";function it(t){return k.random.item(t)}function ot(){const{verbose:t,separator:e}=ct;return(t?[...W.map(it),k.random.uint(999)]:W.map(it)).join(e)}function at(){const{verbose:t,separator:e}=ct;return(t?q:[q[1],q[3]]).map(it).join(e)}function st(){const{verbose:t}=ct,{vowels:e,consonnants:n}=tt,r=t?8:4;return Array.from({length:r},((t,r)=>{const i=r%2?e:n;return k.random.item(i)})).join("")}function ut(){const{verbose:t}=ct,e=t?8:4,n=tt.alphabet.filter((t=>!"ilo".includes(t)));return Array.from({length:e},(()=>ct.bool()?k.random.item(n).toUpperCase():k.random.int(1,9))).join("")}function lt(){const{mode:t}=ct,e={codename:ot,description:at,gibberish:st,serial:ut}[t]||ot;return ct.seed=e(),ct.seed}const ct={modes:et,mode:et.CODENAME,separators:nt,separator:nt.NONE,verbose:!1,prng:new V(rt),codename:ot,description:at,gibberish:st,serial:ut,autoseed:lt,reset:function(){ct.prng=new V(ct.seed)},random:function(t=0,e=1,n=!1){const{prng:r}=ct,i=r.random();return isNaN(t)||isNaN(e)?i:n?Math.floor(i*(e-t+1)+t):i*(e-t)+t},int:function(t,e){return ct.random(t,e,!0)},uint:function(t){return ct.int(0,t)},item:function(t){return t[ct.uint(t.length-1)]},bool:function(){return ct.random()<.5},char:function(t){return t.charAt(ct.uint(t.length-1))},get seed(){return rt},set seed(t){rt=t,this.reset()}};lt();const dt=ct;function ht(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function ft(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?ht(Object(n),!0).forEach((function(e){pt(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):ht(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function pt(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var mt={CAMERA_SPEED:.02,CAMERA_X:0,CAMERA_Y:.5,CAMERA_Z:10,CAMERA_Z_PORTRAIT:14,FLOOR_SIZE:110,FLOOR_TEXTURE_URL:"textures/polished_concrete_basecolor.jpg",FLOOR_Y:-1.35,MAX_FPS:60,MIN_HUE:0,MAX_HUE:2*Math.PI,MIN_PASSES:1,MAX_PASSES:4,MIN_SATURATION:0,MAX_SATURATION:3,MIN_SMOOTHNESS:3,MAX_SMOOTHNESS:30,MIN_SPEED:1,MAX_SPEED:100,MIN_ORB_VALUE:0,MAX_ORB_VALUE:1,ORB_ROTATION_SPEED:.01,ORB_SEGMENTS:320,ORB_Z_LANDSCAPE:0,ORB_Z_PORTRAIT:2,SAVE_BUTTON_LABEL:"save (URL)",STORAGE_LAST:"last",STORAGE_GUI:"closeGUI",STORAGE_DURATION:36e5,TITLE:"Orion",VIGNETTE_TOP:.72,VIGNETTE_BOTTOM:1.2,VIGNETTE_FALLOFF:.25,DIGITS:2},vt=30,gt={adjustments:{hue:{min:0,max:2*Math.PI},saturation:{min:0,max:3}},orb:{passes:{min:2,max:4,round:!0},speed:{min:1,max:vt,round:!0},smoothness:{min:5,max:10,round:!0},value1:{min:0,max:1},value2:{min:0,max:1}},rotationSpeed:{x:{min:-30,max:vt,round:!0},y:{min:-30,max:vt,round:!0},z:{min:-30,max:vt,round:!0}}},xt=ft(ft({},mt),{},{defaults:{adjustments:{hue:0,saturation:1.5},bloom:{threshold:.6,strength:.2,radius:.8},orb:{passes:3,speed:6,smoothness:7,value1:.7,value2:.9,rotationSpeed:{x:0,y:9,z:0}}},random:gt});const yt=dat.gui;var _t={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tuniform float opacity;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\t\t\tgl_FragColor = opacity * texel;\n\n\t\t}"};class bt{constructor(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}}const At=new t.OrthographicCamera(-1,1,1,-1,0,1),Tt=new t.BufferGeometry;Tt.setAttribute("position",new t.Float32BufferAttribute([-1,3,0,-1,-1,0,3,-1,0],3)),Tt.setAttribute("uv",new t.Float32BufferAttribute([0,2,0,0,2,0],2));class St{constructor(e){this._mesh=new t.Mesh(Tt,e)}dispose(){this._mesh.geometry.dispose()}render(t){t.render(this._mesh,At)}get material(){return this._mesh.material}set material(t){this._mesh.material=t}}class Nt extends bt{constructor(e,n){super(),this.textureID=void 0!==n?n:"tDiffuse",e instanceof t.ShaderMaterial?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=t.UniformsUtils.clone(e.uniforms),this.material=new t.ShaderMaterial({defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.fsQuad=new St(this.material)}render(t,e,n){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=n.texture),this.fsQuad.material=this.material,this.renderToScreen?(t.setRenderTarget(null),this.fsQuad.render(t)):(t.setRenderTarget(e),this.clear&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),this.fsQuad.render(t))}}class Ft extends bt{constructor(t,e){super(),this.scene=t,this.camera=e,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(t,e,n){const r=t.getContext(),i=t.state;let o,a;i.buffers.color.setMask(!1),i.buffers.depth.setMask(!1),i.buffers.color.setLocked(!0),i.buffers.depth.setLocked(!0),this.inverse?(o=0,a=1):(o=1,a=0),i.buffers.stencil.setTest(!0),i.buffers.stencil.setOp(r.REPLACE,r.REPLACE,r.REPLACE),i.buffers.stencil.setFunc(r.ALWAYS,o,4294967295),i.buffers.stencil.setClear(a),i.buffers.stencil.setLocked(!0),t.setRenderTarget(n),this.clear&&t.clear(),t.render(this.scene,this.camera),t.setRenderTarget(e),this.clear&&t.clear(),t.render(this.scene,this.camera),i.buffers.color.setLocked(!1),i.buffers.depth.setLocked(!1),i.buffers.stencil.setLocked(!1),i.buffers.stencil.setFunc(r.EQUAL,1,4294967295),i.buffers.stencil.setOp(r.KEEP,r.KEEP,r.KEEP),i.buffers.stencil.setLocked(!0)}}class wt extends bt{constructor(){super(),this.needsSwap=!1}render(t){t.state.buffers.stencil.setLocked(!1),t.state.buffers.stencil.setTest(!1)}}class Pt{constructor(e,n){if(this.renderer=e,void 0===n){const r={minFilter:t.LinearFilter,magFilter:t.LinearFilter,format:t.RGBAFormat},i=e.getSize(new t.Vector2);this._pixelRatio=e.getPixelRatio(),this._width=i.width,this._height=i.height,(n=new t.WebGLRenderTarget(this._width*this._pixelRatio,this._height*this._pixelRatio,r)).texture.name="EffectComposer.rt1"}else this._pixelRatio=1,this._width=n.width,this._height=n.height;this.renderTarget1=n,this.renderTarget2=n.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],void 0===_t&&console.error("THREE.EffectComposer relies on CopyShader"),void 0===Nt&&console.error("THREE.EffectComposer relies on ShaderPass"),this.copyPass=new Nt(_t),this.clock=new t.Clock}swapBuffers(){const t=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=t}addPass(t){this.passes.push(t),t.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(t,e){this.passes.splice(e,0,t),t.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(t){const e=this.passes.indexOf(t);-1!==e&&this.passes.splice(e,1)}isLastEnabledPass(t){for(let e=t+1;e<this.passes.length;e++)if(this.passes[e].enabled)return!1;return!0}render(t){void 0===t&&(t=this.clock.getDelta());const e=this.renderer.getRenderTarget();let n=!1;for(let e=0,r=this.passes.length;e<r;e++){const r=this.passes[e];if(!1!==r.enabled){if(r.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(e),r.render(this.renderer,this.writeBuffer,this.readBuffer,t,n),r.needsSwap){if(n){const e=this.renderer.getContext(),n=this.renderer.state.buffers.stencil;n.setFunc(e.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,t),n.setFunc(e.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==Ft&&(r instanceof Ft?n=!0:r instanceof wt&&(n=!1))}}this.renderer.setRenderTarget(e)}reset(e){if(void 0===e){const n=this.renderer.getSize(new t.Vector2);this._pixelRatio=this.renderer.getPixelRatio(),this._width=n.width,this._height=n.height,(e=this.renderTarget1.clone()).setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(t,e){this._width=t,this._height=e;const n=this._width*this._pixelRatio,r=this._height*this._pixelRatio;this.renderTarget1.setSize(n,r),this.renderTarget2.setSize(n,r);for(let t=0;t<this.passes.length;t++)this.passes[t].setSize(n,r)}setPixelRatio(t){this._pixelRatio=t,this.setSize(this._width,this._height)}}new t.OrthographicCamera(-1,1,1,-1,0,1);const Lt=new t.BufferGeometry;Lt.setAttribute("position",new t.Float32BufferAttribute([-1,3,0,-1,-1,0,3,-1,0],3)),Lt.setAttribute("uv",new t.Float32BufferAttribute([0,2,0,0,2,0],2));class Ot extends bt{constructor(e,n,r,i,o){super(),this.scene=e,this.camera=n,this.overrideMaterial=r,this.clearColor=i,this.clearAlpha=void 0!==o?o:0,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new t.Color}render(t,e,n){const r=t.autoClear;let i,o;t.autoClear=!1,void 0!==this.overrideMaterial&&(o=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor&&(t.getClearColor(this._oldClearColor),i=t.getClearAlpha(),t.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&t.clearDepth(),t.setRenderTarget(this.renderToScreen?null:n),this.clear&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),t.render(this.scene,this.camera),this.clearColor&&t.setClearColor(this._oldClearColor,i),void 0!==this.overrideMaterial&&(this.scene.overrideMaterial=o),t.autoClear=r}}class Et{constructor(t={}){this.name=t.name,this.type=t.type,this.node=t.node,this.needsUpdate=t.needsUpdate}get value(){return this.node.value}set value(t){this.node.value=t}}const Rt={elements:["x","y","z","w"],addShortcuts:function(){function t(t,e,n){return n?{get:function(){return this[t][e][n]},set:function(r){this[t][e][n]=r}}:{get:function(){return this[t][e]},set:function(n){this[t][e]=n}}}return function(e,n,r){const i={};for(let e=0;e<r.length;++e){const o=r[e].split("."),a=o[0],s=o[1];i[a]=t(n,a,s)}Object.defineProperties(e,i)}}()},Mt={nodes:{},keywords:{},add:function(t){this.nodes[t.name]=t},addKeyword:function(t,e,n){n=void 0===n||n,this.keywords[t]={callback:e,cache:n}},remove:function(t){delete this.nodes[t.name]},removeKeyword:function(t){delete this.keywords[t]},get:function(t){return this.nodes[t]},getKeyword:function(t,e){return this.keywords[t].callback.call(this,e)},getKeywordData:function(t){return this.keywords[t]},contains:function(t){return void 0!==this.nodes[t]},containsKeyword:function(t){return void 0!==this.keywords[t]}};class It{constructor(e){this.uuid=t.MathUtils.generateUUID(),this.name="",this.type=e,this.userData={}}analyze(t,e={}){t.analyzing=!0,this.build(t.addFlow(e.slot,e.cache,e.context),"v4"),t.clearVertexNodeCode(),t.clearFragmentNodeCode(),t.removeFlow(),t.analyzing=!1}analyzeAndFlow(t,e,n={}){return this.analyze(t,n),this.flow(t,e,n)}flow(t,e,n={}){t.addFlow(n.slot,n.cache,n.context);const r={};return r.result=this.build(t,e),r.code=t.clearNodeCode(),r.extra=t.context.extra,t.removeFlow(),r}build(t,e,n){e=e||this.getType(t,e);const r=t.getNodeData(n||this);return t.analyzing&&this.appendDepsNode(t,r,e),-1===t.nodes.indexOf(this)&&t.nodes.push(this),void 0!==this.updateFrame&&-1===t.updaters.indexOf(this)&&t.updaters.push(this),this.generate(t,e,n)}generate(){}getHash(){let t,e,n="{";for(t in this)e=this[t],e instanceof It&&(n+='"'+t+'":'+e.getHash()+",");if(this.hashProperties)for(let r=0;r<this.hashProperties.length;r++)t=this.hashProperties[r],e=this[t],n+='"'+t+'":"'+String(e)+'",';return n+='"id":"'+this.uuid+'"}',n}appendDepsNode(t,e,n){e.deps=(e.deps||0)+1;const r=t.getTypeLength(n);(r>(e.outputMax||0)||this.getType(t,n))&&(e.outputMax=r,e.output=n)}setName(t){return this.name=t,this}getName(){return this.name}getType(t,e){return"sampler2D"===e||"samplerCube"===e?e:this.type}getJSONNode(t){if(!(void 0===t||"string"==typeof t)&&void 0!==t.nodes[this.uuid])return t.nodes[this.uuid]}copy(t){return void 0!==t.name&&(this.name=t.name),void 0!==t.userData&&(this.userData=JSON.parse(JSON.stringify(t.userData))),this}createJSONNode(t){const e=void 0===t||"string"==typeof t,n={};if("string"!=typeof this.nodeType)throw new Error("Node does not allow serialization.");return n.uuid=this.uuid,n.nodeType=this.nodeType,""!==this.name&&(n.name=this.name),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),e||(t.nodes[this.uuid]=n),n}toJSON(t){return this.getJSONNode(t)||this.createJSONNode(t)}}It.prototype.isNode=!0,It.prototype.hashProperties=void 0;class Ut extends It{constructor(t,e={}){super(t),this.shared=void 0===e.shared||e.shared,this.unique=void 0!==e.unique&&e.unique}build(e,n,r,i){if(n=n||this.getType(e),this.getShared(e,n)){const o=this.getUnique(e,n);o&&void 0===this.constructor.uuid&&(this.constructor.uuid=t.MathUtils.generateUUID()),r=e.getUuid(r||this.getUuid(),!o);const a=e.getNodeData(r),s=a.output||this.getType(e);if(e.analyzing)return(a.deps||0)>0||this.getLabel()?(this.appendDepsNode(e,a,n),this.generate(e,n,r)):super.build(e,n,r);if(o)return a.name=a.name||super.build(e,n,r),a.name;if(!this.getLabel()&&(!this.getShared(e,s)||e.context.ignoreCache||1===a.deps))return super.build(e,n,r);r=this.getUuid(!1);let u=this.getTemp(e,r);if(u)return e.format(u,s,n);{u=Ut.prototype.generate.call(this,e,n,r,a.output,i);const t=this.generate(e,s,r);return e.addNodeCode(u+" = "+t+";"),e.format(u,s,n)}}return super.build(e,n,r)}getShared(t,e){return"sampler2D"!==e&&"samplerCube"!==e&&this.shared}getUnique(){return this.unique}setLabel(t){return this.label=t,this}getLabel(){return this.label}getUuid(t){let e=(t||null==t)&&this.constructor.uuid||this.uuid;return"string"==typeof this.scope&&(e=this.scope+"-"+e),e}getTemp(t,e){e=e||this.uuid;const n=t.getVars()[e];return n?n.name:void 0}generate(t,e,n,r,i){return this.getShared(t,e)||console.error("THREE.TempNode is not shared!"),n=n||this.uuid,t.getTempVar(n,r||this.getType(t),i,this.getLabel()).name}}const Ct=/^\s*([a-z_0-9]+)\s+([a-z_0-9]+)\s*\(([\s\S]*?)\)/i,Xt=/[a-z_0-9]+/gi;class Dt extends Ut{constructor(t,e,n,r,i){super(i),this.isMethod=void 0===i,this.isInterface=!1,this.parse(t,e,n,r)}getShared(){return!this.isMethod}getType(t){return t.getTypeByFormat(this.type)}getInputByName(t){let e=this.inputs.length;for(;e--;)if(this.inputs[e].name===t)return this.inputs[e]}getIncludeByName(t){let e=this.includes.length;for(;e--;)if(this.includes[e].name===t)return this.includes[e]}generate(t,e){let n,r=0,i=this.src;for(let e=0;e<this.includes.length;e++)t.include(this.includes[e],this);for(const e in this.extensions)t.extensions[e]=!0;const o=[];for(;n=Xt.exec(this.src);)o.push(n);for(let e=0;e<o.length;e++){const n=o[e],a=n[0],s=!this.isMethod||!this.getInputByName(a);let u=a;if(this.keywords[a]||this.useKeywords&&s&&Mt.containsKeyword(a)){let e=this.keywords[a];if(!e){const n=Mt.getKeywordData(a);n.cache&&(e=t.keywords[a]),e=e||Mt.getKeyword(a,t),n.cache&&(t.keywords[a]=e)}u=e.build(t)}a!==u&&(i=i.substring(0,n.index+r)+u+i.substring(n.index+a.length+r),r+=u.length-a.length),void 0===this.getIncludeByName(u)&&Mt.contains(u)&&t.include(Mt.get(u))}return"source"===e?i:this.isMethod?(this.isInterface||t.include(this,!1,i),this.name):t.format("( "+i+" )",this.getType(t),e)}parse(t,e,n,r){if(this.src=t||"",this.includes=e||[],this.extensions=n||{},this.keywords=r||{},this.isMethod){const t=this.src.match(Ct);if(this.inputs=[],t&&4==t.length){this.type=t[1],this.name=t[2];const e=t[3].match(Xt);if(e){let t=0;for(;t<e.length;){let n,r=e[t++];"in"===r||"out"===r||"inout"===r?n=e[t++]:(n=r,r="");const i=e[t++];this.inputs.push({name:i,type:n,qualifier:r})}}this.isInterface=-1===this.src.indexOf("{")}else this.type="",this.name=""}}copy(t){return super.copy(t),this.isMethod=t.isMethod,this.useKeywords=t.useKeywords,this.parse(t.src,t.includes,t.extensions,t.keywords),void 0!==t.type&&(this.type=t.type),this}toJSON(t){let e=this.getJSONNode(t);if(!e){e=this.createJSONNode(t),e.src=this.src,e.isMethod=this.isMethod,e.useKeywords=this.useKeywords,this.isMethod||(e.type=this.type),e.extensions=JSON.parse(JSON.stringify(this.extensions)),e.keywords={};for(const n in this.keywords)e.keywords[n]=this.keywords[n].toJSON(t).uuid;if(this.includes.length){e.includes=[];for(let n=0;n<this.includes.length;n++)e.includes.push(this.includes[n].toJSON(t).uuid)}}return e}}Dt.prototype.nodeType="Function",Dt.prototype.useKeywords=!0;const zt=/^([a-z_0-9]+)\s([a-z_0-9]+)\s?\=?\s?(.*?)(\;|$)/i;class Bt extends Ut{constructor(t,e){super(),this.parse(t||Bt.PI,e)}getType(t){return t.getTypeByFormat(this.type)}parse(t,e){this.src=t||"";let n,r,i="";const o=this.src.match(zt);this.useDefine=e||"#"===this.src.charAt(0),o&&o.length>1?(r=o[1],n=o[2],i=o[3]):(n=this.src,r="f"),this.name=n,this.type=r,this.value=i}build(t,e){return"source"!==e?(t.include(this),t.format(this.name,this.getType(t),e)):this.value?this.useDefine?"#define "+this.name+" "+this.value:"const "+this.type+" "+this.name+" = "+this.value+";":this.useDefine?this.src:void 0}generate(t,e){return t.format(this.name,this.getType(t),e)}copy(t){return super.copy(t),this.parse(t.src,t.useDefine),this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.src=this.src,!0===e.useDefine&&(e.useDefine=!0)),e}}Bt.prototype.nodeType="Const",Bt.PI="PI",Bt.PI2="PI2",Bt.RECIPROCAL_PI="RECIPROCAL_PI",Bt.RECIPROCAL_PI2="RECIPROCAL_PI2",Bt.LOG2="LOG2",Bt.EPSILON="EPSILON";const Jt=/^struct\s*([a-z_0-9]+)\s*{\s*((.|\n)*?)}/gim,Qt=/\s*(\w*?)\s*(\w*?)(\=|\;)/gim;class Yt extends Ut{constructor(t){super(),this.parse(t)}getType(t){return t.getTypeByFormat(this.name)}getInputByName(t){let e=this.inputs.length;for(;e--;)if(this.inputs[e].name===t)return this.inputs[e]}generate(t,e){return"source"===e?this.src+";":t.format("( "+this.src+" )",this.getType(t),e)}parse(t=""){this.src=t,this.inputs=[];const e=Jt.exec(this.src);if(e){const t=e[2];let n;for(;n=Qt.exec(t);)this.inputs.push({type:n[1],name:n[2]});this.name=e[1]}else this.name="";this.type=this.name}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.src=this.src),e}}Yt.prototype.nodeType="Struct";class jt extends Ut{constructor(t,e){(e=e||{}).shared=void 0!==e.shared&&e.shared,super(t,e),this.readonly=!1}setReadonly(t){return this.readonly=t,this.hashProperties=this.readonly?["value"]:void 0,this}getReadonly(){return this.readonly}copy(t){return super.copy(t),void 0!==t.readonly&&(this.readonly=t.readonly),this}createJSONNode(t){const e=super.createJSONNode(t);return!0===this.readonly&&(e.readonly=this.readonly),e}generate(t,e,n,r,i,o){n=t.getUuid(n||this.getUuid()),r=r||this.getType(t);const a=t.getNodeData(n);return this.getReadonly(t)&&void 0!==this.generateReadonly?this.generateReadonly(t,e,n,r,i,o):t.isShader("vertex")?(a.vertex||(a.vertex=t.createVertexUniform(r,this,i,o,this.getLabel())),t.format(a.vertex.name,r,e)):(a.fragment||(a.fragment=t.createFragmentUniform(r,this,i,o,this.getLabel())),t.format(a.fragment.name,r,e))}}class Vt extends jt{constructor(e,n){super("v2"),this.value=e instanceof t.Vector2?e:new t.Vector2(e,n)}generateReadonly(t,e,n,r){return t.format("vec2( "+this.x+", "+this.y+" )",r,e)}copy(t){return super.copy(t),this.value.copy(t),this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.x=this.x,e.y=this.y,!0===this.readonly&&(e.readonly=!0)),e}}Vt.prototype.nodeType="Vector2",Rt.addShortcuts(Vt.prototype,"value",["x","y"]);class Gt extends jt{constructor(e,n,r){super("v3"),this.value=e instanceof t.Vector3?e:new t.Vector3(e,n,r)}generateReadonly(t,e,n,r){return t.format("vec3( "+this.x+", "+this.y+", "+this.z+" )",r,e)}copy(t){return super.copy(t),this.value.copy(t),this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.x=this.x,e.y=this.y,e.z=this.z,!0===this.readonly&&(e.readonly=!0)),e}}Gt.prototype.nodeType="Vector3",Rt.addShortcuts(Gt.prototype,"value",["x","y","z"]);class Ht extends jt{constructor(e,n,r,i){super("v4"),this.value=e instanceof t.Vector4?e:new t.Vector4(e,n,r,i)}generateReadonly(t,e,n,r){return t.format("vec4( "+this.x+", "+this.y+", "+this.z+", "+this.w+" )",r,e)}copy(t){return super.copy(t),this.value.copy(t),this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.x=this.x,e.y=this.y,e.z=this.z,e.w=this.w,!0===this.readonly&&(e.readonly=!0)),e}}Ht.prototype.nodeType="Vector4",Rt.addShortcuts(Ht.prototype,"value",["x","y","z","w"]);class kt extends Ut{constructor(t){super("v2",{shared:!1}),this.index=t||0}generate(t,e){t.requires.uv[this.index]=!0;const n=this.index>0?this.index+1:"",r=t.isShader("vertex")?"uv"+n:"vUv"+n;return t.format(r,this.getType(t),e)}copy(t){return super.copy(t),this.index=t.index,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.index=this.index),e}}kt.prototype.nodeType="UV",Mt.addKeyword("uv",(function(){return new kt})),Mt.addKeyword("uv2",(function(){return new kt(1)}));class Wt extends jt{constructor(t){super("f"),this.value=t||0}generateReadonly(t,e,n,r){return t.format(this.value+(this.value%1?"":".0"),r,e)}copy(t){return super.copy(t),this.value=t.value,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.value=this.value,!0===this.readonly&&(e.readonly=!0)),e}}Wt.prototype.nodeType="Float";class qt extends Dt{constructor(t,e,n,r,i){super(t,i,r,n,e)}}qt.prototype.nodeType="Expression";class $t extends Ut{constructor(t,e){super("v4"),this.input=t,this.method=e||$t.LINEAR_TO_LINEAR}generate(t,e){const n=this.input.build(t,"v4"),r=this.getType(t),i=$t.Nodes[this.method],o=t.include(i);if(o===$t.LINEAR_TO_LINEAR)return t.format(n,r,e);if(2===i.inputs.length){const i=this.factor.build(t,"f");return t.format(o+"( "+n+", "+i+" )",r,e)}return t.format(o+"( "+n+" )",r,e)}fromEncoding(t){const e=$t.getEncodingComponents(t);this.method="LinearTo"+e[0],this.factor=e[1]}fromDecoding(t){const e=$t.getEncodingComponents(t);this.method=e[0]+"ToLinear",this.factor=e[1]}copy(t){return super.copy(t),this.input=t.input,this.method=t.method,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.input=this.input.toJSON(t).uuid,e.method=this.method),e}}$t.Nodes=function(){const t=new Dt("\n\t\tvec4 LinearToLinear( in vec4 value ) {\n\n\t\t\treturn value;\n\n\t\t}"),e=new Dt("\n\t\tvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\n\t\t\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n\n\t\t}"),n=new Dt("\n\t\tvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\n\t\t\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n\n\t\t}"),r=new Dt("\n\t\tvec4 sRGBToLinear( in vec4 value ) {\n\n\t\t\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n\n\t\t}"),i=new Dt("\n\t\tvec4 LinearTosRGB( in vec4 value ) {\n\n\t\t\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n\n\t\t}"),o=new Dt("\n\t\tvec4 RGBEToLinear( in vec4 value ) {\n\n\t\t\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n\n\t\t}"),a=new Dt("\n\t\tvec4 LinearToRGBE( in vec4 value ) {\n\n\t\t\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\t\t\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\t\t\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n\n\t\t}"),s=new Dt("\n\t\tvec3 RGBMToLinear( in vec4 value, in float maxRange ) {\n\n\t\t\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\n\n\t\t}"),u=new Dt("\n\t\tvec3 LinearToRGBM( in vec4 value, in float maxRange ) {\n\n\t\t\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\t\t\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\t\t\tM            = ceil( M * 255.0 ) / 255.0;\n\t\t\treturn vec4( value.rgb / ( M * maxRange ), M );\n\n\t\t}"),l=new Dt("\n\t\tvec3 RGBDToLinear( in vec4 value, in float maxRange ) {\n\n\t\t\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n\n\t\t}"),c=new Dt("\n\t\tvec3 LinearToRGBD( in vec4 value, in float maxRange ) {\n\n\t\t\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\t\t\tfloat D      = max( maxRange / maxRGB, 1.0 );\n\t\t\tD            = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\t\t\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n\n\t\t}"),d=new Bt("const mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );"),h=new Dt("\n\t\tvec4 LinearToLogLuv( in vec4 value ) {\n\n\t\t\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\t\t\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n\t\t\tvec4 vResult;\n\t\t\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\t\t\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\t\t\tvResult.w = fract(Le);\n\t\t\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n\t\t\treturn vResult;\n\n\t\t}",[d]),f=new Bt("const mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );");return{LinearToLinear:t,GammaToLinear:e,LinearToGamma:n,sRGBToLinear:r,LinearTosRGB:i,RGBEToLinear:o,LinearToRGBE:a,RGBMToLinear:s,LinearToRGBM:u,RGBDToLinear:l,LinearToRGBD:c,cLogLuvM:d,LinearToLogLuv:h,cLogLuvInverseM:f,LogLuvToLinear:new Dt("\n\t\tvec4 LogLuvToLinear( in vec4 value ) {\n\n\t\t\tfloat Le = value.z * 255.0 + value.w;\n\t\t\tvec3 Xp_Y_XYZp;\n\t\t\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n\t\t\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\t\t\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\t\t\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\t\t\treturn vec4( max(vRGB, 0.0), 1.0 );\n\n\t\t}",[f])}}(),$t.LINEAR_TO_LINEAR="LinearToLinear",$t.GAMMA_TO_LINEAR="GammaToLinear",$t.LINEAR_TO_GAMMA="LinearToGamma",$t.SRGB_TO_LINEAR="sRGBToLinear",$t.LINEAR_TO_SRGB="LinearTosRGB",$t.RGBE_TO_LINEAR="RGBEToLinear",$t.LINEAR_TO_RGBE="LinearToRGBE",$t.RGBM_TO_LINEAR="RGBMToLinear",$t.LINEAR_TO_RGBM="LinearToRGBM",$t.RGBD_TO_LINEAR="RGBDToLinear",$t.LINEAR_TO_RGBD="LinearToRGBD",$t.LINEAR_TO_LOG_LUV="LinearToLogLuv",$t.LOG_LUV_TO_LINEAR="LogLuvToLinear",$t.getEncodingComponents=function(e){switch(e){case t.LinearEncoding:return["Linear"];case t.sRGBEncoding:return["sRGB"];case t.RGBEEncoding:return["RGBE"];case t.RGBM7Encoding:return["RGBM",new Wt(7).setReadonly(!0)];case t.RGBM16Encoding:return["RGBM",new Wt(16).setReadonly(!0)];case t.RGBDEncoding:return["RGBD",new Wt(256).setReadonly(!0)];case t.GammaEncoding:return["Gamma",new qt("float( GAMMA_FACTOR )","f")]}},$t.prototype.nodeType="ColorSpace",$t.prototype.hashProperties=["method"];class Kt extends jt{constructor(t,e,n,r){super("v4",{shared:!0}),this.value=t,this.uv=e||new kt,this.bias=n,this.project=void 0!==r&&r}getTexture(t,e){return super.generate(t,e,this.value.uuid,"t")}generate(t,e){if("sampler2D"===e)return this.getTexture(t,e);const n=this.getTexture(t,e),r=this.uv.build(t,this.project?"v4":"v2");let i,o,a=this.bias?this.bias.build(t,"f"):void 0;void 0===a&&t.context.bias&&(a=t.context.bias.setTexture(this).build(t,"f")),i=this.project?"texture2DProj":a?"tex2DBias":"tex2D",o=a?i+"( "+n+", "+r+", "+a+" )":i+"( "+n+", "+r+" )";const s={include:t.isShader("vertex"),ignoreCache:!0},u=this.getType(t);return t.addContext(s),this.colorSpace=this.colorSpace||new $t(new qt("",u)),this.colorSpace.fromDecoding(t.getTextureEncodingFromMap(this.value)),this.colorSpace.input.parse(o),o=this.colorSpace.build(t,u),t.removeContext(),t.format(o,u,e)}copy(t){return super.copy(t),t.value&&(this.value=t.value),this.uv=t.uv,t.bias&&(this.bias=t.bias),void 0!==t.project&&(this.project=t.project),this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),this.value&&(e.value=this.value.uuid),e.uv=this.uv.toJSON(t).uuid,e.project=this.project,this.bias&&(e.bias=this.bias.toJSON(t).uuid)),e}}Kt.prototype.nodeType="Texture";class Zt extends Ut{constructor(t){super("v3"),this.scope=t||Zt.LOCAL}getType(){return this.scope===Zt.PROJECTION?"v4":this.type}getShared(){switch(this.scope){case Zt.LOCAL:case Zt.WORLD:return!1}return!0}generate(t,e){let n;switch(this.scope){case Zt.LOCAL:t.isShader("vertex")?n="transformed":(t.requires.position=!0,n="vPosition");break;case Zt.WORLD:if(t.isShader("vertex"))return"( modelMatrix * vec4( transformed, 1.0 ) ).xyz";t.requires.worldPosition=!0,n="vWPosition";break;case Zt.VIEW:n=t.isShader("vertex")?"-mvPosition.xyz":"vViewPosition";break;case Zt.PROJECTION:n=t.isShader("vertex")?"( projectionMatrix * modelViewMatrix * vec4( position, 1.0 ) )":"vec4( 0.0 )"}return t.format(n,this.getType(t),e)}copy(t){return super.copy(t),this.scope=t.scope,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.scope=this.scope),e}}Zt.LOCAL="local",Zt.WORLD="world",Zt.VIEW="view",Zt.PROJECTION="projection",Zt.prototype.nodeType="Position",Mt.addKeyword("position",(function(){return new Zt})),Mt.addKeyword("worldPosition",(function(){return new Zt(Zt.WORLD)})),Mt.addKeyword("viewPosition",(function(){return new Zt(Zt.VIEW)}));class te extends Ut{constructor(t){super("v3"),this.scope=t||te.VIEW}getShared(){return this.scope===te.WORLD}build(t,e,n,r){const i=t.context[this.scope+"Normal"];return i?i.build(t,e,n,r):super.build(t,e,n)}generate(t,e){let n;switch(this.scope){case te.VIEW:n=t.isShader("vertex")?"transformedNormal":"geometryNormal";break;case te.LOCAL:t.isShader("vertex")?n="objectNormal":(t.requires.normal=!0,n="vObjectNormal");break;case te.WORLD:t.isShader("vertex")?n="inverseTransformDirection( transformedNormal, viewMatrix ).xyz":(t.requires.worldNormal=!0,n="vWNormal")}return t.format(n,this.getType(t),e)}copy(t){return super.copy(t),this.scope=t.scope,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.scope=this.scope),e}}te.LOCAL="local",te.WORLD="world",te.VIEW="view",te.prototype.nodeType="Normal",Mt.addKeyword("viewNormal",(function(){return new te(te.VIEW)})),Mt.addKeyword("localNormal",(function(){return new te(te.NORMAL)})),Mt.addKeyword("worldNormal",(function(){return new te(te.WORLD)}));class ee extends Ut{constructor(t){super("v3"),this.scope=t||ee.CUBE}getUnique(t){return!t.context.viewNormal}getType(){return this.scope===ee.SPHERE?"v2":this.type}generate(t,e){const n=this.getUnique(t);if(t.isShader("fragment")){let r,i,o;switch(this.scope){case ee.VECTOR:const e=new te(te.VIEW),a=t.context.roughness,s=e.build(t,"v3"),u=new Zt(Zt.VIEW).build(t,"v3"),l=a?a.build(t,"f"):void 0;let c=`reflect( -normalize( ${u} ), ${s} )`;l&&(c=`normalize( mix( ${c}, ${s}, ${l} * ${l} ) )`),i=`inverseTransformDirection( ${c}, viewMatrix )`,n?(t.addNodeCode(`vec3 reflectVec = ${i};`),r="reflectVec"):r=i;break;case ee.CUBE:o=new ee(ee.VECTOR).build(t,"v3"),i="vec3( -"+o+".x, "+o+".yz )",n?(t.addNodeCode(`vec3 reflectCubeVec = ${i};`),r="reflectCubeVec"):r=i;break;case ee.SPHERE:o=new ee(ee.VECTOR).build(t,"v3"),i="normalize( ( viewMatrix * vec4( "+o+", 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) ).xy * 0.5 + 0.5",n?(t.addNodeCode(`vec2 reflectSphereVec = ${i};`),r="reflectSphereVec"):r=i}return t.format(r,this.getType(t),e)}return console.warn("THREE.ReflectNode is not compatible with "+t.shader+" shader."),t.format("vec3( 0.0 )",this.type,e)}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.scope=this.scope),e}}ee.CUBE="cube",ee.SPHERE="sphere",ee.VECTOR="vector",ee.prototype.nodeType="Reflect";class ne extends jt{constructor(t,e,n){super("v4",{shared:!0}),this.value=t,this.uv=e||new ee,this.bias=n}getTexture(t,e){return super.generate(t,e,this.value.uuid,"tc")}generate(t,e){if("samplerCube"===e)return this.getTexture(t,e);const n=this.getTexture(t,e),r=this.uv.build(t,"v3");let i,o=this.bias?this.bias.build(t,"f"):void 0;void 0===o&&t.context.bias&&(o=t.context.bias.setTexture(this).build(t,"f")),i=o?"texCubeBias( "+n+", "+r+", "+o+" )":"texCube( "+n+", "+r+" )";const a={include:t.isShader("vertex"),ignoreCache:!0},s=this.getType(t);return t.addContext(a),this.colorSpace=this.colorSpace||new $t(new qt("",s)),this.colorSpace.fromDecoding(t.getTextureEncodingFromMap(this.value)),this.colorSpace.input.parse(i),i=this.colorSpace.build(t,s),t.removeContext(),t.format(i,s,e)}copy(t){return super.copy(t),t.value&&(this.value=t.value),this.uv=t.uv,t.bias&&(this.bias=t.bias),this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.value=this.value.uuid,e.uv=this.uv.toJSON(t).uuid,this.bias&&(e.bias=this.bias.toJSON(t).uuid)),e}}ne.prototype.nodeType="CubeTexture";class re extends Ut{constructor(t,e){super(),this.setFunction(t,e)}setFunction(t,e=[]){this.value=t,this.inputs=e}getFunction(){return this.value}getType(t){return this.value.getType(t)}generate(t,e){const n=this.getType(t),r=this.value;let i=r.build(t,e)+"( ";const o=[];for(let e=0;e<r.inputs.length;e++){const n=r.inputs[e],i=this.inputs[e]||this.inputs[n.name];o.push(i.build(t,t.getTypeByFormat(n.type)))}return i+=o.join(", ")+" )",t.format(i,n,e)}copy(t){super.copy(t);for(const e in t.inputs)this.inputs[e]=t.inputs[e];return this.value=t.value,this}toJSON(t){let e=this.getJSONNode(t);if(!e){const n=this.value;if(e=this.createJSONNode(t),e.value=this.value.toJSON(t).uuid,n.inputs.length){e.inputs={};for(let r=0;r<n.inputs.length;r++){const i=n.inputs[r],o=this.inputs[r]||this.inputs[i.name];e.inputs[i.name]=o.toJSON(t).uuid}}}return e}}re.prototype.nodeType="FunctionCall";class ie extends Ut{constructor(t,e,n){super(),this.a=t,this.b=e,this.op=n}getType(t){const e=this.a.getType(t),n=this.b.getType(t);return t.isTypeMatrix(e)?"v4":t.getTypeLength(n)>t.getTypeLength(e)?n:e}generate(t,e){const n=this.getType(t),r=this.a.build(t,n),i=this.b.build(t,n);return t.format("( "+r+" "+this.op+" "+i+" )",n,e)}copy(t){return super.copy(t),this.a=t.a,this.b=t.b,this.op=t.op,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.a=this.a.toJSON(t).uuid,e.b=this.b.toJSON(t).uuid,e.op=this.op),e}}ie.ADD="+",ie.SUB="-",ie.MUL="*",ie.DIV="/",ie.prototype.nodeType="Operator";class oe extends Ut{constructor(t,e,n,r){super(),this.a=t,"string"!=typeof e?this.b=e:r=e,"string"!=typeof n?this.c=n:r=n,this.method=r}getNumInputs(){switch(this.method){case oe.MIX:case oe.CLAMP:case oe.REFRACT:case oe.SMOOTHSTEP:case oe.FACEFORWARD:return 3;case oe.MIN:case oe.MAX:case oe.MOD:case oe.STEP:case oe.REFLECT:case oe.DISTANCE:case oe.DOT:case oe.CROSS:case oe.POW:return 2;default:return 1}}getInputType(t){const e=t.getTypeLength(this.a.getType(t)),n=this.b?t.getTypeLength(this.b.getType(t)):0,r=this.c?t.getTypeLength(this.c.getType(t)):0;return e>n&&e>r?this.a.getType(t):n>r?this.b.getType(t):this.c.getType(t)}getType(t){switch(this.method){case oe.LENGTH:case oe.DISTANCE:case oe.DOT:return"f";case oe.CROSS:return"v3"}return this.getInputType(t)}generate(t,e){let n,r,i;const o=this.a?t.getTypeLength(this.a.getType(t)):0,a=this.b?t.getTypeLength(this.b.getType(t)):0,s=this.c?t.getTypeLength(this.c.getType(t)):0,u=this.getInputType(t),l=this.getType(t);switch(this.method){case oe.NEGATE:return t.format("( -"+this.a.build(t,u)+" )",u,e);case oe.INVERT:return t.format("( 1.0 - "+this.a.build(t,u)+" )",u,e);case oe.CROSS:n=this.a.build(t,"v3"),r=this.b.build(t,"v3");break;case oe.STEP:n=this.a.build(t,1===o?"f":u),r=this.b.build(t,u);break;case oe.MIN:case oe.MAX:case oe.MOD:n=this.a.build(t,u),r=this.b.build(t,1===a?"f":u);break;case oe.REFRACT:n=this.a.build(t,u),r=this.b.build(t,u),i=this.c.build(t,"f");break;case oe.MIX:n=this.a.build(t,u),r=this.b.build(t,u),i=this.c.build(t,1===s?"f":u);break;default:n=this.a.build(t,u),this.b&&(r=this.b.build(t,u)),this.c&&(i=this.c.build(t,u))}const c=[];c.push(n),r&&c.push(r),i&&c.push(i);const d=this.getNumInputs(t);if(c.length!==d)throw Error(`Arguments not match used in "${this.method}". Require ${d}, currently ${c.length}.`);return t.format(this.method+"( "+c.join(", ")+" )",l,e)}copy(t){return super.copy(t),this.a=t.a,this.b=t.b,this.c=t.c,this.method=t.method,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.a=this.a.toJSON(t).uuid,this.b&&(e.b=this.b.toJSON(t).uuid),this.c&&(e.c=this.c.toJSON(t).uuid),e.method=this.method),e}}oe.RAD="radians",oe.DEG="degrees",oe.EXP="exp",oe.EXP2="exp2",oe.LOG="log",oe.LOG2="log2",oe.SQRT="sqrt",oe.INV_SQRT="inversesqrt",oe.FLOOR="floor",oe.CEIL="ceil",oe.NORMALIZE="normalize",oe.FRACT="fract",oe.SATURATE="saturate",oe.SIN="sin",oe.COS="cos",oe.TAN="tan",oe.ASIN="asin",oe.ACOS="acos",oe.ARCTAN="atan",oe.ABS="abs",oe.SIGN="sign",oe.LENGTH="length",oe.NEGATE="negate",oe.INVERT="invert",oe.MIN="min",oe.MAX="max",oe.MOD="mod",oe.STEP="step",oe.REFLECT="reflect",oe.DISTANCE="distance",oe.DOT="dot",oe.CROSS="cross",oe.POW="pow",oe.MIX="mix",oe.CLAMP="clamp",oe.REFRACT="refract",oe.SMOOTHSTEP="smoothstep",oe.FACEFORWARD="faceforward",oe.prototype.nodeType="Math",oe.prototype.hashProperties=["method"];class ae extends Ut{constructor(t,e,n){super("v4"),this.value=t,this.uv=e,this.bias=n}bilinearCubeUV(t,e,n,r){const i=new re(ae.Nodes.bilinearCubeUV,[e,n,r]);this.colorSpaceTL=this.colorSpaceTL||new $t(new qt("","v4")),this.colorSpaceTL.fromDecoding(t.getTextureEncodingFromMap(this.value.value)),this.colorSpaceTL.input.parse(i.build(t)+".tl"),this.colorSpaceTR=this.colorSpaceTR||new $t(new qt("","v4")),this.colorSpaceTR.fromDecoding(t.getTextureEncodingFromMap(this.value.value)),this.colorSpaceTR.input.parse(i.build(t)+".tr"),this.colorSpaceBL=this.colorSpaceBL||new $t(new qt("","v4")),this.colorSpaceBL.fromDecoding(t.getTextureEncodingFromMap(this.value.value)),this.colorSpaceBL.input.parse(i.build(t)+".bl"),this.colorSpaceBR=this.colorSpaceBR||new $t(new qt("","v4")),this.colorSpaceBR.fromDecoding(t.getTextureEncodingFromMap(this.value.value)),this.colorSpaceBR.input.parse(i.build(t)+".br");const o={include:t.isShader("vertex"),ignoreCache:!0};t.addContext(o),this.colorSpaceTLExp=new qt(this.colorSpaceTL.build(t,"v4"),"v4"),this.colorSpaceTRExp=new qt(this.colorSpaceTR.build(t,"v4"),"v4"),this.colorSpaceBLExp=new qt(this.colorSpaceBL.build(t,"v4"),"v4"),this.colorSpaceBRExp=new qt(this.colorSpaceBR.build(t,"v4"),"v4"),t.removeContext();const a=new qt("mix( mix( cubeUV_TL, cubeUV_TR, cubeUV.f.x ), mix( cubeUV_BL, cubeUV_BR, cubeUV.f.x ), cubeUV.f.y )","v4");return a.keywords.cubeUV_TL=this.colorSpaceTLExp,a.keywords.cubeUV_TR=this.colorSpaceTRExp,a.keywords.cubeUV_BL=this.colorSpaceBLExp,a.keywords.cubeUV_BR=this.colorSpaceBRExp,a.keywords.cubeUV=i,a}generate(t,e){if(t.isShader("fragment")){const n=this.uv,r=this.bias||t.context.roughness,i=new re(ae.Nodes.roughnessToMip,[r]),o=new oe(i,ae.Nodes.m0,ae.Nodes.cubeUV_maxMipLevel,oe.CLAMP),a=new oe(o,oe.FLOOR),s=new oe(o,oe.FRACT),u=this.bilinearCubeUV(t,this.value,n,a),l=this.bilinearCubeUV(t,this.value,n,new ie(a,new Wt(1).setReadonly(!0),ie.ADD)),c=new oe(u,l,s,oe.MIX);return t.format(c.build(t),"v4",e)}return console.warn("THREE.TextureCubeUVNode is not compatible with "+t.shader+" shader."),t.format("vec4( 0.0 )",this.getType(t),e)}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.value=this.value.toJSON(t).uuid,e.uv=this.uv.toJSON(t).uuid,e.bias=this.bias.toJSON(t).uuid),e}}ae.Nodes=function(){const t=new Yt("struct TextureCubeUVData {\n\t\t\tvec4 tl;\n\t\t\tvec4 tr;\n\t\t\tvec4 br;\n\t\t\tvec4 bl;\n\t\t\tvec2 f;\n\t\t}"),e=new Bt("float cubeUV_maxMipLevel 8.0",!0),n=new Bt("float cubeUV_minMipLevel 4.0",!0),r=new Bt("float cubeUV_maxTileSize 256.0",!0),i=new Bt("float cubeUV_minTileSize 16.0",!0),o=new Dt("float getFace(vec3 direction) {\n\t\t\t\tvec3 absDirection = abs(direction);\n\t\t\t\tfloat face = -1.0;\n\t\t\t\tif (absDirection.x > absDirection.z) {\n\t\t\t\t\tif (absDirection.x > absDirection.y)\n\t\t\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\t\t\telse\n\t\t\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t\t\t} else {\n\t\t\t\t\tif (absDirection.z > absDirection.y)\n\t\t\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\t\t\telse\n\t\t\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t\t\t}\n\t\t\t\treturn face;\n\t\t}");o.useKeywords=!1;const a=new Dt("vec2 getUV(vec3 direction, float face) {\n\t\t\t\tvec2 uv;\n\t\t\t\tif (face == 0.0) {\n\t\t\t\t\tuv = vec2(direction.z, direction.y) / abs(direction.x); // pos x\n\t\t\t\t} else if (face == 1.0) {\n\t\t\t\t\tuv = vec2(-direction.x, -direction.z) / abs(direction.y); // pos y\n\t\t\t\t} else if (face == 2.0) {\n\t\t\t\t\tuv = vec2(-direction.x, direction.y) / abs(direction.z); // pos z\n\t\t\t\t} else if (face == 3.0) {\n\t\t\t\t\tuv = vec2(-direction.z, direction.y) / abs(direction.x); // neg x\n\t\t\t\t} else if (face == 4.0) {\n\t\t\t\t\tuv = vec2(-direction.x, direction.z) / abs(direction.y); // neg y\n\t\t\t\t} else {\n\t\t\t\t\tuv = vec2(direction.x, direction.y) / abs(direction.z); // neg z\n\t\t\t\t}\n\t\t\t\treturn 0.5 * (uv + 1.0);\n\t\t}");a.useKeywords=!1;const s=new Dt("TextureCubeUVData bilinearCubeUV(sampler2D envMap, vec3 direction, float mipInt) {\n\n\t\t\tfloat face = getFace(direction);\n\t\t\tfloat filterInt = max(cubeUV_minMipLevel - mipInt, 0.0);\n\t\t\tmipInt = max(mipInt, cubeUV_minMipLevel);\n\t\t\tfloat faceSize = exp2(mipInt);\n\n\t\t\tfloat texelSize = 1.0 / (3.0 * cubeUV_maxTileSize);\n\n\t\t\tvec2 uv = getUV(direction, face) * (faceSize - 1.0);\n\t\t\tvec2 f = fract(uv);\n\t\t\tuv += 0.5 - f;\n\t\t\tif (face > 2.0) {\n\t\t\t\tuv.y += faceSize;\n\t\t\t\tface -= 3.0;\n\t\t\t}\n\t\t\tuv.x += face * faceSize;\n\t\t\tif(mipInt < cubeUV_maxMipLevel){\n\t\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t\t}\n\t\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\t\tuv.x += 3.0 * max(0.0, cubeUV_maxTileSize - 2.0 * faceSize);\n\t\t\tuv *= texelSize;\n\n\t\t\tvec4 tl = texture2D(envMap, uv);\n\t\t\tuv.x += texelSize;\n\t\t\tvec4 tr = texture2D(envMap, uv);\n\t\t\tuv.y += texelSize;\n\t\t\tvec4 br = texture2D(envMap, uv);\n\t\t\tuv.x -= texelSize;\n\t\t\tvec4 bl = texture2D(envMap, uv);\n\n\t\t\treturn TextureCubeUVData( tl, tr, br, bl, f );\n\t\t}",[t,o,a,e,n,r,i]);s.useKeywords=!1;const u=new Bt("float r0 1.0",!0),l=new Bt("float v0 0.339",!0),c=new Bt("float m0 -2.0",!0),d=new Bt("float r1 0.8",!0),h=new Bt("float v1 0.276",!0),f=new Bt("float m1 -1.0",!0),p=new Bt("float r4 0.4",!0),m=new Bt("float v4 0.046",!0),v=new Bt("float m4 2.0",!0),g=new Bt("float r5 0.305",!0),x=new Bt("float v5 0.016",!0),y=new Bt("float m5 3.0",!0),_=new Bt("float r6 0.21",!0),b=new Bt("float v6 0.0038",!0),A=new Bt("float m6 4.0",!0);return{bilinearCubeUV:s,roughnessToMip:new Dt("float roughnessToMip(float roughness) {\n\t\t\tfloat mip = 0.0;\n\t\t\tif (roughness >= r1) {\n\t\t\t\tmip = (r0 - roughness) * (m1 - m0) / (r0 - r1) + m0;\n\t\t\t} else if (roughness >= r4) {\n\t\t\t\tmip = (r1 - roughness) * (m4 - m1) / (r1 - r4) + m1;\n\t\t\t} else if (roughness >= r5) {\n\t\t\t\tmip = (r4 - roughness) * (m5 - m4) / (r4 - r5) + m4;\n\t\t\t} else if (roughness >= r6) {\n\t\t\t\tmip = (r5 - roughness) * (m6 - m5) / (r5 - r6) + m5;\n\t\t\t} else {\n\t\t\t\tmip = -2.0 * log2(1.16 * roughness);// 1.16 = 1.79^0.25\n\t\t\t}\n\t\t\treturn mip;\n\t\t}",[u,l,c,d,h,f,p,m,v,g,x,y,_,b,A]),m0:c,cubeUV_maxMipLevel:e}}(),ae.prototype.nodeType="TextureCubeUV";class se extends Ut{constructor(t,e,n){super("v4"),this.value=t,this.radianceNode=new ae(this.value,e||new ee(ee.VECTOR),n),this.irradianceNode=new ae(this.value,new te(te.WORLD),new Wt(1).setReadonly(!0))}generate(t,e){if(t.isShader("fragment")){t.require("irradiance"),t.context.bias&&t.context.bias.setTexture(this.value);return("irradiance"===t.slot?this.irradianceNode:this.radianceNode).build(t,e)}return console.warn("THREE.TextureCubeNode is not compatible with "+t.shader+" shader."),t.format("vec4( 0.0 )",this.getType(t),e)}copy(t){return super.copy(t),this.value=t.value,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.value=this.value.toJSON(t).uuid),e}}se.prototype.nodeType="TextureCube";const ue=Rt.elements,le=["float","vec2","vec3","vec4"],ce={float:"f",vec2:"v2",vec3:"v3",vec4:"v4",mat4:"v4",int:"i",bool:"b"},de={t:"sampler2D",tc:"samplerCube",b:"bool",i:"int",f:"float",c:"vec3",v2:"vec2",v3:"vec3",v4:"vec4",m3:"mat3",m4:"mat4"};class he{constructor(){this.slots=[],this.caches=[],this.contexts=[],this.keywords={},this.nodeData={},this.requires={uv:[],color:[],lights:!1,fog:!1,transparent:!1,irradiance:!1},this.includes={consts:[],functions:[],structs:[]},this.attributes={},this.prefixCode="\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\t#define texCube(a, b) textureCube(a, b)\n\t\t\t\t#define texCubeBias(a, b, c) textureCubeLodEXT(a, b, c)\n\n\t\t\t\t#define tex2D(a, b) texture2D(a, b)\n\t\t\t\t#define tex2DBias(a, b, c) texture2DLodEXT(a, b, c)\n\n\t\t\t#else\n\n\t\t\t\t#define texCube(a, b) textureCube(a, b)\n\t\t\t\t#define texCubeBias(a, b, c) textureCube(a, b, c)\n\n\t\t\t\t#define tex2D(a, b) texture2D(a, b)\n\t\t\t\t#define tex2DBias(a, b, c) texture2D(a, b, c)\n\n\t\t\t#endif\n\n\t\t\t#include <packing>\n\t\t\t#include <common>",this.parsCode={vertex:"",fragment:""},this.code={vertex:"",fragment:""},this.nodeCode={vertex:"",fragment:""},this.resultCode={vertex:"",fragment:""},this.finalCode={vertex:"",fragment:""},this.inputs={uniforms:{list:[],vertex:[],fragment:[]},vars:{varying:[],vertex:[],fragment:[]}},this.defines={},this.uniforms={},this.extensions={},this.updaters=[],this.nodes=[],this.analyzing=!1}build(t,e){this.buildShader("vertex",t),this.buildShader("fragment",e);for(let t=0;t<this.requires.uv.length;t++)if(this.requires.uv[t]){const e=t>0?t+1:"";this.addVaryCode("varying vec2 vUv"+e+";"),t>0&&this.addVertexParsCode("attribute vec2 uv"+e+";"),this.addVertexFinalCode("vUv"+e+" = uv"+e+";")}return this.requires.color[0]&&(this.addVaryCode("varying vec4 vColor;"),this.addVertexParsCode("attribute vec4 color;"),this.addVertexFinalCode("vColor = color;")),this.requires.color[1]&&(this.addVaryCode("varying vec4 vColor2;"),this.addVertexParsCode("attribute vec4 color2;"),this.addVertexFinalCode("vColor2 = color2;")),this.requires.position&&(this.addVaryCode("varying vec3 vPosition;"),this.addVertexFinalCode("vPosition = transformed;")),this.requires.worldPosition&&(this.addVaryCode("varying vec3 vWPosition;"),this.addVertexFinalCode("vWPosition = ( modelMatrix * vec4( transformed, 1.0 ) ).xyz;")),this.requires.normal&&(this.addVaryCode("varying vec3 vObjectNormal;"),this.addVertexFinalCode("vObjectNormal = normal;")),this.requires.worldNormal&&(this.addVaryCode("varying vec3 vWNormal;"),this.addVertexFinalCode("vWNormal = inverseTransformDirection( transformedNormal, viewMatrix ).xyz;")),this}buildShader(t,e){this.resultCode[t]=e.build(this.setShader(t),"v4")}setMaterial(t,e){return this.material=t,this.renderer=e,this.requires.lights=t.lights,this.requires.fog=t.fog,this.mergeDefines(t.defines),this}addFlow(t,e,n){return this.addSlot(t).addCache(e).addContext(n)}removeFlow(){return this.removeSlot().removeCache().removeContext()}addCache(t){return this.cache=t||"",this.caches.push(this.cache),this}removeCache(){return this.caches.pop(),this.cache=this.caches[this.caches.length-1]||"",this}addContext(t){return this.context=Object.assign({},this.context,t),this.context.extra=this.context.extra||{},this.contexts.push(this.context),this}removeContext(){return this.contexts.pop(),this.context=this.contexts[this.contexts.length-1]||{},this}addSlot(t=""){return this.slot=t,this.slots.push(this.slot),this}removeSlot(){return this.slots.pop(),this.slot=this.slots[this.slots.length-1]||"",this}addVertexCode(t){this.addCode(t,"vertex")}addFragmentCode(t){this.addCode(t,"fragment")}addCode(t,e){this.code[e||this.shader]+=t+"\n"}addVertexNodeCode(t){this.addNodeCode(t,"vertex")}addFragmentNodeCode(t){this.addNodeCode(t,"fragment")}addNodeCode(t,e){this.nodeCode[e||this.shader]+=t+"\n"}clearNodeCode(t){t=t||this.shader;const e=this.nodeCode[t];return this.nodeCode[t]="",e}clearVertexNodeCode(){return this.clearNodeCode("vertex")}clearFragmentNodeCode(){return this.clearNodeCode("fragment")}addVertexFinalCode(t){this.addFinalCode(t,"vertex")}addFragmentFinalCode(t){this.addFinalCode(t,"fragment")}addFinalCode(t,e){this.finalCode[e||this.shader]+=t+"\n"}addVertexParsCode(t){this.addParsCode(t,"vertex")}addFragmentParsCode(t){this.addParsCode(t,"fragment")}addParsCode(t,e){this.parsCode[e||this.shader]+=t+"\n"}addVaryCode(t){this.addVertexParsCode(t),this.addFragmentParsCode(t)}isCache(t){return-1!==this.caches.indexOf(t)}isSlot(t){return-1!==this.slots.indexOf(t)}define(t,e){this.defines[t]=void 0===e?1:e}require(t){this.requires[t]=!0}isDefined(t){return void 0!==this.defines[t]}getVar(t,e,n,r="varying",i="V",o=""){const a=this.getVars(r);let s=a[t];if(!s){const r=a.length;s={name:n||"node"+i+r+(o?"_"+o:""),type:e},a.push(s),a[t]=s}return s}getTempVar(t,e,n,r){return this.getVar(t,e,n,this.shader,"T",r)}getAttribute(t,e){if(!this.attributes[t]){const n=this.getVar(t,e);this.addVertexParsCode("attribute "+e+" "+t+";"),this.addVertexFinalCode(n.name+" = "+t+";"),this.attributes[t]={varying:n,name:t,type:e}}return this.attributes[t]}getCode(t){return[this.prefixCode,this.parsCode[t],this.getVarListCode(this.getVars("varying"),"varying"),this.getVarListCode(this.inputs.uniforms[t],"uniform"),this.getIncludesCode("consts",t),this.getIncludesCode("structs",t),this.getIncludesCode("functions",t),"void main() {",this.getVarListCode(this.getVars(t)),this.code[t],this.resultCode[t],this.finalCode[t],"}"].join("\n")}getVarListCode(t,e=""){let n="";for(let r=0,i=t.length;r<i;++r){const i=t[r],o=i.type,a=i.name,s=this.getFormatByType(o);if(void 0===s)throw new Error("Node pars "+s+" not found.");n+=e+" "+s+" "+a+";\n"}return n}getVars(t){return this.inputs.vars[t||this.shader]}getNodeData(t){const e=t.isNode?t.uuid:t;return this.nodeData[e]=this.nodeData[e]||{}}createUniform(t,e,n,r,i,o){const a=this.inputs.uniforms,s=a.list.length,u=new Et({type:e,name:r||"nodeU"+s+(o?"_"+o:""),node:n,needsUpdate:i});return a.list.push(u),a[t].push(u),a[t][u.name]=u,this.uniforms[u.name]=u,u}createVertexUniform(t,e,n,r,i){return this.createUniform("vertex",t,e,n,r,i)}createFragmentUniform(t,e,n,r,i){return this.createUniform("fragment",t,e,n,r,i)}include(t,e,n){let r;if(t="string"==typeof t?Mt.get(t):t,!1===this.context.include)return t.name;t instanceof Dt?r=this.includes.functions:t instanceof Bt?r=this.includes.consts:t instanceof Yt&&(r=this.includes.structs);const i=r[this.shader]=r[this.shader]||[];if(t){let r=i[t.name];if(r||(r=i[t.name]={node:t,deps:[]},i.push(r),r.src=t.build(this,"source")),t instanceof Dt&&e&&i[e.name]&&-1==i[e.name].deps.indexOf(t)&&(i[e.name].deps.push(t),t.includes&&t.includes.length)){let n=0;do{this.include(t.includes[n++],e)}while(n<t.includes.length)}return n&&(r.src=n),t.name}throw new Error("Include not found.")}colorToVectorProperties(t){return t.replace("r","x").replace("g","y").replace("b","z").replace("a","w")}colorToVector(t){return t.replace(/c/g,"v3")}getIncludes(t,e){return this.includes[t][e||this.shader]}getIncludesCode(t,e){let n=this.getIncludes(t,e);if(!n)return"";let r="";n=n.sort(fe);for(let t=0;t<n.length;t++)n[t].src&&(r+=n[t].src+"\n");return r}getConstructorFromLength(t){return le[t-1]}isTypeMatrix(t){return/^m/.test(t)}getTypeLength(t){return"f"===t?1:parseInt(this.colorToVector(t).substr(1))}getTypeFromLength(t){return 1===t?"f":"v"+t}findNode(){for(let t=0;t<arguments.length;t++){const e=arguments[t];if(void 0!==e&&e.isNode)return e}}resolve(){for(let e=0;e<arguments.length;e++){const n=arguments[e];if(void 0!==n){if(n.isNode)return n;if(n.isTexture)switch(n.mapping){case t.CubeReflectionMapping:case t.CubeRefractionMapping:return new ne(n);case t.CubeUVReflectionMapping:case t.CubeUVRefractionMapping:return new se(new Kt(n));default:return new Kt(n)}else{if(n.isVector2)return new Vt(n);if(n.isVector3)return new Gt(n);if(n.isVector4)return new Ht(n)}}}}format(t,e,n){switch(this.colorToVector(n+" <- "+e)){case"f <- v2":case"f <- v3":case"f <- v4":return t+".x";case"f <- i":case"f <- b":return"float( "+t+" )";case"v2 <- f":return"vec2( "+t+" )";case"v2 <- v3":case"v2 <- v4":return t+".xy";case"v2 <- i":case"v2 <- b":case"v3 <- i":case"v3 <- b":return"vec2( float( "+t+" ) )";case"v3 <- f":return"vec3( "+t+" )";case"v3 <- v2":return"vec3( "+t+", 0.0 )";case"v3 <- v4":return t+".xyz";case"v4 <- f":return"vec4( "+t+" )";case"v4 <- v2":return"vec4( "+t+", 0.0, 1.0 )";case"v4 <- v3":return"vec4( "+t+", 1.0 )";case"v4 <- i":case"v4 <- b":return"vec4( float( "+t+" ) )";case"i <- f":case"i <- b":return"int( "+t+" )";case"i <- v2":case"i <- v3":case"i <- v4":return"int( "+t+".x )";case"b <- f":return"( "+t+" != 0.0 )";case"b <- v2":return"( "+t+" != vec2( 0.0 ) )";case"b <- v3":return"( "+t+" != vec3( 0.0 ) )";case"b <- v4":return"( "+t+" != vec4( 0.0 ) )";case"b <- i":return"( "+t+" != 0 )"}return t}getTypeByFormat(t){return ce[t]||t}getFormatByType(t){return de[t]||t}getUuid(t,e){return(e=void 0===e||e)&&this.cache&&(t=this.cache+"-"+t),t}getElementByIndex(t){return ue[t]}getIndexByElement(t){return ue.indexOf(t)}isShader(t){return this.shader===t}setShader(t){return this.shader=t,this}mergeDefines(t){for(const e in t)this.defines[e]=t[e];return this.defines}mergeUniform(t){for(const e in t)this.uniforms[e]=t[e];return this.uniforms}getTextureEncodingFromMap(e){let n;return e?e.isTexture?n=e.encoding:e.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),n=e.texture.encoding):n=t.LinearEncoding,n===t.LinearEncoding&&this.context.gamma&&(n=t.GammaEncoding),n}}function fe(t,e){return t.deps.length-e.deps.length}class pe extends jt{constructor(e,n,r){super("c"),this.value=e instanceof t.Color?e:new t.Color(e||0,n,r)}generateReadonly(t,e,n,r){return t.format("vec3( "+this.r+", "+this.g+", "+this.b+" )",r,e)}copy(t){return super.copy(t),this.value.copy(t),this}toJSON(t){var e=this.getJSONNode(t);return e||((e=this.createJSONNode(t)).r=this.r,e.g=this.g,e.b=this.b,!0===this.readonly&&(e.readonly=!0)),e}}pe.prototype.nodeType="Color",Rt.addShortcuts(pe.prototype,"value",["r","g","b"]);class me extends It{constructor(t){super("v4"),this.value=t}generate(t){const e=this.value.analyzeAndFlow(t,this.type);let n=e.code+"\n";return t.isShader("vertex")?n+="gl_Position = "+e.result+";":n+="gl_FragColor = "+e.result+";",n}copy(t){return super.copy(t),this.value=t.value,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.value=this.value.toJSON(t).uuid),e}}me.prototype.nodeType="Raw";class ve extends t.ShaderMaterial{constructor(t,e){super(),this.vertex=t||new me(new Zt(Zt.PROJECTION)),this.fragment=e||new me(new pe(16711680)),this.updaters=[],this.type="NodeMaterial"}get properties(){return this.fragment.properties}get needsUpdate(){return this.needsCompile}set needsUpdate(t){!0===t&&this.version++,this.needsCompile=t}onBeforeCompile(t,e){this.build({renderer:e}),t.defines=this.defines,t.uniforms=this.uniforms,t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.extensionDerivatives=!0===this.extensions.derivatives,t.extensionFragDepth=!0===this.extensions.fragDepth,t.extensionDrawBuffers=!0===this.extensions.drawBuffers,t.extensionShaderTextureLOD=!0===this.extensions.shaderTextureLOD}customProgramCacheKey(){return this.getHash()}getHash(){let t="{";return t+='"vertex":'+this.vertex.getHash()+",",t+='"fragment":'+this.fragment.getHash(),t+="}",t}updateFrame(t){for(let e=0;e<this.updaters.length;++e)t.updateNode(this.updaters[e])}build(e={}){const n=e.builder||new he;return n.setMaterial(this,e.renderer),n.build(this.vertex,this.fragment),this.vertexShader=n.getCode("vertex"),this.fragmentShader=n.getCode("fragment"),this.defines=n.defines,this.uniforms=n.uniforms,this.extensions=n.extensions,this.updaters=n.updaters,this.fog=n.requires.fog,this.lights=n.requires.lights,this.transparent=n.requires.transparent||this.blending>t.NormalBlending,this}copy(t){const e=this.uuid;for(const e in t)this[e]=t[e];return this.uuid=e,void 0!==t.userData&&(this.userData=JSON.parse(JSON.stringify(t.userData))),this}toJSON(e){if((void 0===e||"string"==typeof e)&&(e={nodes:{}}),e&&!e.materials&&(e.materials={}),!e.materials[this.uuid]){const n={};n.uuid=this.uuid,n.type=this.type,e.materials[n.uuid]=n,""!==this.name&&(n.name=this.name),void 0!==this.size&&(n.size=this.size),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==t.NormalBlending&&(n.blending=this.blending),!0===this.flatShading&&(n.flatShading=this.flatShading),this.side!==t.FrontSide&&(n.side=this.side),this.vertexColors!==t.NoColors&&(n.vertexColors=this.vertexColors),this.depthFunc!==t.LessEqualDepth&&(n.depthFunc=this.depthFunc),!1===this.depthTest&&(n.depthTest=this.depthTest),!1===this.depthWrite&&(n.depthWrite=this.depthWrite),1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!1===this.visible&&(n.visible=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),n.fog=this.fog,n.lights=this.lights,n.vertex=this.vertex.toJSON(e).uuid,n.fragment=this.fragment.toJSON(e).uuid}return e.material=this.uuid,e}}ve.prototype.isNodeMaterial=!0;class ge extends Kt{constructor(t){super(void 0,t)}getUnique(){return!0}getTexture(t,e){return jt.prototype.generate.call(this,t,e,this.getUuid(),"t","renderTexture")}}ge.prototype.nodeType="Screen";class xe extends Nt{constructor(){super(),this.name="",this.uuid=t.MathUtils.generateUUID(),this.userData={},this.textureID="renderTexture",this.input=new ge,this.material=new ve,this.needsUpdate=!0}render(){this.needsUpdate&&(this.material.dispose(),this.material.fragment.value=this.input,this.needsUpdate=!1),this.uniforms=this.material.uniforms,super.render(...arguments)}copy(t){return this.input=t.input,this}toJSON(t){if((void 0===t||"string"==typeof t)&&(t={nodes:{}}),t&&!t.passes&&(t.passes={}),!t.passes[this.uuid]){var e={};e.uuid=this.uuid,e.type="NodePass",t.passes[this.uuid]=e,""!==this.name&&(e.name=this.name),"{}"!==JSON.stringify(this.userData)&&(e.userData=this.userData),e.input=this.input.toJSON(t).uuid}return t.pass=this.uuid,t}}(class extends It{constructor(t,e){super(t),this.value=e}getType(t){return t.getTypeByFormat(this.type)}generate(t,e){const n=t.getVar(this.uuid,this.type);return this.value&&t.isShader("vertex")&&t.addNodeCode(n.name+" = "+this.value.build(t,this.getType(t))+";"),t.format(n.name,this.getType(t),e)}copy(t){return super.copy(t),this.type=t.type,this.value=t.value,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.type=this.type,this.value&&(e.value=this.value.toJSON(t).uuid)),e}}).prototype.nodeType="Var";(class extends It{constructor(t,e){super(e),this.name=t}getAttributeType(t){return"number"==typeof this.type?t.getConstructorFromLength(this.type):this.type}getType(t){const e=this.getAttributeType(t);return t.getTypeByFormat(e)}generate(t,e){const n=this.getAttributeType(t),r=t.getAttribute(this.name,n),i=t.isShader("vertex")?this.name:r.varying.name;return t.format(i,this.getType(t),e)}copy(t){return super.copy(t),this.type=t.type,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.type=this.type),e}}).prototype.nodeType="Attribute";(class extends jt{constructor(t){super("b"),this.value=Boolean(t)}generateReadonly(t,e,n,r){return t.format(this.value,r,e)}copy(t){return super.copy(t),this.value=t.value,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.value=this.value,!0===this.readonly&&(e.readonly=!0)),e}}).prototype.nodeType="Bool";class ye extends jt{constructor(t){super("i"),this.value=Math.floor(t||0)}generateReadonly(t,e,n,r){return t.format(this.value,r,e)}copy(t){return super.copy(t),this.value=t.value,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.value=this.value,!0===this.readonly&&(e.readonly=!0)),e}}ye.prototype.nodeType="Int";class _e extends jt{constructor(e){super("m3"),this.value=e||new t.Matrix3}get elements(){return this.value.elements}set elements(t){this.value.elements=t}generateReadonly(t,e,n,r){return t.format("mat3( "+this.value.elements.join(", ")+" )",r,e)}copy(t){return super.copy(t),this.value.fromArray(t.elements),this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.elements=this.value.elements.concat()),e}}_e.prototype.nodeType="Matrix3";class be extends jt{constructor(e){super("m4"),this.value=e||new t.Matrix4}get elements(){return this.value.elements}set elements(t){this.value.elements=t}generateReadonly(t,e,n,r){return t.format("mat4( "+this.value.elements.join(", ")+" )",r,e)}copy(t){return super.copy(t),this.scope.value.fromArray(t.elements),this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.elements=this.value.elements.concat()),e}}be.prototype.nodeType="Matrix4";(class extends Ut{constructor(t){super("v4"),t&&this.setMirror(t)}setMirror(t){this.mirror=t,this.textureMatrix=new be(this.mirror.material.uniforms.textureMatrix.value),this.localPosition=new Zt(Zt.LOCAL),this.uv=new ie(this.textureMatrix,this.localPosition,ie.MUL),this.uvResult=new ie(null,this.uv,ie.ADD),this.texture=new Kt(this.mirror.material.uniforms.tDiffuse.value,this.uv,null,!0)}generate(t,e){return t.isShader("fragment")?(this.uvResult.a=this.offset,this.texture.uv=this.offset?this.uvResult:this.uv,"sampler2D"===e?this.texture.build(t,e):t.format(this.texture.build(t,this.type),this.type,e)):(console.warn("THREE.ReflectorNode is not compatible with "+t.shader+" shader."),t.format("vec4( 0.0 )",this.type,e))}copy(t){return jt.prototype.copy.call(this,t),this.scope.mirror=t.mirror,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.mirror=this.mirror.uuid,this.offset&&(e.offset=this.offset.toJSON(t).uuid)),e}}).prototype.nodeType="Reflector";class Ae extends jt{constructor(t,e,n){super(n),this.object=t,this.property=e}get value(){return this.object[this.property]}set value(t){this.object[this.property]=t}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.value=this.value,e.property=this.property),e}}Ae.prototype.nodeType="Property";(class extends Kt{constructor(e,n,r,i={}){const o=new t.WebGLRenderTarget(e,n,i);super(o.texture),this.input=r,this.clear=void 0===i.clear||i.clear,this.renderTarget=o,this.material=new ve,this.camera=new t.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new t.Scene,this.quad=new t.Mesh(new t.PlaneGeometry(2,2),this.material),this.quad.frustumCulled=!1,this.scene.add(this.quad),this.render=!0}build(t,e,n){const r=new he;return r.nodes=t.nodes,r.updaters=t.updaters,this.material.fragment.value=this.input,this.material.build({builder:r}),super.build(t,e,n)}updateFramesaveTo(e){if(this.saveTo.render=!1,this.saveTo!==this.saveToCurrent){this.saveToMaterial&&this.saveToMaterial.dispose();const e=new ve;e.fragment.value=this,e.build();const n=new t.Scene,r=new t.Mesh(new t.PlaneGeometry(2,2),e);r.frustumCulled=!1,n.add(r),this.saveToScene=n,this.saveToMaterial=e}this.saveToCurrent=this.saveTo,e.renderer.setRenderTarget(this.saveTo.renderTarget),this.saveTo.clear&&e.renderer.clear(),e.renderer.render(this.saveToScene,this.camera)}updateFrame(t){t.renderer?(this.saveTo&&!1===this.saveTo.render&&this.updateFramesaveTo(t),this.render&&(this.material.uniforms.renderTexture&&(this.material.uniforms.renderTexture.value=t.renderTexture),t.renderer.setRenderTarget(this.renderTarget),this.clear&&t.renderer.clear(),t.renderer.render(this.scene,this.camera)),this.saveTo&&!0===this.saveTo.render&&this.updateFramesaveTo(t)):console.warn("RTTNode need a renderer in NodeFrame")}copy(t){return super.copy(t),this.saveTo=t.saveTo,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=super.toJSON(t),this.saveTo&&(e.saveTo=this.saveTo.toJSON(t).uuid)),e}}).prototype.nodeType="RTT";var Te=["color","color2"],Se=["vColor","vColor2"];(class extends Ut{constructor(t){super("v4",{shared:!1}),this.index=t||0}generate(t,e){t.requires.color[this.index]=!0;const n=t.isShader("vertex")?Te[this.index]:Se[this.index];return t.format(n,this.getType(t),e)}copy(t){return super.copy(t),this.index=t.index,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.index=this.index),e}}).prototype.nodeType="Colors";class Ne extends Ut{constructor(t,e){super("v3"),this.setScope(t||Ne.POSITION),this.setCamera(e)}setCamera(t){this.camera=t,this.updateFrame=void 0!==t?this.onUpdateFrame:void 0}setScope(t){if(this.scope===Ne.DEPTH)delete this.near,delete this.far;if(this.scope=t,t===Ne.DEPTH){const t=this.camera;this.near=new Wt(t?t.near:1),this.far=new Wt(t?t.far:1200)}}getType(){return this.scope===Ne.DEPTH?"f":this.type}getUnique(){switch(this.scope){case Ne.DEPTH:case Ne.TO_VERTEX:return!0}return!1}getShared(){return this.scope!==Ne.POSITION}generate(t,e){let n;switch(this.scope){case Ne.POSITION:n="cameraPosition";break;case Ne.DEPTH:n=t.include(Ne.Nodes.depthColor)+"( "+this.near.build(t,"f")+", "+this.far.build(t,"f")+" )";break;case Ne.TO_VERTEX:n="normalize( "+new Zt(Zt.WORLD).build(t,"v3")+" - cameraPosition )"}return t.format(n,this.getType(t),e)}onUpdateFrame(){if(this.scope===Ne.DEPTH){const t=this.camera;this.near.value=t.near,this.far.value=t.far}}copy(t){if(super.copy(t),this.setScope(t.scope),t.camera&&this.setCamera(t.camera),t.scope===Ne.DEPTH)this.near.number=t.near,this.far.number=t.far;return this}toJSON(t){let e=this.getJSONNode(t);if(!e&&(e=this.createJSONNode(t),e.scope=this.scope,this.camera&&(e.camera=this.camera.uuid),this.scope===Ne.DEPTH))e.near=this.near.value,e.far=this.far.value;return e}}Ne.Nodes={depthColor:new Dt("\n\t\tfloat depthColor( float mNear, float mFar ) {\n\n\t\t\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\t\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\n\t\t\t#else\n\n\t\t\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\n\t\t\t#endif\n\n\t\t\treturn 1.0 - smoothstep( mNear, mFar, depth );\n\n\t\t}")},Ne.POSITION="position",Ne.DEPTH="depth",Ne.TO_VERTEX="toVertex",Ne.prototype.nodeType="Camera";class Fe extends Ut{constructor(t){super("v3",{shared:!1}),this.scope=t||Fe.TOTAL}generate(t,e){return t.isCache("light")?t.format("reflectedLight.directDiffuse",this.type,e):(console.warn('THREE.LightNode is only compatible in "light" channel.'),t.format("vec3( 0.0 )",this.type,e))}copy(t){return super.copy(t),this.scope=t.scope,this}toJSON(t){var e=this.getJSONNode(t);return e||((e=this.createJSONNode(t)).scope=this.scope),e}}Fe.TOTAL="total",Fe.prototype.nodeType="Light";class we extends Vt{constructor(){super(),this.size=new t.Vector2}updateFrame(t){if(t.renderer){t.renderer.getSize(this.size);const e=t.renderer.getPixelRatio();this.x=this.size.width*e,this.y=this.size.height*e}else console.warn("ResolutionNode need a renderer in NodeFrame")}copy(t){return super.copy(t),this.renderer=t.renderer,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.renderer=this.renderer.uuid),e}}we.prototype.nodeType="Resolution";(class extends Ut{constructor(t){super("v2"),this.resolution=t||new we}generate(t,e){let n;return t.isShader("fragment")?n="( gl_FragCoord.xy / "+this.resolution.build(t,"v2")+")":(console.warn("THREE.ScreenUVNode is not compatible with "+t.shader+" shader."),n="vec2( 0.0 )"),t.format(n,this.getType(t),e)}copy(t){return super.copy(t),this.resolution=t.resolution,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.resolution=this.resolution.toJSON(t).uuid),e}}).prototype.nodeType="ScreenUV";class Pe extends Ut{constructor(t,e,n,r,i){super(),this.a=t,this.b=e,this.op=n,this.ifNode=r,this.elseNode=i}getType(t){if(this.ifNode){const e=this.ifNode.getType(t),n=this.elseNode.getType(t);return t.getTypeLength(n)>t.getTypeLength(e)?n:e}return"b"}getCondType(t){return t.getTypeLength(this.b.getType(t))>t.getTypeLength(this.a.getType(t))?this.b.getType(t):this.a.getType(t)}generate(t,e){const n=this.getType(t),r=this.getCondType(t),i=this.a.build(t,r),o=this.b.build(t,r);let a;if(this.ifNode){const e=this.ifNode.build(t,n),r=this.elseNode.build(t,n);a="( "+[i,this.op,o,"?",e,":",r].join(" ")+" )"}else a="( "+i+" "+this.op+" "+o+" )";return t.format(a,this.getType(t),e)}copy(t){return super.copy(t),this.a=t.a,this.b=t.b,this.op=t.op,this.ifNode=t.ifNode,this.elseNode=t.elseNode,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.a=this.a.toJSON(t).uuid,e.b=this.b.toJSON(t).uuid,e.op=this.op,e.ifNode&&(e.ifNode=this.ifNode.toJSON(t).uuid),e.elseNode&&(e.elseNode=this.elseNode.toJSON(t).uuid)),e}}Pe.EQUAL="==",Pe.NOT_EQUAL="!=",Pe.GREATER=">",Pe.GREATER_EQUAL=">=",Pe.LESS="<",Pe.LESS_EQUAL="<=",Pe.AND="&&",Pe.OR="||",Pe.prototype.nodeType="Cond";const Le="\nvec3 mod289( vec3 x ) {\n\n\treturn x - floor( x * ( 1.0 / 289.0 ) ) * 289.0;\n\n}\n\nvec4 mod289( vec4 x ) {\n\n\treturn x - floor( x * ( 1.0 / 289.0 ) ) * 289.0;\n\n}\n\nvec4 permute( vec4 x ) {\n\n\treturn mod289( ( ( x * 34.0 ) + 1.0 ) * x );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nvec2 fade( vec2 t ) {\n\n\treturn t * t * t * ( t * ( t * 6.0 - 15.0 ) + 10.0 );\n\n}\n\nvec3 fade( vec3 t ) {\n\n\treturn t * t * t * ( t * ( t * 6.0 - 15.0 ) + 10.0 );\n\n}\n".trim(),Oe="\nfloat noise2d( vec2 P, float amplitude, float pivot ) {\n\n\tvec4 Pi = floor(P.xyxy) + vec4(0.0, 0.0, 1.0, 1.0);\n\tvec4 Pf = fract(P.xyxy) - vec4(0.0, 0.0, 1.0, 1.0);\n\tPi = mod289(Pi); // To avoid truncation effects in permutation\n\tvec4 ix = Pi.xzxz;\n\tvec4 iy = Pi.yyww;\n\tvec4 fx = Pf.xzxz;\n\tvec4 fy = Pf.yyww;\n\n\tvec4 i = permute(permute(ix) + iy);\n\n\tvec4 gx = fract(i * (1.0 / 41.0)) * 2.0 - 1.0 ;\n\tvec4 gy = abs(gx) - 0.5 ;\n\tvec4 tx = floor(gx + 0.5);\n\tgx = gx - tx;\n\n\tvec2 g00 = vec2(gx.x,gy.x);\n\tvec2 g10 = vec2(gx.y,gy.y);\n\tvec2 g01 = vec2(gx.z,gy.z);\n\tvec2 g11 = vec2(gx.w,gy.w);\n\n\tvec4 norm = taylorInvSqrt(vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11)));\n\tg00 *= norm.x;\n\tg01 *= norm.y;\n\tg10 *= norm.z;\n\tg11 *= norm.w;\n\n\tfloat n00 = dot(g00, vec2(fx.x, fy.x));\n\tfloat n10 = dot(g10, vec2(fx.y, fy.y));\n\tfloat n01 = dot(g01, vec2(fx.z, fy.z));\n\tfloat n11 = dot(g11, vec2(fx.w, fy.w));\n\n\tvec2 fade_xy = fade(Pf.xy);\n\tvec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);\n\tfloat n_xy = mix(n_x.x, n_x.y, fade_xy.y);\n\treturn 2.3 * n_xy * amplitude + pivot;\n\n}\n".trim();class Ee extends Ut{constructor(t=new kt,e=new Wt(1),n=new Wt(0)){super("f"),this.uv=t,this.amplitude=e,this.pivot=n}generate(t,e){const n=new re(Ee.Nodes.noise2d,[this.uv,this.amplitude,this.pivot]);return t.format(n.generate(t,e),this.getType(t),e)}copy(t){super.copy(t),this.uv=t.uv,this.amplitude=t.amplitude,this.pivot=t.pivot}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.uv=this.uv.toJSON(t).uuid,e.amplitude=this.amplitude.toJSON(t).uuid,e.pivot=this.pivot.toJSON(t).uuid),e}}Ee.prototype.nodeType="Noise2D",Ee.Nodes=function(){const t=new Dt(Le),e=new Dt(Oe);return e.includes=[t],{noiseCommon:t,noise2d:e}}();const Re="\nfloat noise3d( vec3 P, float amplitude, float pivot ) {\n\n\tvec3 Pi0 = floor(P); // Integer part for indexing\n\tvec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n\tPi0 = mod289(Pi0);\n\tPi1 = mod289(Pi1);\n\tvec3 Pf0 = fract(P); // Fractional part for interpolation\n\tvec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n\tvec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n\tvec4 iy = vec4(Pi0.yy, Pi1.yy);\n\tvec4 iz0 = Pi0.zzzz;\n\tvec4 iz1 = Pi1.zzzz;\n\n\tvec4 ixy = permute(permute(ix) + iy);\n\tvec4 ixy0 = permute(ixy + iz0);\n\tvec4 ixy1 = permute(ixy + iz1);\n\n\tvec4 gx0 = ixy0 * (1.0 / 7.0);\n\tvec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n\tgx0 = fract(gx0);\n\tvec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n\tvec4 sz0 = step(gz0, vec4(0.0));\n\tgx0 -= sz0 * (step(0.0, gx0) - 0.5);\n\tgy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n\tvec4 gx1 = ixy1 * (1.0 / 7.0);\n\tvec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n\tgx1 = fract(gx1);\n\tvec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n\tvec4 sz1 = step(gz1, vec4(0.0));\n\tgx1 -= sz1 * (step(0.0, gx1) - 0.5);\n\tgy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n\tvec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n\tvec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n\tvec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n\tvec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n\tvec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n\tvec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n\tvec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n\tvec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n\tvec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n\tg000 *= norm0.x;\n\tg010 *= norm0.y;\n\tg100 *= norm0.z;\n\tg110 *= norm0.w;\n\tvec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n\tg001 *= norm1.x;\n\tg011 *= norm1.y;\n\tg101 *= norm1.z;\n\tg111 *= norm1.w;\n\n\tfloat n000 = dot(g000, Pf0);\n\tfloat n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n\tfloat n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n\tfloat n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n\tfloat n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n\tfloat n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n\tfloat n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n\tfloat n111 = dot(g111, Pf1);\n\n\tvec3 fade_xyz = fade(Pf0);\n\tvec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n\tvec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n\tfloat n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n\treturn 2.2 * n_xyz * amplitude + pivot;\n\n}\n".trim();class Me extends Ut{constructor(t=new Zt,e=new Wt(1),n=new Wt(0)){super("f"),this.position=t,this.amplitude=e,this.pivot=n}generate(t,e){const n=new re(Me.Nodes.noise3d,[this.position,this.amplitude,this.pivot]);return t.format(n.generate(t,e),this.getType(t),e)}copy(t){super.copy(t),this.position=t.position,this.amplitude=t.amplitude,this.pivot=t.pivot}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.position=this.position.toJSON(t).uuid,e.amplitude=this.amplitude.toJSON(t).uuid,e.pivot=this.pivot.toJSON(t).uuid),e}}Me.prototype.nodeType="Noise3D",Me.Nodes=function(){const t=new Dt(Re);return t.includes=[Ee.Nodes.noiseCommon],{noise3d:t}}();class Ie extends Ut{constructor(t){super("f"),this.uv=t||new kt}generate(t,e){const n=t.include(Ie.Nodes.checker);return t.format(n+"( "+this.uv.build(t,"v2")+" )",this.getType(t),e)}copy(t){return super.copy(t),this.uv=t.uv,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.uv=this.uv.toJSON(t).uuid),e}}Ie.Nodes={checker:new Dt("\n\t\tfloat checker( vec2 uv ) {\n\n\t\t\tfloat cx = floor( uv.x );\n\t\t\tfloat cy = floor( uv.y );\n\t\t\tfloat result = mod( cx + cy, 2.0 );\n\n\t\t\treturn sign( result );\n\n\t\t}")},Ie.prototype.nodeType="Noise";const Ue="\nfloat fractal3d( vec3 p, float amplitude, int octaves, float lacunarity, float diminish ) {\n\n\tfloat result = 0.0;\n\n\tfor (int i = 0;  i < octaves; ++i) {\n\n\t\tresult += noise3d(p, amplitude, 0.0);\n\t\tamplitude *= diminish;\n\t\tp *= lacunarity;\n\n\t}\n\n\treturn result;\n\n}\n".trim();class Ce extends Ut{constructor(t=new Zt,e=new Wt(1),n=3,r=2,i=.5){super("f"),this.position=t,this.amplitude=e,this.octaves=new ye(n).setReadonly(!0),this.lacunarity=new Wt(r).setReadonly(!0),this.diminish=new Wt(i).setReadonly(!0)}generate(t,e){const n=new re(Ce.Nodes.fractal3d,[this.position,this.amplitude,this.octaves,this.lacunarity,this.diminish]);return t.format(n.generate(t,e),this.getType(t),e)}copy(t){super.copy(t),this.position=t.position,this.amplitude=t.amplitude,this.octaves=t.octaves,this.lacunarity=t.lacunarity,this.diminish=t.diminish}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.position=this.position.toJSON(t).uuid,e.amplitude=this.amplitude.toJSON(t).uuid,e.octaves=this.octaves.toJSON(t).uuid,e.lacunarity=this.lacunarity.toJSON(t).uuid,e.diminish=this.diminish.toJSON(t).uuid),e}}Ce.prototype.nodeType="Fractal3D",Ce.Nodes=function(){const t=new Dt(Ue);return t.includes=[Me.Nodes.noise3d],{fractal3d:t}}();class Xe extends Ut{constructor(t,e){super("v3"),this.value=t,this.scale=e||new Vt(1,1)}generate(e,n){if(e.isShader("fragment")){const r=e.include(Xe.Nodes.perturbNormal2Arb);this.normal=this.normal||new te,this.position=this.position||new Zt(Zt.VIEW),this.uv=this.uv||new kt;let i=this.scale.build(e,"v2");return e.material.side===t.BackSide&&(i="-"+i),e.format(r+"( -"+this.position.build(e,"v3")+", "+this.normal.build(e,"v3")+", "+this.value.build(e,"v3")+", "+this.uv.build(e,"v2")+", "+i+" )",this.getType(e),n)}return console.warn("THREE.NormalMapNode is not compatible with "+e.shader+" shader."),e.format("vec3( 0.0 )",this.getType(e),n)}copy(t){return super.copy(t),this.value=t.value,this.scale=t.scale,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.value=this.value.toJSON(t).uuid,e.scale=this.scale.toJSON(t).uuid),e}}Xe.Nodes={perturbNormal2Arb:new Dt("vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 map, vec2 vUv, vec2 normalScale ) {\n\n\t\t// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s ); // we do not care about the magnitude\n\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\n\t\tvec3 mapN = map * 2.0 - 1.0;\n\n\t\tmapN.xy *= normalScale;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t// Workaround for Adreno GPUs gl_FrontFacing bug. See #15850 and #10331\n\n\t\t\tif ( dot( cross( S, T ), N ) < 0.0 ) mapN.xy *= - 1.0;\n\n\t\t#else\n\n\t\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\t#endif\n\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\n\t}",null,{derivatives:!0})},Xe.prototype.nodeType="NormalMap";class De extends Ut{constructor(t,e){super("v3"),this.value=t,this.scale=e||new Wt(1),this.toNormalMap=!1}generate(t,e){if(t.isShader("fragment")){if(this.toNormalMap){const n=t.include(De.Nodes.bumpToNormal);return t.format(n+"( "+this.value.build(t,"sampler2D")+", "+this.value.uv.build(t,"v2")+", "+this.scale.build(t,"f")+" )",this.getType(t),e)}{const n=t.include(De.Nodes.dHdxy_fwd),r=t.include(De.Nodes.perturbNormalArb);this.normal=this.normal||new te,this.position=this.position||new Zt(Zt.VIEW);const i=n+"( "+this.value.build(t,"sampler2D")+", "+this.value.uv.build(t,"v2")+", "+this.scale.build(t,"f")+" )";return t.format(r+"( -"+this.position.build(t,"v3")+", "+this.normal.build(t,"v3")+", "+i+" )",this.getType(t),e)}}return console.warn("THREE.BumpMapNode is not compatible with "+t.shader+" shader."),t.format("vec3( 0.0 )",this.getType(t),e)}copy(t){return super.copy(t),this.value=t.value,this.scale=t.scale,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.value=this.value.toJSON(t).uuid,e.scale=this.scale.toJSON(t).uuid),e}}De.Nodes=function(){const t=new Dt("\n\n\t\tvec2 dHdxy_fwd( sampler2D bumpMap, vec2 vUv, float bumpScale ) {\n\n\t\t\tvec2 dSTdx = dFdx( vUv );\n\t\t\tvec2 dSTdy = dFdy( vUv );\n\n\t\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n\t\t\treturn vec2( dBx, dBy );\n\n\t\t}",null,{derivatives:!0});return{dHdxy_fwd:t,perturbNormalArb:new Dt("\n\n\t\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n\t\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\t\tvec3 vN = surf_norm; // normalized\n\n\t\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\t\tvec3 R2 = cross( vN, vSigmaX );\n\n\t\t\tfloat fDet = dot( vSigmaX, R1 );\n\n\t\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\n\t\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\n\t\t}",[t],{derivatives:!0}),bumpToNormal:new Dt("\n\t\tvec3 bumpToNormal( sampler2D bumpMap, vec2 uv, float scale ) {\n\n\t\t\tvec2 dSTdx = dFdx( uv );\n\t\t\tvec2 dSTdy = dFdy( uv );\n\n\t\t\tfloat Hll = texture2D( bumpMap, uv ).x;\n\t\t\tfloat dBx = texture2D( bumpMap, uv + dSTdx ).x - Hll;\n\t\t\tfloat dBy = texture2D( bumpMap, uv + dSTdy ).x - Hll;\n\n\t\t\treturn vec3( .5 - ( dBx * scale ), .5 - ( dBy * scale ), 1.0 );\n\n\t\t}",null,{derivatives:!0})}}(),De.prototype.nodeType="BumpMap",De.prototype.hashProperties=["toNormalMap"];(class extends It{constructor(t,e){super(),this.code=t,this.value=e}getType(t){return this.value?this.value.getType(t):t.isShader("fragment")?"f":"void"}generate(t,e){const n=this.code.build(t,e)+";";return t.addNodeCode(n),t.isShader("vertex")?this.value?this.value.build(t,e):void 0:this.value?this.value.build(t,e):t.format("0.0","f",e)}copy(t){return super.copy(t),this.code=t.code,this.value=t.value,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.code=this.code.toJSON(t).uuid,this.value&&(e.value=this.value.toJSON(t).uuid)),e}}).prototype.nodeType="Bypass";const ze=Rt.elements;(class extends Ut{constructor(t,e,n,r){super("f"),this.x=t,this.y=e,this.z=n,this.w=r}getNumElements(){let t=ze.length;for(;t--;)if(void 0!==this[ze[t]]){++t;break}return Math.max(t,2)}getType(t){return t.getTypeFromLength(this.getNumElements())}generate(t,e){const n=this.getType(t),r=this.getNumElements(),i=[];for(let e=0;e<r;e++){const n=this[ze[e]];i.push(n?n.build(t,"f"):"0.0")}const o=(r>1?t.getConstructorFromLength(r):"")+"( "+i.join(", ")+" )";return t.format(o,n,e)}copy(t){super.copy(t);for(const e in t.inputs)this[e]=t.inputs[e];return this}toJSON(t){let e=this.getJSONNode(t);if(!e){e=this.createJSONNode(t),e.inputs={};const n=this.getNumElements();for(let r=0;r<n;r++){const n=this[ze[r]];n&&(e.inputs[ze[r]]=n.toJSON(t).uuid)}}return e}}).prototype.nodeType="Join";class Be extends It{constructor(t,e){super(),this.node=t,this.components=e||"x"}getType(t){return t.getTypeFromLength(this.components.length)}generate(t,e){const n=this.node.getType(t),r=t.getTypeLength(n)-1;let i=this.node.build(t,n);if(r>0){let n=0;const o=t.colorToVectorProperties(this.components);let a;const s=o.length;for(a=0;a<s;a++)n=Math.max(n,t.getIndexByElement(o.charAt(a)));for(n>r&&(n=r),i+=".",a=0;a<s;a++){let e=t.getIndexByElement(o.charAt(a));e>n&&(e=n),i+=t.getElementByIndex(e)}return t.format(i,this.getType(t),e)}return t.format(i,n,e)}copy(t){return super.copy(t),this.node=t.node,this.components=t.components,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.node=this.node.toJSON(t).uuid,e.components=this.components),e}}Be.prototype.nodeType="Switch";const Je="\nfloat remap( float value, float inLow, float inHigh, float outLow, float outHigh ) {\n\n\tfloat x = ( value - inLow ) / ( inHigh - inLow );\n\treturn outLow + ( outHigh - outLow ) * x;\n\n}\n\nvec2 remap( vec2 value, vec2 inLow, vec2 inHigh, vec2 outLow, vec2 outHigh ) {\n\n\treturn vec2(\n\t\tremap( value.x, inLow.x, inHigh.x, outLow.x, outHigh.x ),\n\t\tremap( value.y, inLow.y, inHigh.y, outLow.y, outHigh.y )\n\t);\n\n}\n\nvec2 remap( vec2 value, float inLow, float inHigh, float outLow, float outHigh ) {\n\n\treturn vec2(\n\t\tremap( value.x, inLow, inHigh, outLow, outHigh ),\n\t\tremap( value.y, inLow, inHigh, outLow, outHigh )\n\t);\n\n}\n\nvec3 remap( vec3 value, vec3 inLow, vec3 inHigh, vec3 outLow, vec3 outHigh ) {\n\n\treturn vec3(\n\t\tremap( value.x, inLow.x, inHigh.x, outLow.x, outHigh.x ),\n\t\tremap( value.y, inLow.y, inHigh.y, outLow.y, outHigh.y ),\n\t\tremap( value.z, inLow.z, inHigh.z, outLow.z, outHigh.z )\n\t);\n\n}\n\nvec3 remap( vec3 value, float inLow, float inHigh, float outLow, float outHigh ) {\n\n\treturn vec3(\n\t\tremap( value.x, inLow, inHigh, outLow, outHigh ),\n\t\tremap( value.y, inLow, inHigh, outLow, outHigh ),\n\t\tremap( value.z, inLow, inHigh, outLow, outHigh )\n\t);\n\n}\n\nvec4 remap( vec4 value, vec4 inLow, vec4 inHigh, vec4 outLow, vec4 outHigh ) {\n\n\treturn vec4(\n\t\tremap( value.x, inLow.x, inHigh.x, outLow.x, outHigh.x ),\n\t\tremap( value.y, inLow.y, inHigh.y, outLow.y, outHigh.y ),\n\t\tremap( value.z, inLow.z, inHigh.z, outLow.z, outHigh.z ),\n\t\tremap( value.w, inLow.w, inHigh.w, outLow.w, outHigh.w )\n\t);\n\n}\n\nvec4 remap( vec4 value, float inLow, float inHigh, float outLow, float outHigh ) {\n\n\treturn vec4(\n\t\tremap( value.x, inLow, inHigh, outLow, outHigh ),\n\t\tremap( value.y, inLow, inHigh, outLow, outHigh ),\n\t\tremap( value.z, inLow, inHigh, outLow, outHigh ),\n\t\tremap( value.w, inLow, inHigh, outLow, outHigh )\n\t);\n\n}\n".trim();class Qe extends Ut{constructor(t,e,n,r,i){super("f"),this.value=t,this.inLow=e,this.inHigh=n,this.outLow=r,this.outHigh=i}generate(t,e){const n=t.include(Qe.Nodes.remap);return t.format(n+"( "+[this.value.build(t),this.inLow.build(t),this.inHigh.build(t),this.outLow.build(t),this.outHigh.build(t)].join(", ")+" )",this.getType(t),e)}getType(t){return this.value.getType(t)}copy(t){super.copy(t),this.value=t.value,this.inLow=t.inLow,this.inHigh=t.inHigh,this.outLow=t.outLow,this.outHigh=t.outHigh}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.value=this.value.toJSON(t).uuid,e.inLow=this.inLow.toJSON(t).uuid,e.inHigh=this.inHigh.toJSON(t).uuid,e.outLow=this.outLow.toJSON(t).uuid,e.outHigh=this.outHigh.toJSON(t).uuid),e}}Qe.prototype.nodeType="Remap",Qe.Nodes={remap:new Dt(Je)};class Ye extends Wt{constructor(t,e,n){super(),this.scale=void 0!==t?t:1,this.scope=e||Ye.GLOBAL,this.timeScale=void 0!==n?n:void 0!==t}getReadonly(){return!1}getUnique(){return this.timeScale&&(this.scope===Ye.GLOBAL||this.scope===Ye.DELTA)}updateFrame(t){const e=this.timeScale?this.scale:1;switch(this.scope){case Ye.LOCAL:this.value+=t.delta*e;break;case Ye.DELTA:this.value=t.delta*e;break;default:this.value=t.time*e}}copy(t){return super.copy(t),this.scope=t.scope,this.scale=t.scale,this.timeScale=t.timeScale,this}toJSON(t){const e=super.toJSON(t);return e.scope=this.scope,e.scale=this.scale,e.timeScale=this.timeScale,e}}Ye.GLOBAL="global",Ye.LOCAL="local",Ye.DELTA="delta",Ye.prototype.nodeType="Timer",Mt.addKeyword("time",(function(){return new Ye}));(class extends Gt{constructor(e,n){super(),this.params={},this.velocity=new t.Vector3,this.setTarget(e),this.setParams(n)}getReadonly(){return!1}setParams(e){if("elastic"===this.params.type)delete this.moment,delete this.speed,delete this.springVelocity,delete this.lastVelocity;if(this.params=e||{},"elastic"===this.params.type)this.moment=new t.Vector3,this.speed=new t.Vector3,this.springVelocity=new t.Vector3,this.lastVelocity=new t.Vector3}setTarget(e){this.target&&(delete this.position,delete this.oldPosition),this.target=e,e&&(this.position=e.getWorldPosition(this.position||new t.Vector3),this.oldPosition=this.position.clone())}updateFrameVelocity(){this.target&&(this.position=this.target.getWorldPosition(this.position||new t.Vector3),this.velocity.subVectors(this.position,this.oldPosition),this.oldPosition.copy(this.position))}updateFrame(t){if(this.updateFrameVelocity(t),"elastic"===this.params.type){const e=t.delta*(this.params.fps||60),n=Math.pow(this.params.spring,e),r=Math.pow(this.params.damping,e);this.velocity.multiplyScalar(Math.exp(-this.params.damping*e)),this.velocity.add(this.springVelocity),this.velocity.add(this.speed.multiplyScalar(r).multiplyScalar(1-n)),this.speed.subVectors(this.velocity,this.lastVelocity),this.springVelocity.add(this.speed),this.springVelocity.multiplyScalar(n),this.moment.add(this.springVelocity),this.moment.multiplyScalar(r),this.lastVelocity.copy(this.velocity),this.value.copy(this.moment)}else this.value.copy(this.velocity)}copy(t){return super.copy(t),t.target&&this.setTarget(t.target),this.setParams(t.params),this}toJSON(t){const e=super.toJSON(t);return this.target&&(e.target=this.target.uuid),e.params=JSON.parse(JSON.stringify(this.params)),e}}).prototype.nodeType="Velocity";(class extends qt{constructor(t,e){super("( uvTransform * vec3( uvNode, 1 ) ).xy","vec2"),this.uv=t||new kt,this.position=e||new _e}generate(t,e){return this.keywords.uvNode=this.uv,this.keywords.uvTransform=this.position,super.generate(t,e)}setUvTransform(t,e,n,r,i,o,a){o=void 0!==o?o:.5,a=void 0!==a?a:.5,this.position.value.setUvTransform(t,e,n,r,i,o,a)}copy(t){return super.copy(t),this.uv=t.uv,this.position=t.position,this}toJSON(t){var e=this.getJSONNode(t);return e||((e=this.createJSONNode(t)).uv=this.uv.toJSON(t).uuid,e.position=this.position.toJSON(t).uuid),e}}).prototype.nodeType="UVTransform";class je extends Wt{constructor(t){super(),this.texture=t,this.maxMIPLevel=0}get value(){if(0===this.maxMIPLevel){var t=this.texture.value.image;Array.isArray(t)&&(t=t[0]),this.maxMIPLevel=void 0!==t?Math.log(Math.max(t.width,t.height))*Math.LOG2E:0}return this.maxMIPLevel}set value(t){}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.texture=this.texture.uuid),e}}je.prototype.nodeType="MaxMIPLevel";class Ve extends Ut{constructor(t,e){super("f"),this.roughness=t,this.texture=e,this.maxMIPLevel=void 0}setTexture(t){return this.texture=t,this}generate(t,e){if(t.isShader("fragment")){this.maxMIPLevel=this.maxMIPLevel||new je,this.maxMIPLevel.texture=this.texture;const n=t.include(Ve.Nodes.getSpecularMIPLevel);return t.format(n+"( "+this.roughness.build(t,"f")+", "+this.maxMIPLevel.build(t,"f")+" )",this.type,e)}return console.warn("THREE.SpecularMIPLevelNode is not compatible with "+t.shader+" shader."),t.format("0.0",this.type,e)}copy(t){return super.copy(t),this.texture=t.texture,this.roughness=t.roughness,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.texture=this.texture,e.roughness=this.roughness),e}}Ve.Nodes={getSpecularMIPLevel:new Dt("\n\n\t\tfloat getSpecularMIPLevel( const in float roughness, const in float maxMIPLevelScalar ) {\n\n\t\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\n\t\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\n\t\t}")},Ve.prototype.nodeType="SpecularMIPLevel";(class extends Ut{constructor(t){super(),this.slots=t||{}}getType(t,e){return e}generate(t,e){return this.slots[t.slot]?this.slots[t.slot].build(t,e):t.format("0.0","f",e)}copy(t){super.copy(t);for(const e in t.slots)this.slots[e]=t.slots[e];return this}toJSON(t){let e=this.getJSONNode(t);if(!e){e=this.createJSONNode(t),e.slots={};for(const n in this.slots){const r=this.slots[n];r&&(e.slots[n]=r.toJSON(t).uuid)}}return e}}).prototype.nodeType="SubSlot";class Ge extends Ut{constructor(t,e,n,r){super("v4"),this.value=t,this.uv=e||new kt,this.radius=n||new Vt(1,1),this.size=r,this.blurX=!0,this.blurY=!0,this.horizontal=new Wt(1/64),this.vertical=new Wt(1/64)}updateFrame(){if(this.size)this.horizontal.value=this.radius.x/this.size.x,this.vertical.value=this.radius.y/this.size.y;else if(this.value.value&&this.value.value.image){const t=this.value.value.image;this.horizontal.value=this.radius.x/t.width,this.vertical.value=this.radius.y/t.height}}generate(t,e){if(t.isShader("fragment")){const n=[];let r;const i=t.include(Ge.Nodes.blurX),o=t.include(Ge.Nodes.blurY);return this.blurX&&n.push(i+"( "+this.value.build(t,"sampler2D")+", "+this.uv.build(t,"v2")+", "+this.horizontal.build(t,"f")+" )"),this.blurY&&n.push(o+"( "+this.value.build(t,"sampler2D")+", "+this.uv.build(t,"v2")+", "+this.vertical.build(t,"f")+" )"),r=2==n.length?"( "+n.join(" + ")+" / 2.0 )":n.length?"( "+n[0]+" )":"vec4( 0.0 )",t.format(r,this.getType(t),e)}return console.warn("THREE.BlurNode is not compatible with "+t.shader+" shader."),t.format("vec4( 0.0 )",this.getType(t),e)}copy(e){return super.copy(e),this.value=e.value,this.uv=e.uv,this.radius=e.radius,void 0!==e.size&&(this.size=new t.Vector2(e.size.x,e.size.y)),this.blurX=e.blurX,this.blurY=e.blurY,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.value=this.value.toJSON(t).uuid,e.uv=this.uv.toJSON(t).uuid,e.radius=this.radius.toJSON(t).uuid,this.size&&(e.size={x:this.size.x,y:this.size.y}),e.blurX=this.blurX,e.blurY=this.blurY),e}}Ge.Nodes={blurX:new Dt("\n\t\tvec4 blurX( sampler2D tex, vec2 uv, float s ) {\n\t\t\tvec4 sum = vec4( 0.0 );\n\t\t\tsum += texture2D( tex, vec2( uv.x - 4.0 * s, uv.y ) ) * 0.051;\n\t\t\tsum += texture2D( tex, vec2( uv.x - 3.0 * s, uv.y ) ) * 0.0918;\n\t\t\tsum += texture2D( tex, vec2( uv.x - 2.0 * s, uv.y ) ) * 0.12245;\n\t\t\tsum += texture2D( tex, vec2( uv.x - 1.0 * s, uv.y ) ) * 0.1531;\n\t\t\tsum += texture2D( tex, vec2( uv.x, uv.y ) ) * 0.1633;\n\t\t\tsum += texture2D( tex, vec2( uv.x + 1.0 * s, uv.y ) ) * 0.1531;\n\t\t\tsum += texture2D( tex, vec2( uv.x + 2.0 * s, uv.y ) ) * 0.12245;\n\t\t\tsum += texture2D( tex, vec2( uv.x + 3.0 * s, uv.y ) ) * 0.0918;\n\t\t\tsum += texture2D( tex, vec2( uv.x + 4.0 * s, uv.y ) ) * 0.051;\n\t\t\treturn sum * .667;\n\t\t}"),blurY:new Dt("\n\t\tvec4 blurY( sampler2D tex, vec2 uv, float s ) {\n\t\t\tvec4 sum = vec4( 0.0 );\n\t\t\tsum += texture2D( tex, vec2( uv.x, uv.y - 4.0 * s ) ) * 0.051;\n\t\t\tsum += texture2D( tex, vec2( uv.x, uv.y - 3.0 * s ) ) * 0.0918;\n\t\t\tsum += texture2D( tex, vec2( uv.x, uv.y - 2.0 * s ) ) * 0.12245;\n\t\t\tsum += texture2D( tex, vec2( uv.x, uv.y - 1.0 * s ) ) * 0.1531;\n\t\t\tsum += texture2D( tex, vec2( uv.x, uv.y ) ) * 0.1633;\n\t\t\tsum += texture2D( tex, vec2( uv.x, uv.y + 1.0 * s ) ) * 0.1531;\n\t\t\tsum += texture2D( tex, vec2( uv.x, uv.y + 2.0 * s ) ) * 0.12245;\n\t\t\tsum += texture2D( tex, vec2( uv.x, uv.y + 3.0 * s ) ) * 0.0918;\n\t\t\tsum += texture2D( tex, vec2( uv.x, uv.y + 4.0 * s ) ) * 0.051;\n\t\t\treturn sum * .667;\n\t\t}")},Ge.prototype.nodeType="Blur",Ge.prototype.hashProperties=["blurX","blurY"];class He extends Ut{constructor(t){super("f"),this.rgb=t}generate(t,e){const n=t.include(He.Nodes.luminance);return t.format(n+"( "+this.rgb.build(t,"v3")+" )",this.getType(t),e)}copy(t){return super.copy(t),this.rgb=t.rgb,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.rgb=this.rgb.toJSON(t).uuid),e}}He.Nodes=function(){const t=new Bt("vec3 LUMA vec3( 0.2125, 0.7154, 0.0721 )");return{LUMA:t,luminance:new Dt("\n\n\t\tfloat luminance( vec3 rgb ) {\n\n\t\t\treturn dot( rgb, LUMA );\n\n\t\t}",[t])}}(),He.prototype.nodeType="Luminance";class ke extends Ut{constructor(t,e,n){super("v3"),this.rgb=t,this.adjustment=e,this.method=n||ke.SATURATION}generate(t,e){const n=this.rgb.build(t,"v3"),r=this.adjustment.build(t,"f");switch(this.method){case ke.BRIGHTNESS:return t.format("( "+n+" + "+r+" )",this.getType(t),e);case ke.CONTRAST:return t.format("( "+n+" * "+r+" )",this.getType(t),e)}const i=t.include(ke.Nodes[this.method]);return t.format(i+"( "+n+", "+r+" )",this.getType(t),e)}copy(t){return super.copy(t),this.rgb=t.rgb,this.adjustment=t.adjustment,this.method=t.method,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.rgb=this.rgb.toJSON(t).uuid,e.adjustment=this.adjustment.toJSON(t).uuid,e.method=this.method),e}}ke.Nodes={hue:new Dt("\n\t\tvec3 hue(vec3 rgb, float adjustment) {\n\n\t\t\tconst mat3 RGBtoYIQ = mat3(0.299, 0.587, 0.114, 0.595716, -0.274453, -0.321263, 0.211456, -0.522591, 0.311135);\n\t\t\tconst mat3 YIQtoRGB = mat3(1.0, 0.9563, 0.6210, 1.0, -0.2721, -0.6474, 1.0, -1.107, 1.7046);\n\n\t\t\tvec3 yiq = RGBtoYIQ * rgb;\n\n\t\t\tfloat hue = atan(yiq.z, yiq.y) + adjustment;\n\t\t\tfloat chroma = sqrt(yiq.z * yiq.z + yiq.y * yiq.y);\n\n\t\t\treturn YIQtoRGB * vec3(yiq.x, chroma * cos(hue), chroma * sin(hue));\n\n\t\t}"),saturation:new Dt("\n\t\tvec3 saturation(vec3 rgb, float adjustment) {\n\n\t\t\tvec3 intensity = vec3( luminance( rgb ) );\n\n\t\t\treturn mix( intensity, rgb, adjustment );\n\n\t\t}",[He.Nodes.luminance]),vibrance:new Dt("\n\n\t\tvec3 vibrance(vec3 rgb, float adjustment) {\n\n\t\t\tfloat average = (rgb.r + rgb.g + rgb.b) / 3.0;\n\n\t\t\tfloat mx = max(rgb.r, max(rgb.g, rgb.b));\n\t\t\tfloat amt = (mx - average) * (-3.0 * adjustment);\n\n\t\t\treturn mix(rgb.rgb, vec3(mx), amt);\n\n\t\t}")},ke.SATURATION="saturation",ke.HUE="hue",ke.VIBRANCE="vibrance",ke.BRIGHTNESS="brightness",ke.CONTRAST="contrast",ke.prototype.nodeType="ColorAdjustment",ke.prototype.hashProperties=["method"];class We extends It{constructor(){super(),this.color=new pe(16777215)}generate(t){let e;if(t.isShader("vertex")){const n=this.position?this.position.analyzeAndFlow(t,"v3",{cache:"position"}):void 0,r=["#include <beginnormal_vertex>","#include <morphnormal_vertex>","#include <skinnormal_vertex>","#include <defaultnormal_vertex>"];r.push("#include <begin_vertex>"),n&&r.push(n.code,n.result?"transformed = "+n.result+";":""),r.push("#include <morphtarget_vertex>","#include <skinning_vertex>","#include <project_vertex>","#include <logdepthbuf_vertex>","#include <worldpos_vertex>","#include <clipping_planes_vertex>","#include <fog_vertex>"),e=r.join("\n")}else{this.color.analyze(t,{slot:"color"}),this.alpha&&this.alpha.analyze(t),this.mask&&this.mask.analyze(t);const n=this.color.flow(t,"c",{slot:"color"}),r=this.alpha?this.alpha.flow(t,"f"):void 0,i=this.mask?this.mask.flow(t,"b"):void 0;t.requires.transparent=void 0!==r;const o=[n.code];i&&o.push(i.code,"if ( ! "+i.result+" ) discard;"),r&&o.push(r.code,"#ifdef ALPHATEST"," if ( "+r.result+" <= ALPHATEST ) discard;","#endif"),r?o.push("gl_FragColor = vec4("+n.result+", "+r.result+" );"):o.push("gl_FragColor = vec4("+n.result+", 1.0 );"),e=o.join("\n")}return e}copy(t){return super.copy(t),this.color=t.color,t.position&&(this.position=t.position),t.alpha&&(this.alpha=t.alpha),t.mask&&(this.mask=t.mask),this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.color=this.color.toJSON(t).uuid,this.position&&(e.position=this.position.toJSON(t).uuid),this.alpha&&(e.alpha=this.alpha.toJSON(t).uuid),this.mask&&(e.mask=this.mask.toJSON(t).uuid)),e}}We.prototype.nodeType="Basic";class qe extends It{constructor(){super(),this.color=new pe(15658734),this.spherical=!0}build(e){let n;if(e.define("SPRITE"),e.requires.lights=!1,e.requires.transparent=void 0!==this.alpha,e.isShader("vertex")){const r=this.position?this.position.analyzeAndFlow(e,"v3",{cache:"position"}):void 0;e.mergeUniform(t.UniformsUtils.merge([t.UniformsLib.fog])),e.addParsCode("\n\t\t\t\t#include <fog_pars_vertex>\n\t\t\t\t#include <logdepthbuf_pars_vertex>\n\t\t\t\t#include <clipping_planes_pars_vertex>"),n=["#include <clipping_planes_fragment>","#include <begin_vertex>"],r&&n.push(r.code,r.result?"transformed = "+r.result+";":""),n.push("#include <project_vertex>","#include <fog_vertex>","mat4 modelViewMtx = modelViewMatrix;","mat4 modelMtx = modelMatrix;","modelMtx[3][0] = 0.0;","modelMtx[3][1] = 0.0;","modelMtx[3][2] = 0.0;"),this.spherical||n.push("modelMtx[1][1] = 1.0;"),n.push("modelViewMtx[0][0] = 1.0;","modelViewMtx[0][1] = 0.0;","modelViewMtx[0][2] = 0.0;"),this.spherical&&n.push("modelViewMtx[1][0] = 0.0;","modelViewMtx[1][1] = 1.0;","modelViewMtx[1][2] = 0.0;"),n.push("modelViewMtx[2][0] = 0.0;","modelViewMtx[2][1] = 0.0;","modelViewMtx[2][2] = 1.0;","gl_Position = projectionMatrix * modelViewMtx * modelMtx * vec4( transformed, 1.0 );","#include <logdepthbuf_vertex>","#include <clipping_planes_vertex>","#include <fog_vertex>")}else{e.addParsCode("\n\t\t\t\t#include <fog_pars_fragment>\n\t\t\t\t#include <logdepthbuf_pars_fragment>\n\t\t\t\t#include <clipping_planes_pars_fragment>"),e.addCode("\n\t\t\t\t#include <clipping_planes_fragment>\n\t\t\t\t#include <logdepthbuf_fragment>"),this.mask&&this.mask.analyze(e),this.alpha&&this.alpha.analyze(e),this.color.analyze(e,{slot:"color"});const t=this.mask?this.mask.flow(e,"b"):void 0,r=this.alpha?this.alpha.flow(e,"f"):void 0,i=this.color.flow(e,"c",{slot:"color"});n=[],t&&n.push(t.code,"if ( ! "+t.result+" ) discard;"),r?n.push(r.code,"#ifdef ALPHATEST","if ( "+r.result+" <= ALPHATEST ) discard;","#endif",i.code,"gl_FragColor = vec4( "+i.result+", "+r.result+" );"):n.push(i.code,"gl_FragColor = vec4( "+i.result+", 1.0 );"),n.push("#include <tonemapping_fragment>","#include <encodings_fragment>","#include <fog_fragment>")}return n.join("\n")}copy(t){return super.copy(t),t.position&&(this.position=t.position),this.color=t.color,void 0!==t.spherical&&(this.spherical=t.spherical),t.mask&&(this.mask=t.mask),t.alpha&&(this.alpha=t.alpha),this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),this.position&&(e.position=this.position.toJSON(t).uuid),e.color=this.color.toJSON(t).uuid,!1===this.spherical&&(e.spherical=!1),this.mask&&(e.mask=this.mask.toJSON(t).uuid),this.alpha&&(e.alpha=this.alpha.toJSON(t).uuid)),e}}qe.prototype.nodeType="Sprite";class $e extends It{constructor(){super(),this.color=new pe(15658734),this.specular=new pe(1118481),this.shininess=new Wt(30)}build(e){let n;if(e.define("PHONG"),e.requires.lights=!0,e.isShader("vertex")){const r=this.position?this.position.analyzeAndFlow(e,"v3",{cache:"position"}):void 0;e.mergeUniform(t.UniformsUtils.merge([t.UniformsLib.fog,t.UniformsLib.lights])),e.addParsCode('\n\t\t\t\tvarying vec3 vViewPosition;\n\n\t\t\t\t//"#include <encodings_pars_fragment> // encoding functions\n\t\t\t\t#include <fog_pars_vertex>\n\t\t\t\t#include <normal_pars_vertex>\n\t\t\t\t#include <morphtarget_pars_vertex>\n\t\t\t\t#include <skinning_pars_vertex>\n\t\t\t\t#include <shadowmap_pars_vertex>\n\t\t\t\t#include <logdepthbuf_pars_vertex>\n\t\t\t\t#include <clipping_planes_pars_vertex>');const i=["#include <beginnormal_vertex>","#include <morphnormal_vertex>","#include <skinbase_vertex>","#include <skinnormal_vertex>","#include <defaultnormal_vertex>","#include <normal_vertex>","#include <begin_vertex>"];r&&i.push(r.code,r.result?"transformed = "+r.result+";":""),i.push("\t#include <morphtarget_vertex>","\t#include <skinning_vertex>","\t#include <project_vertex>","\t#include <fog_vertex>","\t#include <logdepthbuf_vertex>","\t#include <clipping_planes_vertex>","\tvViewPosition = - mvPosition.xyz;","\t#include <worldpos_vertex>","\t#include <shadowmap_vertex>","\t#include <fog_vertex>"),n=i.join("\n")}else{this.mask&&this.mask.analyze(e),this.color.analyze(e,{slot:"color"}),this.specular.analyze(e),this.shininess.analyze(e),this.alpha&&this.alpha.analyze(e),this.normal&&this.normal.analyze(e),this.light&&this.light.analyze(e,{cache:"light"}),this.ao&&this.ao.analyze(e),this.ambient&&this.ambient.analyze(e),this.shadow&&this.shadow.analyze(e),this.emissive&&this.emissive.analyze(e,{slot:"emissive"}),this.environment&&this.environment.analyze(e,{slot:"environment"}),this.environmentAlpha&&this.environment&&this.environmentAlpha.analyze(e);const t=this.mask?this.mask.flow(e,"b"):void 0,r=this.color.flow(e,"c",{slot:"color"}),i=this.specular.flow(e,"c"),o=this.shininess.flow(e,"f"),a=this.alpha?this.alpha.flow(e,"f"):void 0,s=this.normal?this.normal.flow(e,"v3"):void 0,u=this.light?this.light.flow(e,"v3",{cache:"light"}):void 0,l=this.ao?this.ao.flow(e,"f"):void 0,c=this.ambient?this.ambient.flow(e,"c"):void 0,d=this.shadow?this.shadow.flow(e,"c"):void 0,h=this.emissive?this.emissive.flow(e,"c",{slot:"emissive"}):void 0,f=this.environment?this.environment.flow(e,"c",{slot:"environment"}):void 0,p=this.environmentAlpha&&this.environment?this.environmentAlpha.flow(e,"f"):void 0;e.requires.transparent=void 0!==a,e.addParsCode("\n\t\t\t\t#include <fog_pars_fragment>\n\t\t\t\t#include <bsdfs>\n\t\t\t\t#include <lights_pars_begin>\n\t\t\t\t#include <normal_pars_fragment>\n\t\t\t\t#include <lights_phong_pars_fragment>\n\t\t\t\t#include <shadowmap_pars_fragment>\n\t\t\t\t#include <logdepthbuf_pars_fragment>");const m=["#include <normal_fragment_begin>","\tBlinnPhongMaterial material;"];t&&m.push(t.code,"if ( ! "+t.result+" ) discard;"),m.push(r.code,"\tvec3 diffuseColor = "+r.result+";","\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );","#include <logdepthbuf_fragment>",i.code,"\tvec3 specular = "+i.result+";",o.code,"\tfloat shininess = max( 0.0001, "+o.result+" );","\tfloat specularStrength = 1.0;"),a&&m.push(a.code,"#ifdef ALPHATEST","if ( "+a.result+" <= ALPHATEST ) discard;","#endif"),s&&m.push(s.code,"normal = "+s.result+";"),m.push("material.diffuseColor = "+(u?"vec3( 1.0 )":"diffuseColor")+";"),m.push("material.specularColor = specular;","material.specularShininess = shininess;","material.specularStrength = specularStrength;","#include <lights_fragment_begin>","#include <lights_fragment_end>"),u&&(m.push(u.code,"reflectedLight.directDiffuse = "+u.result+";"),m.push("reflectedLight.directDiffuse *= diffuseColor;","reflectedLight.indirectDiffuse *= diffuseColor;")),l&&m.push(l.code,"reflectedLight.indirectDiffuse *= "+l.result+";"),c&&m.push(c.code,"reflectedLight.indirectDiffuse += "+c.result+";"),d&&m.push(d.code,"reflectedLight.directDiffuse *= "+d.result+";","reflectedLight.directSpecular *= "+d.result+";"),h&&m.push(h.code,"reflectedLight.directDiffuse += "+h.result+";"),m.push("vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular;"),f&&(m.push(f.code),p?m.push(p.code,"outgoingLight = mix( outgoingLight, "+f.result+", "+p.result+" );"):m.push("outgoingLight = "+f.result+";")),a?m.push("gl_FragColor = vec4( outgoingLight, "+a.result+" );"):m.push("gl_FragColor = vec4( outgoingLight, 1.0 );"),m.push("#include <tonemapping_fragment>","#include <encodings_fragment>","#include <fog_fragment>","#include <premultiplied_alpha_fragment>"),n=m.join("\n")}return n}copy(t){return super.copy(t),t.position&&(this.position=t.position),this.color=t.color,this.specular=t.specular,this.shininess=t.shininess,t.mask&&(this.mask=t.mask),t.alpha&&(this.alpha=t.alpha),t.normal&&(this.normal=t.normal),t.light&&(this.light=t.light),t.shadow&&(this.shadow=t.shadow),t.ao&&(this.ao=t.ao),t.emissive&&(this.emissive=t.emissive),t.ambient&&(this.ambient=t.ambient),t.environment&&(this.environment=t.environment),t.environmentAlpha&&(this.environmentAlpha=t.environmentAlpha),this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),this.position&&(e.position=this.position.toJSON(t).uuid),e.color=this.color.toJSON(t).uuid,e.specular=this.specular.toJSON(t).uuid,e.shininess=this.shininess.toJSON(t).uuid,this.mask&&(e.mask=this.mask.toJSON(t).uuid),this.alpha&&(e.alpha=this.alpha.toJSON(t).uuid),this.normal&&(e.normal=this.normal.toJSON(t).uuid),this.light&&(e.light=this.light.toJSON(t).uuid),this.ao&&(e.ao=this.ao.toJSON(t).uuid),this.ambient&&(e.ambient=this.ambient.toJSON(t).uuid),this.shadow&&(e.shadow=this.shadow.toJSON(t).uuid),this.emissive&&(e.emissive=this.emissive.toJSON(t).uuid),this.environment&&(e.environment=this.environment.toJSON(t).uuid),this.environmentAlpha&&(e.environmentAlpha=this.environmentAlpha.toJSON(t).uuid)),e}}$e.prototype.nodeType="Phong";class Ke extends It{constructor(){super(),this.color=new pe(16777215),this.roughness=new Wt(1),this.metalness=new Wt(0)}build(e){let n;e.define("STANDARD");const r=this.clearcoat||this.clearcoatRoughness||this.clearCoatNormal;if(r&&e.define("CLEARCOAT"),e.requires.lights=!0,e.extensions.derivatives=!0,e.extensions.shaderTextureLOD=!0,e.isShader("vertex")){const r=this.position?this.position.analyzeAndFlow(e,"v3",{cache:"position"}):void 0;e.mergeUniform(t.UniformsUtils.merge([t.UniformsLib.fog,t.UniformsLib.lights])),t.UniformsLib.LTC_1&&(e.uniforms.ltc_1={value:void 0},e.uniforms.ltc_2={value:void 0}),e.addParsCode('\n\t\t\t\tvarying vec3 vViewPosition;\n\n\t\t\t\t#ifndef FLAT_SHADED\n\n\t\t\t\t\tvarying vec3 vNormal;\n\n\t\t\t\t#endif\n\n\t\t\t\t//"#include <encodings_pars_fragment> // encoding functions\n\t\t\t\t#include <fog_pars_vertex>\n\t\t\t\t#include <morphtarget_pars_vertex>\n\t\t\t\t#include <skinning_pars_vertex>\n\t\t\t\t#include <shadowmap_pars_vertex>\n\t\t\t\t#include <logdepthbuf_pars_vertex>\n\t\t\t\t#include <clipping_planes_pars_vertex>');const i=["#include <beginnormal_vertex>","#include <morphnormal_vertex>","#include <skinbase_vertex>","#include <skinnormal_vertex>","#include <defaultnormal_vertex>","#ifndef FLAT_SHADED","\tvNormal = normalize( transformedNormal );","#endif","#include <begin_vertex>"];r&&i.push(r.code,r.result?"transformed = "+r.result+";":""),i.push("#include <morphtarget_vertex>","#include <skinning_vertex>","#include <project_vertex>","#include <fog_vertex>","#include <logdepthbuf_vertex>","#include <clipping_planes_vertex>","\tvViewPosition = - mvPosition.xyz;","#include <worldpos_vertex>","#include <shadowmap_vertex>"),n=i.join("\n")}else{const t=new qt("material.roughness","f"),i=new qt("material.clearcoatRoughness","f"),o={roughness:t,bias:new Ve(t),viewNormal:new qt("normal","v3"),worldNormal:new qt("inverseTransformDirection( geometry.normal, viewMatrix )","v3"),gamma:!0},a={gamma:!0},s={roughness:i,bias:new Ve(i),viewNormal:new qt("clearcoatNormal","v3"),worldNormal:new qt("inverseTransformDirection( geometry.clearcoatNormal, viewMatrix )","v3"),gamma:!0};this.mask&&this.mask.analyze(e),this.color.analyze(e,{slot:"color",context:a}),this.roughness.analyze(e),this.metalness.analyze(e),this.alpha&&this.alpha.analyze(e),this.normal&&this.normal.analyze(e),this.clearcoat&&this.clearcoat.analyze(e),this.clearcoatRoughness&&this.clearcoatRoughness.analyze(e),this.clearcoatNormal&&this.clearcoatNormal.analyze(e),this.reflectivity&&this.reflectivity.analyze(e),this.light&&this.light.analyze(e,{cache:"light"}),this.ao&&this.ao.analyze(e),this.ambient&&this.ambient.analyze(e),this.shadow&&this.shadow.analyze(e),this.emissive&&this.emissive.analyze(e,{slot:"emissive"}),this.environment&&(this.environment.analyze(e,{cache:"radiance",context:o,slot:"radiance"}),e.requires.irradiance&&this.environment.analyze(e,{cache:"irradiance",context:o,slot:"irradiance"})),this.sheenTint&&this.sheenTint.analyze(e);const u=this.mask?this.mask.flow(e,"b"):void 0,l=this.color.flow(e,"c",{slot:"color",context:a}),c=this.roughness.flow(e,"f"),d=this.metalness.flow(e,"f"),h=this.alpha?this.alpha.flow(e,"f"):void 0,f=this.normal?this.normal.flow(e,"v3"):void 0,p=this.clearcoat?this.clearcoat.flow(e,"f"):void 0,m=this.clearcoatRoughness?this.clearcoatRoughness.flow(e,"f"):void 0,v=this.clearcoatNormal?this.clearcoatNormal.flow(e,"v3"):void 0,g=this.reflectivity?this.reflectivity.flow(e,"f"):void 0,x=this.light?this.light.flow(e,"v3",{cache:"light"}):void 0,y=this.ao?this.ao.flow(e,"f"):void 0,_=this.ambient?this.ambient.flow(e,"c"):void 0,b=this.shadow?this.shadow.flow(e,"c"):void 0,A=this.emissive?this.emissive.flow(e,"c",{slot:"emissive"}):void 0;let T;this.environment&&(T={radiance:this.environment.flow(e,"c",{cache:"radiance",context:o,slot:"radiance"})},e.requires.irradiance&&(T.irradiance=this.environment.flow(e,"c",{cache:"irradiance",context:o,slot:"irradiance"})));const S=r&&T?this.environment.flow(e,"c",{cache:"clearcoat",context:s,slot:"environment"}):void 0,N=this.sheenTint?this.sheenTint.flow(e,"c"):void 0;e.requires.transparent=void 0!==h,e.addParsCode("\n\t\t\t\tvarying vec3 vViewPosition;\n\n\t\t\t\t#define NODE_MAXIMUM_SPECULAR_COEFFICIENT 0.16\n\t\t\t\t#define NODE_DEFAULT_SPECULAR_COEFFICIENT 0.04\n\n\t\t\t\t#ifndef FLAT_SHADED\n\n\t\t\t\t\tvarying vec3 vNormal;\n\n\t\t\t\t#endif\n\n\t\t\t\t#include <dithering_pars_fragment>\n\t\t\t\t#include <fog_pars_fragment>\n\t\t\t\t#include <bsdfs>\n\t\t\t\t#include <lights_pars_begin>\n\t\t\t\t#include <lights_physical_pars_fragment>\n\t\t\t\t#include <shadowmap_pars_fragment>\n\t\t\t\t#include <logdepthbuf_pars_fragment>");const F=["#include <clipping_planes_fragment>","\t#include <normal_fragment_begin>","\t#include <clearcoat_normal_fragment_begin>","\tPhysicalMaterial material;","\tmaterial.diffuseColor = vec3( 1.0 );"];u&&F.push(u.code,"if ( ! "+u.result+" ) discard;"),F.push(l.code,"\tvec3 diffuseColor = "+l.result+";","\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );","#include <logdepthbuf_fragment>",c.code,"\tfloat roughnessFactor = "+c.result+";",d.code,"\tfloat metalnessFactor = "+d.result+";"),h&&F.push(h.code,"#ifdef ALPHATEST","\tif ( "+h.result+" <= ALPHATEST ) discard;","#endif"),f&&F.push(f.code,"normal = "+f.result+";"),v&&F.push(v.code,"clearcoatNormal = "+v.result+";"),F.push("vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );","float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );"),F.push("material.diffuseColor = "+(x?"vec3( 1.0 )":"diffuseColor * ( 1.0 - metalnessFactor )")+";","material.roughness = max( roughnessFactor, 0.0525 );","material.roughness += geometryRoughness;","material.roughness = min( material.roughness, 1.0 );","material.roughness = clamp( roughnessFactor, 0.04, 1.0 );"),p?F.push(p.code,"material.clearcoat = saturate( "+p.result+" );"):r&&F.push("material.clearcoat = 0.0;"),m?F.push(m.code,"material.clearcoatRoughness = max( "+m.result+", 0.0525 );","material.clearcoatRoughness += geometryRoughness;","material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );"):r&&F.push("material.clearcoatRoughness = 0.0;"),N&&F.push("material.sheenTint = "+N.result+";"),g?F.push(g.code,"material.specularColor = mix( vec3( NODE_MAXIMUM_SPECULAR_COEFFICIENT * pow2( "+g.result+" ) ), diffuseColor, metalnessFactor );"):F.push("material.specularColor = mix( vec3( NODE_DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor, metalnessFactor );"),F.push("#include <lights_fragment_begin>"),x&&(F.push(x.code,"reflectedLight.directDiffuse = "+x.result+";"),F.push("diffuseColor *= 1.0 - metalnessFactor;","reflectedLight.directDiffuse *= diffuseColor;","reflectedLight.indirectDiffuse *= diffuseColor;")),y&&F.push(y.code,"reflectedLight.indirectDiffuse *= "+y.result+";","float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );","reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, "+y.result+", material.roughness );"),_&&F.push(_.code,"reflectedLight.indirectDiffuse += "+_.result+";"),b&&F.push(b.code,"reflectedLight.directDiffuse *= "+b.result+";","reflectedLight.directSpecular *= "+b.result+";"),A&&F.push(A.code,"reflectedLight.directDiffuse += "+A.result+";"),T&&(F.push(T.radiance.code),e.requires.irradiance&&F.push(T.irradiance.code),S&&F.push(S.code,"clearcoatRadiance += "+S.result+";"),F.push("radiance += "+T.radiance.result+";"),e.requires.irradiance&&F.push("iblIrradiance += PI * "+T.irradiance.result+";")),F.push("#include <lights_fragment_end>"),F.push("vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular;"),h?F.push("gl_FragColor = vec4( outgoingLight, "+h.result+" );"):F.push("gl_FragColor = vec4( outgoingLight, 1.0 );"),F.push("#include <tonemapping_fragment>","#include <encodings_fragment>","#include <fog_fragment>","#include <premultiplied_alpha_fragment>","#include <dithering_fragment>"),n=F.join("\n")}return n}copy(t){return super.copy(t),t.position&&(this.position=t.position),this.color=t.color,this.roughness=t.roughness,this.metalness=t.metalness,t.mask&&(this.mask=t.mask),t.alpha&&(this.alpha=t.alpha),t.normal&&(this.normal=t.normal),t.clearcoat&&(this.clearcoat=t.clearcoat),t.clearcoatRoughness&&(this.clearcoatRoughness=t.clearcoatRoughness),t.clearcoatNormal&&(this.clearcoatNormal=t.clearcoatNormal),t.reflectivity&&(this.reflectivity=t.reflectivity),t.light&&(this.light=t.light),t.shadow&&(this.shadow=t.shadow),t.ao&&(this.ao=t.ao),t.emissive&&(this.emissive=t.emissive),t.ambient&&(this.ambient=t.ambient),t.environment&&(this.environment=t.environment),t.sheenTint&&(this.sheenTint=t.sheenTint),this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),this.position&&(e.position=this.position.toJSON(t).uuid),e.color=this.color.toJSON(t).uuid,e.roughness=this.roughness.toJSON(t).uuid,e.metalness=this.metalness.toJSON(t).uuid,this.mask&&(e.mask=this.mask.toJSON(t).uuid),this.alpha&&(e.alpha=this.alpha.toJSON(t).uuid),this.normal&&(e.normal=this.normal.toJSON(t).uuid),this.clearcoat&&(e.clearcoat=this.clearcoat.toJSON(t).uuid),this.clearcoatRoughness&&(e.clearcoatRoughness=this.clearcoatRoughness.toJSON(t).uuid),this.clearcoatNormal&&(e.clearcoatNormal=this.clearcoatNormal.toJSON(t).uuid),this.reflectivity&&(e.reflectivity=this.reflectivity.toJSON(t).uuid),this.light&&(e.light=this.light.toJSON(t).uuid),this.shadow&&(e.shadow=this.shadow.toJSON(t).uuid),this.ao&&(e.ao=this.ao.toJSON(t).uuid),this.emissive&&(e.emissive=this.emissive.toJSON(t).uuid),this.ambient&&(e.ambient=this.ambient.toJSON(t).uuid),this.environment&&(e.environment=this.environment.toJSON(t).uuid),this.sheenTint&&(e.sheenTint=this.sheenTint.toJSON(t).uuid)),e}}Ke.prototype.nodeType="Standard";class Ze extends Ke{constructor(){super(),this.properties={color:new t.Color(16777215),roughness:.5,metalness:.5,normalScale:new t.Vector2(1,1)},this.inputs={color:new Ae(this.properties,"color","c"),roughness:new Ae(this.properties,"roughness","f"),metalness:new Ae(this.properties,"metalness","f"),normalScale:new Ae(this.properties,"normalScale","v2")}}build(t){const e=this.properties,n=this.inputs;if(t.isShader("fragment")){const r=t.findNode(e.color,n.color),i=t.resolve(e.map);this.color=i?new ie(r,i,ie.MUL):r;const o=t.findNode(e.roughness,n.roughness),a=t.resolve(e.roughnessMap);this.roughness=a?new ie(o,new Be(a,"g"),ie.MUL):o;const s=t.findNode(e.metalness,n.metalness),u=t.resolve(e.metalnessMap);this.metalness=u?new ie(s,new Be(u,"b"),ie.MUL):s,e.normalMap?(this.normal=new Xe(t.resolve(e.normalMap)),this.normal.scale=t.findNode(e.normalScale,n.normalScale)):this.normal=void 0,this.environment=t.resolve(e.envMap)}return super.build(t)}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),console.warn(".toJSON not implemented in",this)),e}}Ze.prototype.nodeType="MeshStandard";Rt.addShortcuts(class extends ve{constructor(){const t=new We;super(t,t),this.type="BasicNodeMaterial"}}.prototype,"fragment",["color","alpha","mask","position"]);Rt.addShortcuts(class extends ve{constructor(){const t=new qe;super(t,t),this.type="SpriteNodeMaterial"}}.prototype,"fragment",["color","alpha","mask","position","spherical"]);Rt.addShortcuts(class extends ve{constructor(){const t=new $e;super(t,t),this.type="PhongNodeMaterial"}}.prototype,"fragment",["color","alpha","specular","shininess","normal","emissive","ambient","light","shadow","ao","environment","environmentAlpha","mask","position"]);Rt.addShortcuts(class extends ve{constructor(){const t=new Ke;super(t,t),this.type="StandardNodeMaterial"}}.prototype,"fragment",["color","alpha","roughness","metalness","reflectivity","clearcoat","clearcoatRoughness","clearcoatNormal","normal","emissive","ambient","light","shadow","ao","environment","mask","position","sheenTint"]);Rt.addShortcuts(class extends ve{constructor(){const t=new Ze;super(t,t),this.type="MeshStandardNodeMaterial"}}.prototype,"properties",["color","roughness","metalness","map","normalMap","normalScale","metalnessMap","roughnessMap","envMap"]);function tn(t){return tn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},tn(t)}function en(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function nn(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function rn(t,e){return rn=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},rn(t,e)}function on(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=sn(t);if(e){var i=sn(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return an(this,n)}}function an(t,e){if(e&&("object"===tn(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function sn(t){return sn=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},sn(t)}var un=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&rn(t,e)}(o,t);var e,n,r,i=on(o);function o(){var t,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=e.hue,r=void 0===n?0:n,a=e.saturation,s=void 0===a?1:a,u=e.vibrance,l=void 0===u?0:u,c=e.brightness,d=void 0===c?0:c,h=e.contrast,f=void 0===h?1:h;en(this,o),t=i.call(this),r=new Wt(r),s=new Wt(s),l=new Wt(l),d=new Wt(d),f=new Wt(f);var p=new ge,m=new ke(p,r,ke.HUE),v=new ke(m,s,ke.SATURATION),g=new ke(v,l,ke.VIBRANCE),x=new ke(g,d,ke.BRIGHTNESS),y=new ke(x,f,ke.CONTRAST);return t.input=y,t._hue=r,t._saturation=s,t._vibrance=l,t._brightness=d,t._contrast=f,t}return e=o,(n=[{key:"brightness",get:function(){return this._brightness.value},set:function(t){this._brightness.value=t}},{key:"contrast",get:function(){return this._contrast.value},set:function(t){this._contrast.value=t}},{key:"hue",get:function(){return this._hue.value},set:function(t){this._hue.value=t}},{key:"saturation",get:function(){return this._saturation.value},set:function(t){this._saturation.value=t}},{key:"vibrance",get:function(){return this._vibrance.value},set:function(t){this._vibrance.value=t}}])&&nn(e.prototype,n),r&&nn(e,r),o}(xe);const ln={shaderID:"luminosityHighPass",uniforms:{tDiffuse:{value:null},luminosityThreshold:{value:1},smoothWidth:{value:1},defaultColor:{value:new t.Color(0)},defaultOpacity:{value:0}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform vec3 defaultColor;\n\t\tuniform float defaultOpacity;\n\t\tuniform float luminosityThreshold;\n\t\tuniform float smoothWidth;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\n\t\t\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\n\n\t\t\tfloat v = dot( texel.xyz, luma );\n\n\t\t\tvec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );\n\n\t\t\tfloat alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );\n\n\t\t\tgl_FragColor = mix( outputColor, texel, alpha );\n\n\t\t}"};class cn extends bt{constructor(e,n,r,i){super(),this.strength=void 0!==n?n:1,this.radius=r,this.threshold=i,this.resolution=void 0!==e?new t.Vector2(e.x,e.y):new t.Vector2(256,256),this.clearColor=new t.Color(0,0,0);const o={minFilter:t.LinearFilter,magFilter:t.LinearFilter,format:t.RGBAFormat};this.renderTargetsHorizontal=[],this.renderTargetsVertical=[],this.nMips=5;let a=Math.round(this.resolution.x/2),s=Math.round(this.resolution.y/2);this.renderTargetBright=new t.WebGLRenderTarget(a,s,o),this.renderTargetBright.texture.name="UnrealBloomPass.bright",this.renderTargetBright.texture.generateMipmaps=!1;for(let e=0;e<this.nMips;e++){const n=new t.WebGLRenderTarget(a,s,o);n.texture.name="UnrealBloomPass.h"+e,n.texture.generateMipmaps=!1,this.renderTargetsHorizontal.push(n);const r=new t.WebGLRenderTarget(a,s,o);r.texture.name="UnrealBloomPass.v"+e,r.texture.generateMipmaps=!1,this.renderTargetsVertical.push(r),a=Math.round(a/2),s=Math.round(s/2)}void 0===ln&&console.error("THREE.UnrealBloomPass relies on LuminosityHighPassShader");const u=ln;this.highPassUniforms=t.UniformsUtils.clone(u.uniforms),this.highPassUniforms.luminosityThreshold.value=i,this.highPassUniforms.smoothWidth.value=.01,this.materialHighPassFilter=new t.ShaderMaterial({uniforms:this.highPassUniforms,vertexShader:u.vertexShader,fragmentShader:u.fragmentShader,defines:{}}),this.separableBlurMaterials=[];const l=[3,5,7,9,11];a=Math.round(this.resolution.x/2),s=Math.round(this.resolution.y/2);for(let e=0;e<this.nMips;e++)this.separableBlurMaterials.push(this.getSeperableBlurMaterial(l[e])),this.separableBlurMaterials[e].uniforms.texSize.value=new t.Vector2(a,s),a=Math.round(a/2),s=Math.round(s/2);this.compositeMaterial=this.getCompositeMaterial(this.nMips),this.compositeMaterial.uniforms.blurTexture1.value=this.renderTargetsVertical[0].texture,this.compositeMaterial.uniforms.blurTexture2.value=this.renderTargetsVertical[1].texture,this.compositeMaterial.uniforms.blurTexture3.value=this.renderTargetsVertical[2].texture,this.compositeMaterial.uniforms.blurTexture4.value=this.renderTargetsVertical[3].texture,this.compositeMaterial.uniforms.blurTexture5.value=this.renderTargetsVertical[4].texture,this.compositeMaterial.uniforms.bloomStrength.value=n,this.compositeMaterial.uniforms.bloomRadius.value=.1,this.compositeMaterial.needsUpdate=!0;this.compositeMaterial.uniforms.bloomFactors.value=[1,.8,.6,.4,.2],this.bloomTintColors=[new t.Vector3(1,1,1),new t.Vector3(1,1,1),new t.Vector3(1,1,1),new t.Vector3(1,1,1),new t.Vector3(1,1,1)],this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,void 0===_t&&console.error("THREE.UnrealBloomPass relies on CopyShader");const c=_t;this.copyUniforms=t.UniformsUtils.clone(c.uniforms),this.copyUniforms.opacity.value=1,this.materialCopy=new t.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:c.vertexShader,fragmentShader:c.fragmentShader,blending:t.AdditiveBlending,depthTest:!1,depthWrite:!1,transparent:!0}),this.enabled=!0,this.needsSwap=!1,this._oldClearColor=new t.Color,this.oldClearAlpha=1,this.basic=new t.MeshBasicMaterial,this.fsQuad=new St(null)}dispose(){for(let t=0;t<this.renderTargetsHorizontal.length;t++)this.renderTargetsHorizontal[t].dispose();for(let t=0;t<this.renderTargetsVertical.length;t++)this.renderTargetsVertical[t].dispose();this.renderTargetBright.dispose()}setSize(e,n){let r=Math.round(e/2),i=Math.round(n/2);this.renderTargetBright.setSize(r,i);for(let e=0;e<this.nMips;e++)this.renderTargetsHorizontal[e].setSize(r,i),this.renderTargetsVertical[e].setSize(r,i),this.separableBlurMaterials[e].uniforms.texSize.value=new t.Vector2(r,i),r=Math.round(r/2),i=Math.round(i/2)}render(t,e,n,r,i){t.getClearColor(this._oldClearColor),this.oldClearAlpha=t.getClearAlpha();const o=t.autoClear;t.autoClear=!1,t.setClearColor(this.clearColor,0),i&&t.state.buffers.stencil.setTest(!1),this.renderToScreen&&(this.fsQuad.material=this.basic,this.basic.map=n.texture,t.setRenderTarget(null),t.clear(),this.fsQuad.render(t)),this.highPassUniforms.tDiffuse.value=n.texture,this.highPassUniforms.luminosityThreshold.value=this.threshold,this.fsQuad.material=this.materialHighPassFilter,t.setRenderTarget(this.renderTargetBright),t.clear(),this.fsQuad.render(t);let a=this.renderTargetBright;for(let e=0;e<this.nMips;e++)this.fsQuad.material=this.separableBlurMaterials[e],this.separableBlurMaterials[e].uniforms.colorTexture.value=a.texture,this.separableBlurMaterials[e].uniforms.direction.value=cn.BlurDirectionX,t.setRenderTarget(this.renderTargetsHorizontal[e]),t.clear(),this.fsQuad.render(t),this.separableBlurMaterials[e].uniforms.colorTexture.value=this.renderTargetsHorizontal[e].texture,this.separableBlurMaterials[e].uniforms.direction.value=cn.BlurDirectionY,t.setRenderTarget(this.renderTargetsVertical[e]),t.clear(),this.fsQuad.render(t),a=this.renderTargetsVertical[e];this.fsQuad.material=this.compositeMaterial,this.compositeMaterial.uniforms.bloomStrength.value=this.strength,this.compositeMaterial.uniforms.bloomRadius.value=this.radius,this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,t.setRenderTarget(this.renderTargetsHorizontal[0]),t.clear(),this.fsQuad.render(t),this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetsHorizontal[0].texture,i&&t.state.buffers.stencil.setTest(!0),this.renderToScreen?(t.setRenderTarget(null),this.fsQuad.render(t)):(t.setRenderTarget(n),this.fsQuad.render(t)),t.setClearColor(this._oldClearColor,this.oldClearAlpha),t.autoClear=o}getSeperableBlurMaterial(e){return new t.ShaderMaterial({defines:{KERNEL_RADIUS:e,SIGMA:e},uniforms:{colorTexture:{value:null},texSize:{value:new t.Vector2(.5,.5)},direction:{value:new t.Vector2(.5,.5)}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"#include <common>\n\t\t\t\tvarying vec2 vUv;\n\t\t\t\tuniform sampler2D colorTexture;\n\t\t\t\tuniform vec2 texSize;\n\t\t\t\tuniform vec2 direction;\n\n\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\n\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\n\t\t\t\t}\n\t\t\t\tvoid main() {\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\n\t\t\t\t\tfloat fSigma = float(SIGMA);\n\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\n\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\n\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\n\t\t\t\t\t\tfloat x = float(i);\n\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\n\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\n\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\n\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\n\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\n\t\t\t\t\t\tweightSum += 2.0 * w;\n\t\t\t\t\t}\n\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\n\t\t\t\t}"})}getCompositeMaterial(e){return new t.ShaderMaterial({defines:{NUM_MIPS:e},uniforms:{blurTexture1:{value:null},blurTexture2:{value:null},blurTexture3:{value:null},blurTexture4:{value:null},blurTexture5:{value:null},dirtTexture:{value:null},bloomStrength:{value:1},bloomFactors:{value:null},bloomTintColors:{value:null},bloomRadius:{value:0}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"varying vec2 vUv;\n\t\t\t\tuniform sampler2D blurTexture1;\n\t\t\t\tuniform sampler2D blurTexture2;\n\t\t\t\tuniform sampler2D blurTexture3;\n\t\t\t\tuniform sampler2D blurTexture4;\n\t\t\t\tuniform sampler2D blurTexture5;\n\t\t\t\tuniform sampler2D dirtTexture;\n\t\t\t\tuniform float bloomStrength;\n\t\t\t\tuniform float bloomRadius;\n\t\t\t\tuniform float bloomFactors[NUM_MIPS];\n\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\n\n\t\t\t\tfloat lerpBloomFactor(const in float factor) {\n\t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\n\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\n\t\t\t\t}"})}}cn.BlurDirectionX=new t.Vector2(1,0),cn.BlurDirectionY=new t.Vector2(0,1);const dn="vec3 bayerMatrixDither( vec3 color ) {\r\n\r\n\tconst float BAYER_MATRIX[ 64 ] = float[ 64 ](\r\n\t\t0.0,  32.0,  8.0, 40.0,  2.0, 34.0, 10.0, 42.0,\r\n\t\t48.0, 16.0, 56.0, 24.0, 50.0, 18.0, 58.0, 26.0,\r\n\t\t12.0, 44.0,  4.0, 36.0, 14.0, 46.0,  6.0, 38.0,\r\n\t\t60.0, 28.0, 52.0, 20.0, 62.0, 30.0, 54.0, 22.0,\r\n\t\t3.0,  35.0, 11.0, 43.0,  1.0, 33.0,  9.0, 41.0,\r\n\t\t51.0, 19.0, 59.0, 27.0, 49.0, 17.0, 57.0, 25.0,\r\n\t\t15.0, 47.0,  7.0, 39.0, 13.0, 45.0,  5.0, 37.0,\r\n\t\t63.0, 31.0, 55.0, 23.0, 61.0, 29.0, 53.0, 21.0\r\n\t);\r\n\r\n\tfloat dithering = ( BAYER_MATRIX[  \r\n\t\tint( mod( gl_FragCoord.x - 0.5, 8.0 ) ) + \r\n\t\tint( mod( gl_FragCoord.y - 0.5, 8.0 ) * 8.0 )\r\n\t] / 255.0 ) / 32.0 - ( 1.0 / 128.0 );\r\n\r\n\treturn color + dithering;\r\n\t\r\n}";function hn(t){return hn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},hn(t)}function fn(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function pn(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function mn(t,e){return mn=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},mn(t,e)}function vn(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=xn(t);if(e){var i=xn(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return gn(this,n)}}function gn(t,e){if(e&&("object"===hn(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function xn(t){return xn=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},xn(t)}var yn=function(e){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&mn(t,e)}(a,e);var n,r,i,o=vn(a);function a(){return fn(this,a),o.apply(this,arguments)}return n=a,(r=[{key:"getCompositeMaterial",value:function(e){return new t.ShaderMaterial({defines:{NUM_MIPS:e},uniforms:{blurTexture1:{value:null},blurTexture2:{value:null},blurTexture3:{value:null},blurTexture4:{value:null},blurTexture5:{value:null},dirtTexture:{value:null},bloomStrength:{value:1},bloomFactors:{value:null},bloomTintColors:{value:null},bloomRadius:{value:0}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"varying vec2 vUv;\n\t\t\t\tuniform sampler2D blurTexture1;\n\t\t\t\tuniform sampler2D blurTexture2;\n\t\t\t\tuniform sampler2D blurTexture3;\n\t\t\t\tuniform sampler2D blurTexture4;\n\t\t\t\tuniform sampler2D blurTexture5;\n\t\t\t\tuniform sampler2D dirtTexture;\n\t\t\t\tuniform float bloomStrength;\n\t\t\t\tuniform float bloomRadius;\n\t\t\t\tuniform float bloomFactors[NUM_MIPS];\n\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\n\n\t\t\t\tfloat lerpBloomFactor(const in float factor) {\n\t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\n\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\n\t\t\t\t}\n\n\t\t\t\t".concat(dn,"\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tvec4 color = bloomStrength * ( \n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv)\n\t\t\t\t\t);\n\n\t\t\t\t\tcolor.rgb = bayerMatrixDither( color.rgb );\n\n\t\t\t\t\tgl_FragColor = color;\n\t\t\t\t}")})}}])&&pn(n.prototype,r),i&&pn(n,i),a}(cn);const _n={uniforms:{tDiffuse:{value:null},resolution:{value:new t.Vector2(1/1024,1/512)}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:'\n\n\t\tprecision highp float;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tuniform vec2 resolution;\n\n\t\tvarying vec2 vUv;\n\n\t\t#define FXAA_PC 1\n\t\t#define FXAA_GLSL_100 1\n\t\t#define FXAA_QUALITY_PRESET 12\n\n\t\t#define FXAA_GREEN_AS_LUMA 1\n\n\t\t/*--------------------------------------------------------------------------*/\n\t\t#ifndef FXAA_PC_CONSOLE\n\t\t\t\t//\n\t\t\t\t// The console algorithm for PC is included\n\t\t\t\t// for developers targeting really low spec machines.\n\t\t\t\t// Likely better to just run FXAA_PC, and use a really low preset.\n\t\t\t\t//\n\t\t\t\t#define FXAA_PC_CONSOLE 0\n\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t#ifndef FXAA_GLSL_120\n\t\t\t\t#define FXAA_GLSL_120 0\n\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t#ifndef FXAA_GLSL_130\n\t\t\t\t#define FXAA_GLSL_130 0\n\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t#ifndef FXAA_HLSL_3\n\t\t\t\t#define FXAA_HLSL_3 0\n\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t#ifndef FXAA_HLSL_4\n\t\t\t\t#define FXAA_HLSL_4 0\n\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t#ifndef FXAA_HLSL_5\n\t\t\t\t#define FXAA_HLSL_5 0\n\t\t#endif\n\t\t/*==========================================================================*/\n\t\t#ifndef FXAA_GREEN_AS_LUMA\n\t\t\t\t//\n\t\t\t\t// For those using non-linear color,\n\t\t\t\t// and either not able to get luma in alpha, or not wanting to,\n\t\t\t\t// this enables FXAA to run using green as a proxy for luma.\n\t\t\t\t// So with this enabled, no need to pack luma in alpha.\n\t\t\t\t//\n\t\t\t\t// This will turn off AA on anything which lacks some amount of green.\n\t\t\t\t// Pure red and blue or combination of only R and B, will get no AA.\n\t\t\t\t//\n\t\t\t\t// Might want to lower the settings for both,\n\t\t\t\t//\t\tfxaaConsoleEdgeThresholdMin\n\t\t\t\t//\t\tfxaaQualityEdgeThresholdMin\n\t\t\t\t// In order to insure AA does not get turned off on colors\n\t\t\t\t// which contain a minor amount of green.\n\t\t\t\t//\n\t\t\t\t// 1 = On.\n\t\t\t\t// 0 = Off.\n\t\t\t\t//\n\t\t\t\t#define FXAA_GREEN_AS_LUMA 0\n\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t#ifndef FXAA_EARLY_EXIT\n\t\t\t\t//\n\t\t\t\t// Controls algorithm\'s early exit path.\n\t\t\t\t// On PS3 turning this ON adds 2 cycles to the shader.\n\t\t\t\t// On 360 turning this OFF adds 10ths of a millisecond to the shader.\n\t\t\t\t// Turning this off on console will result in a more blurry image.\n\t\t\t\t// So this defaults to on.\n\t\t\t\t//\n\t\t\t\t// 1 = On.\n\t\t\t\t// 0 = Off.\n\t\t\t\t//\n\t\t\t\t#define FXAA_EARLY_EXIT 1\n\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t#ifndef FXAA_DISCARD\n\t\t\t\t//\n\t\t\t\t// Only valid for PC OpenGL currently.\n\t\t\t\t// Probably will not work when FXAA_GREEN_AS_LUMA = 1.\n\t\t\t\t//\n\t\t\t\t// 1 = Use discard on pixels which don\'t need AA.\n\t\t\t\t//\t\t For APIs which enable concurrent TEX+ROP from same surface.\n\t\t\t\t// 0 = Return unchanged color on pixels which don\'t need AA.\n\t\t\t\t//\n\t\t\t\t#define FXAA_DISCARD 0\n\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t#ifndef FXAA_FAST_PIXEL_OFFSET\n\t\t\t\t//\n\t\t\t\t// Used for GLSL 120 only.\n\t\t\t\t//\n\t\t\t\t// 1 = GL API supports fast pixel offsets\n\t\t\t\t// 0 = do not use fast pixel offsets\n\t\t\t\t//\n\t\t\t\t#ifdef GL_EXT_gpu_shader4\n\t\t\t\t\t\t#define FXAA_FAST_PIXEL_OFFSET 1\n\t\t\t\t#endif\n\t\t\t\t#ifdef GL_NV_gpu_shader5\n\t\t\t\t\t\t#define FXAA_FAST_PIXEL_OFFSET 1\n\t\t\t\t#endif\n\t\t\t\t#ifdef GL_ARB_gpu_shader5\n\t\t\t\t\t\t#define FXAA_FAST_PIXEL_OFFSET 1\n\t\t\t\t#endif\n\t\t\t\t#ifndef FXAA_FAST_PIXEL_OFFSET\n\t\t\t\t\t\t#define FXAA_FAST_PIXEL_OFFSET 0\n\t\t\t\t#endif\n\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t#ifndef FXAA_GATHER4_ALPHA\n\t\t\t\t//\n\t\t\t\t// 1 = API supports gather4 on alpha channel.\n\t\t\t\t// 0 = API does not support gather4 on alpha channel.\n\t\t\t\t//\n\t\t\t\t#if (FXAA_HLSL_5 == 1)\n\t\t\t\t\t\t#define FXAA_GATHER4_ALPHA 1\n\t\t\t\t#endif\n\t\t\t\t#ifdef GL_ARB_gpu_shader5\n\t\t\t\t\t\t#define FXAA_GATHER4_ALPHA 1\n\t\t\t\t#endif\n\t\t\t\t#ifdef GL_NV_gpu_shader5\n\t\t\t\t\t\t#define FXAA_GATHER4_ALPHA 1\n\t\t\t\t#endif\n\t\t\t\t#ifndef FXAA_GATHER4_ALPHA\n\t\t\t\t\t\t#define FXAA_GATHER4_ALPHA 0\n\t\t\t\t#endif\n\t\t#endif\n\n\n\t\t/*============================================================================\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tFXAA QUALITY - TUNING KNOBS\n\t\t------------------------------------------------------------------------------\n\t\tNOTE the other tuning knobs are now in the shader function inputs!\n\t\t============================================================================*/\n\t\t#ifndef FXAA_QUALITY_PRESET\n\t\t\t\t//\n\t\t\t\t// Choose the quality preset.\n\t\t\t\t// This needs to be compiled into the shader as it effects code.\n\t\t\t\t// Best option to include multiple presets is to\n\t\t\t\t// in each shader define the preset, then include this file.\n\t\t\t\t//\n\t\t\t\t// OPTIONS\n\t\t\t\t// -----------------------------------------------------------------------\n\t\t\t\t// 10 to 15 - default medium dither (10=fastest, 15=highest quality)\n\t\t\t\t// 20 to 29 - less dither, more expensive (20=fastest, 29=highest quality)\n\t\t\t\t// 39\t\t\t - no dither, very expensive\n\t\t\t\t//\n\t\t\t\t// NOTES\n\t\t\t\t// -----------------------------------------------------------------------\n\t\t\t\t// 12 = slightly faster then FXAA 3.9 and higher edge quality (default)\n\t\t\t\t// 13 = about same speed as FXAA 3.9 and better than 12\n\t\t\t\t// 23 = closest to FXAA 3.9 visually and performance wise\n\t\t\t\t//\t_ = the lowest digit is directly related to performance\n\t\t\t\t// _\t= the highest digit is directly related to style\n\t\t\t\t//\n\t\t\t\t#define FXAA_QUALITY_PRESET 12\n\t\t#endif\n\n\n\t\t/*============================================================================\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t FXAA QUALITY - PRESETS\n\n\t\t============================================================================*/\n\n\t\t/*============================================================================\n\t\t\t\t\t\t\t\t\t\t\t\t FXAA QUALITY - MEDIUM DITHER PRESETS\n\t\t============================================================================*/\n\t\t#if (FXAA_QUALITY_PRESET == 10)\n\t\t\t\t#define FXAA_QUALITY_PS 3\n\t\t\t\t#define FXAA_QUALITY_P0 1.5\n\t\t\t\t#define FXAA_QUALITY_P1 3.0\n\t\t\t\t#define FXAA_QUALITY_P2 12.0\n\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t#if (FXAA_QUALITY_PRESET == 11)\n\t\t\t\t#define FXAA_QUALITY_PS 4\n\t\t\t\t#define FXAA_QUALITY_P0 1.0\n\t\t\t\t#define FXAA_QUALITY_P1 1.5\n\t\t\t\t#define FXAA_QUALITY_P2 3.0\n\t\t\t\t#define FXAA_QUALITY_P3 12.0\n\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t#if (FXAA_QUALITY_PRESET == 12)\n\t\t\t\t#define FXAA_QUALITY_PS 5\n\t\t\t\t#define FXAA_QUALITY_P0 1.0\n\t\t\t\t#define FXAA_QUALITY_P1 1.5\n\t\t\t\t#define FXAA_QUALITY_P2 2.0\n\t\t\t\t#define FXAA_QUALITY_P3 4.0\n\t\t\t\t#define FXAA_QUALITY_P4 12.0\n\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t#if (FXAA_QUALITY_PRESET == 13)\n\t\t\t\t#define FXAA_QUALITY_PS 6\n\t\t\t\t#define FXAA_QUALITY_P0 1.0\n\t\t\t\t#define FXAA_QUALITY_P1 1.5\n\t\t\t\t#define FXAA_QUALITY_P2 2.0\n\t\t\t\t#define FXAA_QUALITY_P3 2.0\n\t\t\t\t#define FXAA_QUALITY_P4 4.0\n\t\t\t\t#define FXAA_QUALITY_P5 12.0\n\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t#if (FXAA_QUALITY_PRESET == 14)\n\t\t\t\t#define FXAA_QUALITY_PS 7\n\t\t\t\t#define FXAA_QUALITY_P0 1.0\n\t\t\t\t#define FXAA_QUALITY_P1 1.5\n\t\t\t\t#define FXAA_QUALITY_P2 2.0\n\t\t\t\t#define FXAA_QUALITY_P3 2.0\n\t\t\t\t#define FXAA_QUALITY_P4 2.0\n\t\t\t\t#define FXAA_QUALITY_P5 4.0\n\t\t\t\t#define FXAA_QUALITY_P6 12.0\n\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t#if (FXAA_QUALITY_PRESET == 15)\n\t\t\t\t#define FXAA_QUALITY_PS 8\n\t\t\t\t#define FXAA_QUALITY_P0 1.0\n\t\t\t\t#define FXAA_QUALITY_P1 1.5\n\t\t\t\t#define FXAA_QUALITY_P2 2.0\n\t\t\t\t#define FXAA_QUALITY_P3 2.0\n\t\t\t\t#define FXAA_QUALITY_P4 2.0\n\t\t\t\t#define FXAA_QUALITY_P5 2.0\n\t\t\t\t#define FXAA_QUALITY_P6 4.0\n\t\t\t\t#define FXAA_QUALITY_P7 12.0\n\t\t#endif\n\n\t\t/*============================================================================\n\t\t\t\t\t\t\t\t\t\t\t\t FXAA QUALITY - LOW DITHER PRESETS\n\t\t============================================================================*/\n\t\t#if (FXAA_QUALITY_PRESET == 20)\n\t\t\t\t#define FXAA_QUALITY_PS 3\n\t\t\t\t#define FXAA_QUALITY_P0 1.5\n\t\t\t\t#define FXAA_QUALITY_P1 2.0\n\t\t\t\t#define FXAA_QUALITY_P2 8.0\n\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t#if (FXAA_QUALITY_PRESET == 21)\n\t\t\t\t#define FXAA_QUALITY_PS 4\n\t\t\t\t#define FXAA_QUALITY_P0 1.0\n\t\t\t\t#define FXAA_QUALITY_P1 1.5\n\t\t\t\t#define FXAA_QUALITY_P2 2.0\n\t\t\t\t#define FXAA_QUALITY_P3 8.0\n\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t#if (FXAA_QUALITY_PRESET == 22)\n\t\t\t\t#define FXAA_QUALITY_PS 5\n\t\t\t\t#define FXAA_QUALITY_P0 1.0\n\t\t\t\t#define FXAA_QUALITY_P1 1.5\n\t\t\t\t#define FXAA_QUALITY_P2 2.0\n\t\t\t\t#define FXAA_QUALITY_P3 2.0\n\t\t\t\t#define FXAA_QUALITY_P4 8.0\n\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t#if (FXAA_QUALITY_PRESET == 23)\n\t\t\t\t#define FXAA_QUALITY_PS 6\n\t\t\t\t#define FXAA_QUALITY_P0 1.0\n\t\t\t\t#define FXAA_QUALITY_P1 1.5\n\t\t\t\t#define FXAA_QUALITY_P2 2.0\n\t\t\t\t#define FXAA_QUALITY_P3 2.0\n\t\t\t\t#define FXAA_QUALITY_P4 2.0\n\t\t\t\t#define FXAA_QUALITY_P5 8.0\n\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t#if (FXAA_QUALITY_PRESET == 24)\n\t\t\t\t#define FXAA_QUALITY_PS 7\n\t\t\t\t#define FXAA_QUALITY_P0 1.0\n\t\t\t\t#define FXAA_QUALITY_P1 1.5\n\t\t\t\t#define FXAA_QUALITY_P2 2.0\n\t\t\t\t#define FXAA_QUALITY_P3 2.0\n\t\t\t\t#define FXAA_QUALITY_P4 2.0\n\t\t\t\t#define FXAA_QUALITY_P5 3.0\n\t\t\t\t#define FXAA_QUALITY_P6 8.0\n\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t#if (FXAA_QUALITY_PRESET == 25)\n\t\t\t\t#define FXAA_QUALITY_PS 8\n\t\t\t\t#define FXAA_QUALITY_P0 1.0\n\t\t\t\t#define FXAA_QUALITY_P1 1.5\n\t\t\t\t#define FXAA_QUALITY_P2 2.0\n\t\t\t\t#define FXAA_QUALITY_P3 2.0\n\t\t\t\t#define FXAA_QUALITY_P4 2.0\n\t\t\t\t#define FXAA_QUALITY_P5 2.0\n\t\t\t\t#define FXAA_QUALITY_P6 4.0\n\t\t\t\t#define FXAA_QUALITY_P7 8.0\n\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t#if (FXAA_QUALITY_PRESET == 26)\n\t\t\t\t#define FXAA_QUALITY_PS 9\n\t\t\t\t#define FXAA_QUALITY_P0 1.0\n\t\t\t\t#define FXAA_QUALITY_P1 1.5\n\t\t\t\t#define FXAA_QUALITY_P2 2.0\n\t\t\t\t#define FXAA_QUALITY_P3 2.0\n\t\t\t\t#define FXAA_QUALITY_P4 2.0\n\t\t\t\t#define FXAA_QUALITY_P5 2.0\n\t\t\t\t#define FXAA_QUALITY_P6 2.0\n\t\t\t\t#define FXAA_QUALITY_P7 4.0\n\t\t\t\t#define FXAA_QUALITY_P8 8.0\n\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t#if (FXAA_QUALITY_PRESET == 27)\n\t\t\t\t#define FXAA_QUALITY_PS 10\n\t\t\t\t#define FXAA_QUALITY_P0 1.0\n\t\t\t\t#define FXAA_QUALITY_P1 1.5\n\t\t\t\t#define FXAA_QUALITY_P2 2.0\n\t\t\t\t#define FXAA_QUALITY_P3 2.0\n\t\t\t\t#define FXAA_QUALITY_P4 2.0\n\t\t\t\t#define FXAA_QUALITY_P5 2.0\n\t\t\t\t#define FXAA_QUALITY_P6 2.0\n\t\t\t\t#define FXAA_QUALITY_P7 2.0\n\t\t\t\t#define FXAA_QUALITY_P8 4.0\n\t\t\t\t#define FXAA_QUALITY_P9 8.0\n\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t#if (FXAA_QUALITY_PRESET == 28)\n\t\t\t\t#define FXAA_QUALITY_PS 11\n\t\t\t\t#define FXAA_QUALITY_P0 1.0\n\t\t\t\t#define FXAA_QUALITY_P1 1.5\n\t\t\t\t#define FXAA_QUALITY_P2 2.0\n\t\t\t\t#define FXAA_QUALITY_P3 2.0\n\t\t\t\t#define FXAA_QUALITY_P4 2.0\n\t\t\t\t#define FXAA_QUALITY_P5 2.0\n\t\t\t\t#define FXAA_QUALITY_P6 2.0\n\t\t\t\t#define FXAA_QUALITY_P7 2.0\n\t\t\t\t#define FXAA_QUALITY_P8 2.0\n\t\t\t\t#define FXAA_QUALITY_P9 4.0\n\t\t\t\t#define FXAA_QUALITY_P10 8.0\n\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t#if (FXAA_QUALITY_PRESET == 29)\n\t\t\t\t#define FXAA_QUALITY_PS 12\n\t\t\t\t#define FXAA_QUALITY_P0 1.0\n\t\t\t\t#define FXAA_QUALITY_P1 1.5\n\t\t\t\t#define FXAA_QUALITY_P2 2.0\n\t\t\t\t#define FXAA_QUALITY_P3 2.0\n\t\t\t\t#define FXAA_QUALITY_P4 2.0\n\t\t\t\t#define FXAA_QUALITY_P5 2.0\n\t\t\t\t#define FXAA_QUALITY_P6 2.0\n\t\t\t\t#define FXAA_QUALITY_P7 2.0\n\t\t\t\t#define FXAA_QUALITY_P8 2.0\n\t\t\t\t#define FXAA_QUALITY_P9 2.0\n\t\t\t\t#define FXAA_QUALITY_P10 4.0\n\t\t\t\t#define FXAA_QUALITY_P11 8.0\n\t\t#endif\n\n\t\t/*============================================================================\n\t\t\t\t\t\t\t\t\t\t\t\t FXAA QUALITY - EXTREME QUALITY\n\t\t============================================================================*/\n\t\t#if (FXAA_QUALITY_PRESET == 39)\n\t\t\t\t#define FXAA_QUALITY_PS 12\n\t\t\t\t#define FXAA_QUALITY_P0 1.0\n\t\t\t\t#define FXAA_QUALITY_P1 1.0\n\t\t\t\t#define FXAA_QUALITY_P2 1.0\n\t\t\t\t#define FXAA_QUALITY_P3 1.0\n\t\t\t\t#define FXAA_QUALITY_P4 1.0\n\t\t\t\t#define FXAA_QUALITY_P5 1.5\n\t\t\t\t#define FXAA_QUALITY_P6 2.0\n\t\t\t\t#define FXAA_QUALITY_P7 2.0\n\t\t\t\t#define FXAA_QUALITY_P8 2.0\n\t\t\t\t#define FXAA_QUALITY_P9 2.0\n\t\t\t\t#define FXAA_QUALITY_P10 4.0\n\t\t\t\t#define FXAA_QUALITY_P11 8.0\n\t\t#endif\n\n\n\n\t\t/*============================================================================\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAPI PORTING\n\n\t\t============================================================================*/\n\t\t#if (FXAA_GLSL_100 == 1) || (FXAA_GLSL_120 == 1) || (FXAA_GLSL_130 == 1)\n\t\t\t\t#define FxaaBool bool\n\t\t\t\t#define FxaaDiscard discard\n\t\t\t\t#define FxaaFloat float\n\t\t\t\t#define FxaaFloat2 vec2\n\t\t\t\t#define FxaaFloat3 vec3\n\t\t\t\t#define FxaaFloat4 vec4\n\t\t\t\t#define FxaaHalf float\n\t\t\t\t#define FxaaHalf2 vec2\n\t\t\t\t#define FxaaHalf3 vec3\n\t\t\t\t#define FxaaHalf4 vec4\n\t\t\t\t#define FxaaInt2 ivec2\n\t\t\t\t#define FxaaSat(x) clamp(x, 0.0, 1.0)\n\t\t\t\t#define FxaaTex sampler2D\n\t\t#else\n\t\t\t\t#define FxaaBool bool\n\t\t\t\t#define FxaaDiscard clip(-1)\n\t\t\t\t#define FxaaFloat float\n\t\t\t\t#define FxaaFloat2 float2\n\t\t\t\t#define FxaaFloat3 float3\n\t\t\t\t#define FxaaFloat4 float4\n\t\t\t\t#define FxaaHalf half\n\t\t\t\t#define FxaaHalf2 half2\n\t\t\t\t#define FxaaHalf3 half3\n\t\t\t\t#define FxaaHalf4 half4\n\t\t\t\t#define FxaaSat(x) saturate(x)\n\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t#if (FXAA_GLSL_100 == 1)\n\t\t\t#define FxaaTexTop(t, p) texture2D(t, p, 0.0)\n\t\t\t#define FxaaTexOff(t, p, o, r) texture2D(t, p + (o * r), 0.0)\n\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t#if (FXAA_GLSL_120 == 1)\n\t\t\t\t// Requires,\n\t\t\t\t//\t#version 120\n\t\t\t\t// And at least,\n\t\t\t\t//\t#extension GL_EXT_gpu_shader4 : enable\n\t\t\t\t//\t(or set FXAA_FAST_PIXEL_OFFSET 1 to work like DX9)\n\t\t\t\t#define FxaaTexTop(t, p) texture2DLod(t, p, 0.0)\n\t\t\t\t#if (FXAA_FAST_PIXEL_OFFSET == 1)\n\t\t\t\t\t\t#define FxaaTexOff(t, p, o, r) texture2DLodOffset(t, p, 0.0, o)\n\t\t\t\t#else\n\t\t\t\t\t\t#define FxaaTexOff(t, p, o, r) texture2DLod(t, p + (o * r), 0.0)\n\t\t\t\t#endif\n\t\t\t\t#if (FXAA_GATHER4_ALPHA == 1)\n\t\t\t\t\t\t// use #extension GL_ARB_gpu_shader5 : enable\n\t\t\t\t\t\t#define FxaaTexAlpha4(t, p) textureGather(t, p, 3)\n\t\t\t\t\t\t#define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)\n\t\t\t\t\t\t#define FxaaTexGreen4(t, p) textureGather(t, p, 1)\n\t\t\t\t\t\t#define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)\n\t\t\t\t#endif\n\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t#if (FXAA_GLSL_130 == 1)\n\t\t\t\t// Requires "#version 130" or better\n\t\t\t\t#define FxaaTexTop(t, p) textureLod(t, p, 0.0)\n\t\t\t\t#define FxaaTexOff(t, p, o, r) textureLodOffset(t, p, 0.0, o)\n\t\t\t\t#if (FXAA_GATHER4_ALPHA == 1)\n\t\t\t\t\t\t// use #extension GL_ARB_gpu_shader5 : enable\n\t\t\t\t\t\t#define FxaaTexAlpha4(t, p) textureGather(t, p, 3)\n\t\t\t\t\t\t#define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)\n\t\t\t\t\t\t#define FxaaTexGreen4(t, p) textureGather(t, p, 1)\n\t\t\t\t\t\t#define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)\n\t\t\t\t#endif\n\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t#if (FXAA_HLSL_3 == 1)\n\t\t\t\t#define FxaaInt2 float2\n\t\t\t\t#define FxaaTex sampler2D\n\t\t\t\t#define FxaaTexTop(t, p) tex2Dlod(t, float4(p, 0.0, 0.0))\n\t\t\t\t#define FxaaTexOff(t, p, o, r) tex2Dlod(t, float4(p + (o * r), 0, 0))\n\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t#if (FXAA_HLSL_4 == 1)\n\t\t\t\t#define FxaaInt2 int2\n\t\t\t\tstruct FxaaTex { SamplerState smpl; Texture2D tex; };\n\t\t\t\t#define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)\n\t\t\t\t#define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)\n\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t#if (FXAA_HLSL_5 == 1)\n\t\t\t\t#define FxaaInt2 int2\n\t\t\t\tstruct FxaaTex { SamplerState smpl; Texture2D tex; };\n\t\t\t\t#define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)\n\t\t\t\t#define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)\n\t\t\t\t#define FxaaTexAlpha4(t, p) t.tex.GatherAlpha(t.smpl, p)\n\t\t\t\t#define FxaaTexOffAlpha4(t, p, o) t.tex.GatherAlpha(t.smpl, p, o)\n\t\t\t\t#define FxaaTexGreen4(t, p) t.tex.GatherGreen(t.smpl, p)\n\t\t\t\t#define FxaaTexOffGreen4(t, p, o) t.tex.GatherGreen(t.smpl, p, o)\n\t\t#endif\n\n\n\t\t/*============================================================================\n\t\t\t\t\t\t\t\t\t\t\t GREEN AS LUMA OPTION SUPPORT FUNCTION\n\t\t============================================================================*/\n\t\t#if (FXAA_GREEN_AS_LUMA == 0)\n\t\t\t\tFxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.w; }\n\t\t#else\n\t\t\t\tFxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.y; }\n\t\t#endif\n\n\n\n\n\t\t/*============================================================================\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t FXAA3 QUALITY - PC\n\n\t\t============================================================================*/\n\t\t#if (FXAA_PC == 1)\n\t\t/*--------------------------------------------------------------------------*/\n\t\tFxaaFloat4 FxaaPixelShader(\n\t\t\t\t//\n\t\t\t\t// Use noperspective interpolation here (turn off perspective interpolation).\n\t\t\t\t// {xy} = center of pixel\n\t\t\t\tFxaaFloat2 pos,\n\t\t\t\t//\n\t\t\t\t// Used only for FXAA Console, and not used on the 360 version.\n\t\t\t\t// Use noperspective interpolation here (turn off perspective interpolation).\n\t\t\t\t// {xy_} = upper left of pixel\n\t\t\t\t// {_zw} = lower right of pixel\n\t\t\t\tFxaaFloat4 fxaaConsolePosPos,\n\t\t\t\t//\n\t\t\t\t// Input color texture.\n\t\t\t\t// {rgb_} = color in linear or perceptual color space\n\t\t\t\t// if (FXAA_GREEN_AS_LUMA == 0)\n\t\t\t\t//\t\t {__a} = luma in perceptual color space (not linear)\n\t\t\t\tFxaaTex tex,\n\t\t\t\t//\n\t\t\t\t// Only used on the optimized 360 version of FXAA Console.\n\t\t\t\t// For everything but 360, just use the same input here as for "tex".\n\t\t\t\t// For 360, same texture, just alias with a 2nd sampler.\n\t\t\t\t// This sampler needs to have an exponent bias of -1.\n\t\t\t\tFxaaTex fxaaConsole360TexExpBiasNegOne,\n\t\t\t\t//\n\t\t\t\t// Only used on the optimized 360 version of FXAA Console.\n\t\t\t\t// For everything but 360, just use the same input here as for "tex".\n\t\t\t\t// For 360, same texture, just alias with a 3nd sampler.\n\t\t\t\t// This sampler needs to have an exponent bias of -2.\n\t\t\t\tFxaaTex fxaaConsole360TexExpBiasNegTwo,\n\t\t\t\t//\n\t\t\t\t// Only used on FXAA Quality.\n\t\t\t\t// This must be from a constant/uniform.\n\t\t\t\t// {x_} = 1.0/screenWidthInPixels\n\t\t\t\t// {_y} = 1.0/screenHeightInPixels\n\t\t\t\tFxaaFloat2 fxaaQualityRcpFrame,\n\t\t\t\t//\n\t\t\t\t// Only used on FXAA Console.\n\t\t\t\t// This must be from a constant/uniform.\n\t\t\t\t// This effects sub-pixel AA quality and inversely sharpness.\n\t\t\t\t//\t Where N ranges between,\n\t\t\t\t//\t\t N = 0.50 (default)\n\t\t\t\t//\t\t N = 0.33 (sharper)\n\t\t\t\t// {x__} = -N/screenWidthInPixels\n\t\t\t\t// {_y_} = -N/screenHeightInPixels\n\t\t\t\t// {_z_} =\tN/screenWidthInPixels\n\t\t\t\t// {__w} =\tN/screenHeightInPixels\n\t\t\t\tFxaaFloat4 fxaaConsoleRcpFrameOpt,\n\t\t\t\t//\n\t\t\t\t// Only used on FXAA Console.\n\t\t\t\t// Not used on 360, but used on PS3 and PC.\n\t\t\t\t// This must be from a constant/uniform.\n\t\t\t\t// {x__} = -2.0/screenWidthInPixels\n\t\t\t\t// {_y_} = -2.0/screenHeightInPixels\n\t\t\t\t// {_z_} =\t2.0/screenWidthInPixels\n\t\t\t\t// {__w} =\t2.0/screenHeightInPixels\n\t\t\t\tFxaaFloat4 fxaaConsoleRcpFrameOpt2,\n\t\t\t\t//\n\t\t\t\t// Only used on FXAA Console.\n\t\t\t\t// Only used on 360 in place of fxaaConsoleRcpFrameOpt2.\n\t\t\t\t// This must be from a constant/uniform.\n\t\t\t\t// {x__} =\t8.0/screenWidthInPixels\n\t\t\t\t// {_y_} =\t8.0/screenHeightInPixels\n\t\t\t\t// {_z_} = -4.0/screenWidthInPixels\n\t\t\t\t// {__w} = -4.0/screenHeightInPixels\n\t\t\t\tFxaaFloat4 fxaaConsole360RcpFrameOpt2,\n\t\t\t\t//\n\t\t\t\t// Only used on FXAA Quality.\n\t\t\t\t// This used to be the FXAA_QUALITY_SUBPIX define.\n\t\t\t\t// It is here now to allow easier tuning.\n\t\t\t\t// Choose the amount of sub-pixel aliasing removal.\n\t\t\t\t// This can effect sharpness.\n\t\t\t\t//\t 1.00 - upper limit (softer)\n\t\t\t\t//\t 0.75 - default amount of filtering\n\t\t\t\t//\t 0.50 - lower limit (sharper, less sub-pixel aliasing removal)\n\t\t\t\t//\t 0.25 - almost off\n\t\t\t\t//\t 0.00 - completely off\n\t\t\t\tFxaaFloat fxaaQualitySubpix,\n\t\t\t\t//\n\t\t\t\t// Only used on FXAA Quality.\n\t\t\t\t// This used to be the FXAA_QUALITY_EDGE_THRESHOLD define.\n\t\t\t\t// It is here now to allow easier tuning.\n\t\t\t\t// The minimum amount of local contrast required to apply algorithm.\n\t\t\t\t//\t 0.333 - too little (faster)\n\t\t\t\t//\t 0.250 - low quality\n\t\t\t\t//\t 0.166 - default\n\t\t\t\t//\t 0.125 - high quality\n\t\t\t\t//\t 0.063 - overkill (slower)\n\t\t\t\tFxaaFloat fxaaQualityEdgeThreshold,\n\t\t\t\t//\n\t\t\t\t// Only used on FXAA Quality.\n\t\t\t\t// This used to be the FXAA_QUALITY_EDGE_THRESHOLD_MIN define.\n\t\t\t\t// It is here now to allow easier tuning.\n\t\t\t\t// Trims the algorithm from processing darks.\n\t\t\t\t//\t 0.0833 - upper limit (default, the start of visible unfiltered edges)\n\t\t\t\t//\t 0.0625 - high quality (faster)\n\t\t\t\t//\t 0.0312 - visible limit (slower)\n\t\t\t\t// Special notes when using FXAA_GREEN_AS_LUMA,\n\t\t\t\t//\t Likely want to set this to zero.\n\t\t\t\t//\t As colors that are mostly not-green\n\t\t\t\t//\t will appear very dark in the green channel!\n\t\t\t\t//\t Tune by looking at mostly non-green content,\n\t\t\t\t//\t then start at zero and increase until aliasing is a problem.\n\t\t\t\tFxaaFloat fxaaQualityEdgeThresholdMin,\n\t\t\t\t//\n\t\t\t\t// Only used on FXAA Console.\n\t\t\t\t// This used to be the FXAA_CONSOLE_EDGE_SHARPNESS define.\n\t\t\t\t// It is here now to allow easier tuning.\n\t\t\t\t// This does not effect PS3, as this needs to be compiled in.\n\t\t\t\t//\t Use FXAA_CONSOLE_PS3_EDGE_SHARPNESS for PS3.\n\t\t\t\t//\t Due to the PS3 being ALU bound,\n\t\t\t\t//\t there are only three safe values here: 2 and 4 and 8.\n\t\t\t\t//\t These options use the shaders ability to a free *|/ by 2|4|8.\n\t\t\t\t// For all other platforms can be a non-power of two.\n\t\t\t\t//\t 8.0 is sharper (default!!!)\n\t\t\t\t//\t 4.0 is softer\n\t\t\t\t//\t 2.0 is really soft (good only for vector graphics inputs)\n\t\t\t\tFxaaFloat fxaaConsoleEdgeSharpness,\n\t\t\t\t//\n\t\t\t\t// Only used on FXAA Console.\n\t\t\t\t// This used to be the FXAA_CONSOLE_EDGE_THRESHOLD define.\n\t\t\t\t// It is here now to allow easier tuning.\n\t\t\t\t// This does not effect PS3, as this needs to be compiled in.\n\t\t\t\t//\t Use FXAA_CONSOLE_PS3_EDGE_THRESHOLD for PS3.\n\t\t\t\t//\t Due to the PS3 being ALU bound,\n\t\t\t\t//\t there are only two safe values here: 1/4 and 1/8.\n\t\t\t\t//\t These options use the shaders ability to a free *|/ by 2|4|8.\n\t\t\t\t// The console setting has a different mapping than the quality setting.\n\t\t\t\t// Other platforms can use other values.\n\t\t\t\t//\t 0.125 leaves less aliasing, but is softer (default!!!)\n\t\t\t\t//\t 0.25 leaves more aliasing, and is sharper\n\t\t\t\tFxaaFloat fxaaConsoleEdgeThreshold,\n\t\t\t\t//\n\t\t\t\t// Only used on FXAA Console.\n\t\t\t\t// This used to be the FXAA_CONSOLE_EDGE_THRESHOLD_MIN define.\n\t\t\t\t// It is here now to allow easier tuning.\n\t\t\t\t// Trims the algorithm from processing darks.\n\t\t\t\t// The console setting has a different mapping than the quality setting.\n\t\t\t\t// This only applies when FXAA_EARLY_EXIT is 1.\n\t\t\t\t// This does not apply to PS3,\n\t\t\t\t// PS3 was simplified to avoid more shader instructions.\n\t\t\t\t//\t 0.06 - faster but more aliasing in darks\n\t\t\t\t//\t 0.05 - default\n\t\t\t\t//\t 0.04 - slower and less aliasing in darks\n\t\t\t\t// Special notes when using FXAA_GREEN_AS_LUMA,\n\t\t\t\t//\t Likely want to set this to zero.\n\t\t\t\t//\t As colors that are mostly not-green\n\t\t\t\t//\t will appear very dark in the green channel!\n\t\t\t\t//\t Tune by looking at mostly non-green content,\n\t\t\t\t//\t then start at zero and increase until aliasing is a problem.\n\t\t\t\tFxaaFloat fxaaConsoleEdgeThresholdMin,\n\t\t\t\t//\n\t\t\t\t// Extra constants for 360 FXAA Console only.\n\t\t\t\t// Use zeros or anything else for other platforms.\n\t\t\t\t// These must be in physical constant registers and NOT immediates.\n\t\t\t\t// Immediates will result in compiler un-optimizing.\n\t\t\t\t// {xyzw} = float4(1.0, -1.0, 0.25, -0.25)\n\t\t\t\tFxaaFloat4 fxaaConsole360ConstDir\n\t\t) {\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\tFxaaFloat2 posM;\n\t\t\t\tposM.x = pos.x;\n\t\t\t\tposM.y = pos.y;\n\t\t\t\t#if (FXAA_GATHER4_ALPHA == 1)\n\t\t\t\t\t\t#if (FXAA_DISCARD == 0)\n\t\t\t\t\t\t\t\tFxaaFloat4 rgbyM = FxaaTexTop(tex, posM);\n\t\t\t\t\t\t\t\t#if (FXAA_GREEN_AS_LUMA == 0)\n\t\t\t\t\t\t\t\t\t\t#define lumaM rgbyM.w\n\t\t\t\t\t\t\t\t#else\n\t\t\t\t\t\t\t\t\t\t#define lumaM rgbyM.y\n\t\t\t\t\t\t\t\t#endif\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\t#if (FXAA_GREEN_AS_LUMA == 0)\n\t\t\t\t\t\t\t\tFxaaFloat4 luma4A = FxaaTexAlpha4(tex, posM);\n\t\t\t\t\t\t\t\tFxaaFloat4 luma4B = FxaaTexOffAlpha4(tex, posM, FxaaInt2(-1, -1));\n\t\t\t\t\t\t#else\n\t\t\t\t\t\t\t\tFxaaFloat4 luma4A = FxaaTexGreen4(tex, posM);\n\t\t\t\t\t\t\t\tFxaaFloat4 luma4B = FxaaTexOffGreen4(tex, posM, FxaaInt2(-1, -1));\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\t#if (FXAA_DISCARD == 1)\n\t\t\t\t\t\t\t\t#define lumaM luma4A.w\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\t#define lumaE luma4A.z\n\t\t\t\t\t\t#define lumaS luma4A.x\n\t\t\t\t\t\t#define lumaSE luma4A.y\n\t\t\t\t\t\t#define lumaNW luma4B.w\n\t\t\t\t\t\t#define lumaN luma4B.z\n\t\t\t\t\t\t#define lumaW luma4B.x\n\t\t\t\t#else\n\t\t\t\t\t\tFxaaFloat4 rgbyM = FxaaTexTop(tex, posM);\n\t\t\t\t\t\t#if (FXAA_GREEN_AS_LUMA == 0)\n\t\t\t\t\t\t\t\t#define lumaM rgbyM.w\n\t\t\t\t\t\t#else\n\t\t\t\t\t\t\t\t#define lumaM rgbyM.y\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\t#if (FXAA_GLSL_100 == 1)\n\t\t\t\t\t\t\tFxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0, 1.0), fxaaQualityRcpFrame.xy));\n\t\t\t\t\t\t\tFxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 0.0), fxaaQualityRcpFrame.xy));\n\t\t\t\t\t\t\tFxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0,-1.0), fxaaQualityRcpFrame.xy));\n\t\t\t\t\t\t\tFxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 0.0), fxaaQualityRcpFrame.xy));\n\t\t\t\t\t\t#else\n\t\t\t\t\t\t\tFxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0, 1), fxaaQualityRcpFrame.xy));\n\t\t\t\t\t\t\tFxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 0), fxaaQualityRcpFrame.xy));\n\t\t\t\t\t\t\tFxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0,-1), fxaaQualityRcpFrame.xy));\n\t\t\t\t\t\t\tFxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 0), fxaaQualityRcpFrame.xy));\n\t\t\t\t\t\t#endif\n\t\t\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\tFxaaFloat maxSM = max(lumaS, lumaM);\n\t\t\t\tFxaaFloat minSM = min(lumaS, lumaM);\n\t\t\t\tFxaaFloat maxESM = max(lumaE, maxSM);\n\t\t\t\tFxaaFloat minESM = min(lumaE, minSM);\n\t\t\t\tFxaaFloat maxWN = max(lumaN, lumaW);\n\t\t\t\tFxaaFloat minWN = min(lumaN, lumaW);\n\t\t\t\tFxaaFloat rangeMax = max(maxWN, maxESM);\n\t\t\t\tFxaaFloat rangeMin = min(minWN, minESM);\n\t\t\t\tFxaaFloat rangeMaxScaled = rangeMax * fxaaQualityEdgeThreshold;\n\t\t\t\tFxaaFloat range = rangeMax - rangeMin;\n\t\t\t\tFxaaFloat rangeMaxClamped = max(fxaaQualityEdgeThresholdMin, rangeMaxScaled);\n\t\t\t\tFxaaBool earlyExit = range < rangeMaxClamped;\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\tif(earlyExit)\n\t\t\t\t\t\t#if (FXAA_DISCARD == 1)\n\t\t\t\t\t\t\t\tFxaaDiscard;\n\t\t\t\t\t\t#else\n\t\t\t\t\t\t\t\treturn rgbyM;\n\t\t\t\t\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\t#if (FXAA_GATHER4_ALPHA == 0)\n\t\t\t\t\t\t#if (FXAA_GLSL_100 == 1)\n\t\t\t\t\t\t\tFxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0,-1.0), fxaaQualityRcpFrame.xy));\n\t\t\t\t\t\t\tFxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 1.0), fxaaQualityRcpFrame.xy));\n\t\t\t\t\t\t\tFxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0,-1.0), fxaaQualityRcpFrame.xy));\n\t\t\t\t\t\t\tFxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 1.0), fxaaQualityRcpFrame.xy));\n\t\t\t\t\t\t#else\n\t\t\t\t\t\t\tFxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1,-1), fxaaQualityRcpFrame.xy));\n\t\t\t\t\t\t\tFxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 1), fxaaQualityRcpFrame.xy));\n\t\t\t\t\t\t\tFxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1,-1), fxaaQualityRcpFrame.xy));\n\t\t\t\t\t\t\tFxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));\n\t\t\t\t\t\t#endif\n\t\t\t\t#else\n\t\t\t\t\t\tFxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(1, -1), fxaaQualityRcpFrame.xy));\n\t\t\t\t\t\tFxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));\n\t\t\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\tFxaaFloat lumaNS = lumaN + lumaS;\n\t\t\t\tFxaaFloat lumaWE = lumaW + lumaE;\n\t\t\t\tFxaaFloat subpixRcpRange = 1.0/range;\n\t\t\t\tFxaaFloat subpixNSWE = lumaNS + lumaWE;\n\t\t\t\tFxaaFloat edgeHorz1 = (-2.0 * lumaM) + lumaNS;\n\t\t\t\tFxaaFloat edgeVert1 = (-2.0 * lumaM) + lumaWE;\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\tFxaaFloat lumaNESE = lumaNE + lumaSE;\n\t\t\t\tFxaaFloat lumaNWNE = lumaNW + lumaNE;\n\t\t\t\tFxaaFloat edgeHorz2 = (-2.0 * lumaE) + lumaNESE;\n\t\t\t\tFxaaFloat edgeVert2 = (-2.0 * lumaN) + lumaNWNE;\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\tFxaaFloat lumaNWSW = lumaNW + lumaSW;\n\t\t\t\tFxaaFloat lumaSWSE = lumaSW + lumaSE;\n\t\t\t\tFxaaFloat edgeHorz4 = (abs(edgeHorz1) * 2.0) + abs(edgeHorz2);\n\t\t\t\tFxaaFloat edgeVert4 = (abs(edgeVert1) * 2.0) + abs(edgeVert2);\n\t\t\t\tFxaaFloat edgeHorz3 = (-2.0 * lumaW) + lumaNWSW;\n\t\t\t\tFxaaFloat edgeVert3 = (-2.0 * lumaS) + lumaSWSE;\n\t\t\t\tFxaaFloat edgeHorz = abs(edgeHorz3) + edgeHorz4;\n\t\t\t\tFxaaFloat edgeVert = abs(edgeVert3) + edgeVert4;\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\tFxaaFloat subpixNWSWNESE = lumaNWSW + lumaNESE;\n\t\t\t\tFxaaFloat lengthSign = fxaaQualityRcpFrame.x;\n\t\t\t\tFxaaBool horzSpan = edgeHorz >= edgeVert;\n\t\t\t\tFxaaFloat subpixA = subpixNSWE * 2.0 + subpixNWSWNESE;\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\tif(!horzSpan) lumaN = lumaW;\n\t\t\t\tif(!horzSpan) lumaS = lumaE;\n\t\t\t\tif(horzSpan) lengthSign = fxaaQualityRcpFrame.y;\n\t\t\t\tFxaaFloat subpixB = (subpixA * (1.0/12.0)) - lumaM;\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\tFxaaFloat gradientN = lumaN - lumaM;\n\t\t\t\tFxaaFloat gradientS = lumaS - lumaM;\n\t\t\t\tFxaaFloat lumaNN = lumaN + lumaM;\n\t\t\t\tFxaaFloat lumaSS = lumaS + lumaM;\n\t\t\t\tFxaaBool pairN = abs(gradientN) >= abs(gradientS);\n\t\t\t\tFxaaFloat gradient = max(abs(gradientN), abs(gradientS));\n\t\t\t\tif(pairN) lengthSign = -lengthSign;\n\t\t\t\tFxaaFloat subpixC = FxaaSat(abs(subpixB) * subpixRcpRange);\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\tFxaaFloat2 posB;\n\t\t\t\tposB.x = posM.x;\n\t\t\t\tposB.y = posM.y;\n\t\t\t\tFxaaFloat2 offNP;\n\t\t\t\toffNP.x = (!horzSpan) ? 0.0 : fxaaQualityRcpFrame.x;\n\t\t\t\toffNP.y = ( horzSpan) ? 0.0 : fxaaQualityRcpFrame.y;\n\t\t\t\tif(!horzSpan) posB.x += lengthSign * 0.5;\n\t\t\t\tif( horzSpan) posB.y += lengthSign * 0.5;\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\tFxaaFloat2 posN;\n\t\t\t\tposN.x = posB.x - offNP.x * FXAA_QUALITY_P0;\n\t\t\t\tposN.y = posB.y - offNP.y * FXAA_QUALITY_P0;\n\t\t\t\tFxaaFloat2 posP;\n\t\t\t\tposP.x = posB.x + offNP.x * FXAA_QUALITY_P0;\n\t\t\t\tposP.y = posB.y + offNP.y * FXAA_QUALITY_P0;\n\t\t\t\tFxaaFloat subpixD = ((-2.0)*subpixC) + 3.0;\n\t\t\t\tFxaaFloat lumaEndN = FxaaLuma(FxaaTexTop(tex, posN));\n\t\t\t\tFxaaFloat subpixE = subpixC * subpixC;\n\t\t\t\tFxaaFloat lumaEndP = FxaaLuma(FxaaTexTop(tex, posP));\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\tif(!pairN) lumaNN = lumaSS;\n\t\t\t\tFxaaFloat gradientScaled = gradient * 1.0/4.0;\n\t\t\t\tFxaaFloat lumaMM = lumaM - lumaNN * 0.5;\n\t\t\t\tFxaaFloat subpixF = subpixD * subpixE;\n\t\t\t\tFxaaBool lumaMLTZero = lumaMM < 0.0;\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\tlumaEndN -= lumaNN * 0.5;\n\t\t\t\tlumaEndP -= lumaNN * 0.5;\n\t\t\t\tFxaaBool doneN = abs(lumaEndN) >= gradientScaled;\n\t\t\t\tFxaaBool doneP = abs(lumaEndP) >= gradientScaled;\n\t\t\t\tif(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P1;\n\t\t\t\tif(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P1;\n\t\t\t\tFxaaBool doneNP = (!doneN) || (!doneP);\n\t\t\t\tif(!doneP) posP.x += offNP.x * FXAA_QUALITY_P1;\n\t\t\t\tif(!doneP) posP.y += offNP.y * FXAA_QUALITY_P1;\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\tif(doneNP) {\n\t\t\t\t\t\tif(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\n\t\t\t\t\t\tif(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\n\t\t\t\t\t\tif(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\n\t\t\t\t\t\tif(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\n\t\t\t\t\t\tdoneN = abs(lumaEndN) >= gradientScaled;\n\t\t\t\t\t\tdoneP = abs(lumaEndP) >= gradientScaled;\n\t\t\t\t\t\tif(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P2;\n\t\t\t\t\t\tif(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P2;\n\t\t\t\t\t\tdoneNP = (!doneN) || (!doneP);\n\t\t\t\t\t\tif(!doneP) posP.x += offNP.x * FXAA_QUALITY_P2;\n\t\t\t\t\t\tif(!doneP) posP.y += offNP.y * FXAA_QUALITY_P2;\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\t\t\t#if (FXAA_QUALITY_PS > 3)\n\t\t\t\t\t\tif(doneNP) {\n\t\t\t\t\t\t\t\tif(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\n\t\t\t\t\t\t\t\tif(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\n\t\t\t\t\t\t\t\tif(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\n\t\t\t\t\t\t\t\tif(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\n\t\t\t\t\t\t\t\tdoneN = abs(lumaEndN) >= gradientScaled;\n\t\t\t\t\t\t\t\tdoneP = abs(lumaEndP) >= gradientScaled;\n\t\t\t\t\t\t\t\tif(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P3;\n\t\t\t\t\t\t\t\tif(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P3;\n\t\t\t\t\t\t\t\tdoneNP = (!doneN) || (!doneP);\n\t\t\t\t\t\t\t\tif(!doneP) posP.x += offNP.x * FXAA_QUALITY_P3;\n\t\t\t\t\t\t\t\tif(!doneP) posP.y += offNP.y * FXAA_QUALITY_P3;\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\t\t\t\t\t#if (FXAA_QUALITY_PS > 4)\n\t\t\t\t\t\t\t\tif(doneNP) {\n\t\t\t\t\t\t\t\t\t\tif(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\n\t\t\t\t\t\t\t\t\t\tif(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\n\t\t\t\t\t\t\t\t\t\tif(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\n\t\t\t\t\t\t\t\t\t\tif(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\n\t\t\t\t\t\t\t\t\t\tdoneN = abs(lumaEndN) >= gradientScaled;\n\t\t\t\t\t\t\t\t\t\tdoneP = abs(lumaEndP) >= gradientScaled;\n\t\t\t\t\t\t\t\t\t\tif(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P4;\n\t\t\t\t\t\t\t\t\t\tif(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P4;\n\t\t\t\t\t\t\t\t\t\tdoneNP = (!doneN) || (!doneP);\n\t\t\t\t\t\t\t\t\t\tif(!doneP) posP.x += offNP.x * FXAA_QUALITY_P4;\n\t\t\t\t\t\t\t\t\t\tif(!doneP) posP.y += offNP.y * FXAA_QUALITY_P4;\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\t\t\t\t\t\t\t#if (FXAA_QUALITY_PS > 5)\n\t\t\t\t\t\t\t\t\t\tif(doneNP) {\n\t\t\t\t\t\t\t\t\t\t\t\tif(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\n\t\t\t\t\t\t\t\t\t\t\t\tif(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\n\t\t\t\t\t\t\t\t\t\t\t\tif(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\n\t\t\t\t\t\t\t\t\t\t\t\tif(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\n\t\t\t\t\t\t\t\t\t\t\t\tdoneN = abs(lumaEndN) >= gradientScaled;\n\t\t\t\t\t\t\t\t\t\t\t\tdoneP = abs(lumaEndP) >= gradientScaled;\n\t\t\t\t\t\t\t\t\t\t\t\tif(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P5;\n\t\t\t\t\t\t\t\t\t\t\t\tif(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P5;\n\t\t\t\t\t\t\t\t\t\t\t\tdoneNP = (!doneN) || (!doneP);\n\t\t\t\t\t\t\t\t\t\t\t\tif(!doneP) posP.x += offNP.x * FXAA_QUALITY_P5;\n\t\t\t\t\t\t\t\t\t\t\t\tif(!doneP) posP.y += offNP.y * FXAA_QUALITY_P5;\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\t\t\t\t\t\t\t\t\t#if (FXAA_QUALITY_PS > 6)\n\t\t\t\t\t\t\t\t\t\t\t\tif(doneNP) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdoneN = abs(lumaEndN) >= gradientScaled;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdoneP = abs(lumaEndP) >= gradientScaled;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P6;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P6;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdoneNP = (!doneN) || (!doneP);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!doneP) posP.x += offNP.x * FXAA_QUALITY_P6;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!doneP) posP.y += offNP.y * FXAA_QUALITY_P6;\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t#if (FXAA_QUALITY_PS > 7)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(doneNP) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdoneN = abs(lumaEndN) >= gradientScaled;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdoneP = abs(lumaEndP) >= gradientScaled;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P7;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P7;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdoneNP = (!doneN) || (!doneP);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!doneP) posP.x += offNP.x * FXAA_QUALITY_P7;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!doneP) posP.y += offNP.y * FXAA_QUALITY_P7;\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\t#if (FXAA_QUALITY_PS > 8)\n\t\t\t\tif(doneNP) {\n\t\t\t\t\t\tif(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\n\t\t\t\t\t\tif(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\n\t\t\t\t\t\tif(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\n\t\t\t\t\t\tif(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\n\t\t\t\t\t\tdoneN = abs(lumaEndN) >= gradientScaled;\n\t\t\t\t\t\tdoneP = abs(lumaEndP) >= gradientScaled;\n\t\t\t\t\t\tif(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P8;\n\t\t\t\t\t\tif(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P8;\n\t\t\t\t\t\tdoneNP = (!doneN) || (!doneP);\n\t\t\t\t\t\tif(!doneP) posP.x += offNP.x * FXAA_QUALITY_P8;\n\t\t\t\t\t\tif(!doneP) posP.y += offNP.y * FXAA_QUALITY_P8;\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\t\t\t#if (FXAA_QUALITY_PS > 9)\n\t\t\t\t\t\tif(doneNP) {\n\t\t\t\t\t\t\t\tif(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\n\t\t\t\t\t\t\t\tif(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\n\t\t\t\t\t\t\t\tif(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\n\t\t\t\t\t\t\t\tif(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\n\t\t\t\t\t\t\t\tdoneN = abs(lumaEndN) >= gradientScaled;\n\t\t\t\t\t\t\t\tdoneP = abs(lumaEndP) >= gradientScaled;\n\t\t\t\t\t\t\t\tif(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P9;\n\t\t\t\t\t\t\t\tif(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P9;\n\t\t\t\t\t\t\t\tdoneNP = (!doneN) || (!doneP);\n\t\t\t\t\t\t\t\tif(!doneP) posP.x += offNP.x * FXAA_QUALITY_P9;\n\t\t\t\t\t\t\t\tif(!doneP) posP.y += offNP.y * FXAA_QUALITY_P9;\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\t\t\t\t\t#if (FXAA_QUALITY_PS > 10)\n\t\t\t\t\t\t\t\tif(doneNP) {\n\t\t\t\t\t\t\t\t\t\tif(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\n\t\t\t\t\t\t\t\t\t\tif(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\n\t\t\t\t\t\t\t\t\t\tif(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\n\t\t\t\t\t\t\t\t\t\tif(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\n\t\t\t\t\t\t\t\t\t\tdoneN = abs(lumaEndN) >= gradientScaled;\n\t\t\t\t\t\t\t\t\t\tdoneP = abs(lumaEndP) >= gradientScaled;\n\t\t\t\t\t\t\t\t\t\tif(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P10;\n\t\t\t\t\t\t\t\t\t\tif(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P10;\n\t\t\t\t\t\t\t\t\t\tdoneNP = (!doneN) || (!doneP);\n\t\t\t\t\t\t\t\t\t\tif(!doneP) posP.x += offNP.x * FXAA_QUALITY_P10;\n\t\t\t\t\t\t\t\t\t\tif(!doneP) posP.y += offNP.y * FXAA_QUALITY_P10;\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\t\t\t\t\t\t\t#if (FXAA_QUALITY_PS > 11)\n\t\t\t\t\t\t\t\t\t\tif(doneNP) {\n\t\t\t\t\t\t\t\t\t\t\t\tif(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\n\t\t\t\t\t\t\t\t\t\t\t\tif(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\n\t\t\t\t\t\t\t\t\t\t\t\tif(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\n\t\t\t\t\t\t\t\t\t\t\t\tif(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\n\t\t\t\t\t\t\t\t\t\t\t\tdoneN = abs(lumaEndN) >= gradientScaled;\n\t\t\t\t\t\t\t\t\t\t\t\tdoneP = abs(lumaEndP) >= gradientScaled;\n\t\t\t\t\t\t\t\t\t\t\t\tif(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P11;\n\t\t\t\t\t\t\t\t\t\t\t\tif(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P11;\n\t\t\t\t\t\t\t\t\t\t\t\tdoneNP = (!doneN) || (!doneP);\n\t\t\t\t\t\t\t\t\t\t\t\tif(!doneP) posP.x += offNP.x * FXAA_QUALITY_P11;\n\t\t\t\t\t\t\t\t\t\t\t\tif(!doneP) posP.y += offNP.y * FXAA_QUALITY_P11;\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\t\t\t\t\t\t\t\t\t#if (FXAA_QUALITY_PS > 12)\n\t\t\t\t\t\t\t\t\t\t\t\tif(doneNP) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdoneN = abs(lumaEndN) >= gradientScaled;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdoneP = abs(lumaEndP) >= gradientScaled;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P12;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P12;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdoneNP = (!doneN) || (!doneP);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!doneP) posP.x += offNP.x * FXAA_QUALITY_P12;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!doneP) posP.y += offNP.y * FXAA_QUALITY_P12;\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\t\t\t}\n\t\t\t\t\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\t}\n\t\t\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\t\t\t}\n\t\t\t\t\t\t#endif\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\t}\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\tFxaaFloat dstN = posM.x - posN.x;\n\t\t\t\tFxaaFloat dstP = posP.x - posM.x;\n\t\t\t\tif(!horzSpan) dstN = posM.y - posN.y;\n\t\t\t\tif(!horzSpan) dstP = posP.y - posM.y;\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\tFxaaBool goodSpanN = (lumaEndN < 0.0) != lumaMLTZero;\n\t\t\t\tFxaaFloat spanLength = (dstP + dstN);\n\t\t\t\tFxaaBool goodSpanP = (lumaEndP < 0.0) != lumaMLTZero;\n\t\t\t\tFxaaFloat spanLengthRcp = 1.0/spanLength;\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\tFxaaBool directionN = dstN < dstP;\n\t\t\t\tFxaaFloat dst = min(dstN, dstP);\n\t\t\t\tFxaaBool goodSpan = directionN ? goodSpanN : goodSpanP;\n\t\t\t\tFxaaFloat subpixG = subpixF * subpixF;\n\t\t\t\tFxaaFloat pixelOffset = (dst * (-spanLengthRcp)) + 0.5;\n\t\t\t\tFxaaFloat subpixH = subpixG * fxaaQualitySubpix;\n\t\t/*--------------------------------------------------------------------------*/\n\t\t\t\tFxaaFloat pixelOffsetGood = goodSpan ? pixelOffset : 0.0;\n\t\t\t\tFxaaFloat pixelOffsetSubpix = max(pixelOffsetGood, subpixH);\n\t\t\t\tif(!horzSpan) posM.x += pixelOffsetSubpix * lengthSign;\n\t\t\t\tif( horzSpan) posM.y += pixelOffsetSubpix * lengthSign;\n\t\t\t\t#if (FXAA_DISCARD == 1)\n\t\t\t\t\t\treturn FxaaTexTop(tex, posM);\n\t\t\t\t#else\n\t\t\t\t\t\treturn FxaaFloat4(FxaaTexTop(tex, posM).xyz, lumaM);\n\t\t\t\t#endif\n\t\t}\n\t\t/*==========================================================================*/\n\t\t#endif\n\n\t\tvoid main() {\n\t\t\tgl_FragColor = FxaaPixelShader(\n\t\t\t\tvUv,\n\t\t\t\tvec4(0.0),\n\t\t\t\ttDiffuse,\n\t\t\t\ttDiffuse,\n\t\t\t\ttDiffuse,\n\t\t\t\tresolution,\n\t\t\t\tvec4(0.0),\n\t\t\t\tvec4(0.0),\n\t\t\t\tvec4(0.0),\n\t\t\t\t0.75,\n\t\t\t\t0.166,\n\t\t\t\t0.0833,\n\t\t\t\t0.0,\n\t\t\t\t0.0,\n\t\t\t\t0.0,\n\t\t\t\tvec4(0.0)\n\t\t\t);\n\n\t\t\t// TODO avoid querying texture twice for same texel\n\t\t\tgl_FragColor.a = texture2D(tDiffuse, vUv).a;\n\t\t}'};function bn(t){return bn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},bn(t)}function An(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Tn(t,e){return Tn=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},Tn(t,e)}function Sn(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=Fn(t);if(e){var i=Fn(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return Nn(this,n)}}function Nn(t,e){if(e&&("object"===bn(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function Fn(t){return Fn=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},Fn(t)}var wn=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Tn(t,e)}(o,t);var e,n,r,i=Sn(o);function o(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,o),i.call(this,_n)}return e=o,(n=[{key:"setSize",value:function(t,e){var n=this.material.uniforms.resolution.value;n.x=1/t,n.y=1/e}}])&&An(e.prototype,n),r&&An(e,r),o}(Nt);function Pn(t){return Pn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},Pn(t)}function Ln(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function On(t,e){return On=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},On(t,e)}function En(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=Mn(t);if(e){var i=Mn(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return Rn(this,n)}}function Rn(t,e){if(e&&("object"===Pn(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function Mn(t){return Mn=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},Mn(t)}var In=function(e){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&On(t,e)}(r,e);var n=En(r);function r(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.5;Ln(this,r);var s=(e=n.call(this,new t.ShaderMaterial(r.shader))).material.uniforms;return s.uTop.value=i,s.uBottom.value=o,s.uFalloff.value=a,e}return r}(Nt);In.shader={uniforms:{tDiffuse:{value:null},uTop:{value:0},uBottom:{value:0},uFalloff:{value:0}},vertexShader:"varying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvUv = uv;\r\n\r\n\tgl_Position = vec4( position, 1.0 );\r\n\r\n}",fragmentShader:"\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform float uTop;\n\t\tuniform float uBottom;\n\t\tuniform float uFalloff;\n\t\tvarying vec2 vUv;\n\n\t\t".concat(dn,"\n\n\t\tvoid main() {\n\n\t\t\tfloat falloff = uFalloff;\n\t\t\tfloat amount = uBottom;\n\t\t\tif ( vUv.y > 0.5 ) amount = uTop;\n\n\t\t\tvec4 color = texture2D( tDiffuse, vUv );\n\n\t\t\tfloat dist = distance(vUv.y, 0.5);\n\t\t\tcolor.rgb *= smoothstep( 0.8, falloff * 0.799, dist * (amount + falloff) );\n\t\t\t\n\t\t\tcolor.rgb = bayerMatrixDither( color.rgb );\n\n\t\t\tgl_FragColor = color;\n\n\t\t}\n\t")};var Un,Cn,Xn,Dn=xt.VIGNETTE_TOP,zn=xt.VIGNETTE_BOTTOM,Bn=xt.VIGNETTE_FALLOFF;Un={init:function(e,n,r){var i=window,o=i.innerWidth,a=i.innerHeight,s=i.devicePixelRatio,u=Math.round(o/s),l=Math.round(a/s),c=Jn.current,d=c.bloom,h=c.adjustments;Xn={render:new Ot(n,r),fxaa:new wn,bloom:new yn(new t.Vector2(u,l),d.strength,d.radius,d.threshold),vignette:new In(Dn,zn,Bn),adjustments:new un(h)},Cn=new Pt(e),Object.values(Xn).forEach((function(t){return Cn.addPass(t)})),Object.assign(Un,{renderer:e,scene:n,camera:r,post:Xn,composer:Cn})},resize:function(t,e,n){Cn.setSize(t,e),Object.values(Xn).forEach((function(r){r.setSize&&r.setSize(t,e,n)}))},update:function(){Cn.render()}};var Jn,Qn=xt.DIGITS,Yn=xt.MIN_HUE,jn=xt.MAX_HUE,Vn=xt.MIN_ORB_VALUE,Gn=xt.MAX_ORB_VALUE,Hn=xt.MIN_PASSES,kn=xt.MAX_PASSES,Wn=xt.MIN_SATURATION,qn=xt.MAX_SATURATION,$n=xt.MIN_SMOOTHNESS,Kn=xt.MAX_SMOOTHNESS,Zn=xt.MIN_SPEED,tr=xt.MAX_SPEED,er=xt.SAVE_BUTTON_LABEL,nr=xt.STORAGE_GUI,rr=1/Math.pow(10,Qn),ir=new yt.GUI;function or(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null==n)return;var r,i,o=[],a=!0,s=!1;try{for(n=n.call(t);!(a=(r=n.next()).done)&&(o.push(r.value),!e||o.length!==e);a=!0);}catch(t){s=!0,i=t}finally{try{a||null==n.return||n.return()}finally{if(s)throw i}}return o}(t,e)||function(t,e){if(!t)return;if("string"==typeof t)return ar(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);"Object"===n&&t.constructor&&(n=t.constructor.name);if("Map"===n||"Set"===n)return Array.from(t);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return ar(t,e)}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ar(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}ir.init=function(){var t=Jn.orb,e=Un.post.adjustments,n=ir.addFolder("Orb");n.add(t,"passes",Hn,kn).step(1),n.add(t,"smoothness",$n,Kn).step(1),n.add(t,"speed",Zn,tr).step(1),n.open();var r=ir.addFolder("Rotation");r.add(t.rotationSpeed,"x",-tr,tr).step(1),r.add(t.rotationSpeed,"y",-tr,tr).step(1),r.add(t.rotationSpeed,"z",-tr,tr).step(1),r.open();var i=ir.addFolder("Color");i.add(t,"value1",Vn,Gn).step(rr).listen(),i.add(t,"value2",Vn,Gn).step(rr).listen(),i.add(e,"hue",Yn,jn).step(rr),i.add(e,"saturation",Wn,qn).step(rr),i.open();var o,a,s,u=ir.addFolder("Settings");u.add(Jn,"reset"),u.add(Jn,"random"),u.add((o={},a=er,s=Jn.save,a in o?Object.defineProperty(o,a,{value:s,enumerable:!0,configurable:!0,writable:!0}):o[a]=s,o),er),u.open(),Jn.closeGUI&&ir.close(),ir.__closeButton.addEventListener("click",(function(){window.localStorage.setItem(nr,ir.closed)}))};var sr="rotationSpeed";function ur(){var t=Jn,e=t.orb,n=t.current;if(Jn.orb){var r=Un.post.adjustments;Object.entries(n.adjustments).forEach((function(t){var e=or(t,2),n=e[0],i=e[1];r[n]=i})),Object.entries(n.orb).forEach((function(t){var n=or(t,2),r=n[0],i=n[1];r!==sr&&(e[r]=i)})),Object.entries(n.orb.rotationSpeed).forEach((function(t){var n=or(t,2),r=n[0],i=n[1];e.rotationSpeed[r]=i})),ir.updateDisplay()}}function lr(){var t=xt.TITLE,e=h.hash;document.title=e?"".concat(t," #").concat(e):t,e?fr(e):pr(!1)}function cr(){var t=xt.defaults;Jn.current=j()(t),Jn.reference=j()(t)}var dr=xt.WINLO_PARAM,hr="seed";function fr(t){t?dt.seed=t:dt.autoseed(),Jn.current.seed=dt.seed;var e=function(t,e,n){var r=n.min,i=n.max,o=n.round,a=dt.random(r,i,o);t[e]=h.round(a)},n=xt.random,r=Jn.current,i=r.adjustments,o=r.orb;Object.entries(n.adjustments).forEach((function(t){var n=or(t,2),r=n[0],o=n[1];dt.random()>.5?e(i,r,o):i[r]=dt.bool()?o.min:o.max})),Object.entries(n.orb).forEach((function(t){var n=or(t,2),r=n[0],i=n[1];return e(o,r,i)})),Object.entries(n.rotationSpeed).forEach((function(t){var n=or(t,2),r=n[0],i=n[1];dt.random()>.66?e(o.rotationSpeed,r,i):o.rotationSpeed[r]=0})),Jn.reference=j()(Jn.current),ur(),t||(t=dt.seed,h.save({seed:t},!1,{hash:hr}))}function pr(){var t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];t&&h.reset(),cr(),ur()}function mr(t){return mr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},mr(t)}function vr(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function gr(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function xr(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function yr(t,e){return yr=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},yr(t,e)}function _r(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=Ar(t);if(e){var i=Ar(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return br(this,n)}}function br(t,e){if(e&&("object"===mr(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function Ar(t){return Ar=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},Ar(t)}Jn={random:fr,save:function(){!function(){var t=Jn,e=t.orb,n=t.current;Object.keys(n.adjustments).forEach((function(t){n.adjustments[t]=h.round(Un.post.adjustments[t])})),Object.keys(n.orb).forEach((function(t){t!==sr&&(n.orb[t]=h.round(e[t]))})),Object.keys(n.orb.rotationSpeed).forEach((function(t){n.orb.rotationSpeed[t]=h.round(e.rotationSpeed[t])}))}();var t=Jn,e=t.current,n=t.reference;h.save(e,dr,{reference:n,hash:hr})},load:function(){lr(),h.load(Jn.current,dr,{hash:hr}),ur()},reset:pr,init:function(t){!function(){var t=xt.STORAGE_LAST,e=xt.STORAGE_GUI,n=xt.STORAGE_DURATION,r=window.localStorage,i=Date.now();i-(parseInt(r.getItem(t))||i)>n&&r.clear();var o=window.localStorage.getItem(e);Jn.closeGUI="false"!==o,r.setItem(t,i)}(),Jn.orb=t,window.addEventListener("hashchange",lr)}},cr();var Tr=function(e){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&yr(t,e)}(a,e);var n,r,i,o=_r(a);function a(e){var n;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a);var r=Jn.current.orb,i=r.passes,s=r.smoothness,u=r.speed,l=r.value1,c=r.value2,d=r.rotationSpeed,h=new t.SphereGeometry(1,e,e),f=new t.ShaderMaterial({vertexShader:"#define PI acos(-1.0)\n\nuniform int uPasses;\nuniform float uSmoothness;\nuniform float uSpeed;\nuniform float uTime;\nvarying vec4 vPosition;\nvarying float vDistance;\n\n// Classic Perlin 3D Noise, by Stefan Gustavson\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\n\nfloat cnoise(vec3 P){\n  vec3 Pi0 = floor(P); // Integer part for indexing\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 / 7.0;\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 / 7.0;\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n  return 2.2 * n_xyz;\n}\n// \n\nvoid main() {\n\n    vec3 pos = position;\n\n    float speed = 0.01 * uSpeed;\n    float loopLength = 10.0 * speed;\n\n    float factor1 = uSmoothness;\n    float factor2 = uSmoothness * 0.8;\n    float factor = mix(factor1, factor2, sin( uTime ));\n\n    // Lerp-based noise loop\n    float transitionStart = loopLength * 0.5;\n    float time = mod(uTime * speed, loopLength);\n\n    float v1 = cnoise(pos + time);\n    float v2 = cnoise(pos + time - loopLength);\n\n\tfor ( int i = 0; i < uPasses; i ++ ) {\n\t\tv1 = cnoise( vec3(v1) );\n\t\tv2 = cnoise( vec3(v2) );\n\t}\n\n    float transitionProgress = (time-transitionStart)/(loopLength-transitionStart);\n    float progress = clamp(transitionProgress, 0.0, 1.0);\n\n    float noise = mix(v1, v2, progress) / factor;\n\n    pos += noise;\n\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(pos, 1.0);\n\n    vPosition = modelMatrix * vec4(pos, 1.0);\n    vDistance = distance(pos, vec3(0.0));\n\n}",fragmentShader:"uniform float uValue1;\nuniform float uValue2;\nvarying vec4 vPosition;\nvarying float vDistance;\n\nfloat map(float s, float a1, float a2, float b1, float b2) {\n\n    return b1 + (s-a1)*(b2-b1)/(a2-a1);\n\n}\n\nvoid main() {\n\n\tvec4 baseColor = vec4( 0.95, 0.98, 1.0, 1.0 );\n\tvec4 color1 = baseColor * uValue1;\n\tvec4 color2 = baseColor * uValue2;\n\n    float distanceMap = map(vDistance, 1.0 , 1.1, 0.0, 1.0);\n\n    vec4 color = mix( color1, color2, distanceMap );\n\n    gl_FragColor = vec4( color );\n\n}",uniforms:{uPasses:{value:i},uSmoothness:{value:s},uSpeed:{value:u},uTime:{value:0},uValue1:{value:l},uValue2:{value:c}}});return(n=o.call(this,h,f)).rotationSpeed=function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?vr(Object(n),!0).forEach((function(e){gr(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):vr(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}({},d),n}return n=a,(r=[{key:"update",value:function(t){var e=xt.ORB_ROTATION_SPEED,n=this.rotation,r=this.rotationSpeed;t/=1e3,n.x=t*r.x*e,n.y=t*r.y*e,n.z=t*r.z*e,this.time=t}},{key:"invert",value:function(){var t=this.value1,e=this.value2,n=t;t=e,e=n}},{key:"passes",get:function(){return this.material.uniforms.uPasses.value},set:function(t){this.material.uniforms.uPasses.value=t}},{key:"smoothness",get:function(){return this.material.uniforms.uSmoothness.value},set:function(t){this.material.uniforms.uSmoothness.value=t}},{key:"speed",get:function(){return this.material.uniforms.uSpeed.value},set:function(t){this.material.uniforms.uSpeed.value=t}},{key:"time",get:function(){return this.material.uniforms.uTime.value},set:function(t){this.material.uniforms.uTime.value=t}},{key:"value1",get:function(){return this.material.uniforms.uValue1.value},set:function(t){this.material.uniforms.uValue1.value=t}},{key:"value2",get:function(){return this.material.uniforms.uValue2.value},set:function(t){this.material.uniforms.uValue2.value=t}}])&&xr(n.prototype,r),i&&xr(n,i),a}(t.Mesh);function Sr(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Nr(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var Fr=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;Sr(this,t),this.callbacks="function"==typeof e?[e]:e,this.fps=n,this.elapsed=0,this._last=0,this._delta=0,this._isPlaying=!1,this._tick=this.tick.bind(this)}var e,n,r;return e=t,n=[{key:"add",value:function(t){this.has(t)||this.callbacks.push(t)}},{key:"remove",value:function(t){this.has(t)&&this.callbacks.splice(this.callbacks.indexOf(t),1)}},{key:"has",value:function(t){return this.callbacks.includes(t)}},{key:"reset",value:function(){this.elapsed=0}},{key:"start",value:function(){this._last=this.now,this._delta=0,this._isPlaying=!0,this.requestFrame()}},{key:"pause",value:function(){this._isPlaying=!1}},{key:"stop",value:function(){this.pause(),this.reset()}},{key:"tick",value:function(){var e=this;if(this.isPlaying){this.requestFrame();var n=this.now,r=Math.min(t.maxDelta,n-this._last);this._last=n,this._delta+=r,this.elapsed+=r;var i=this._frameDuration-this._delta;i<=0&&(this.callbacks.forEach((function(t){return t.call(e,e.elapsed,e._delta)})),this._delta=Math.abs(i))}}},{key:"requestFrame",value:function(){requestAnimationFrame(this._tick)}},{key:"fps",get:function(){return this._fps},set:function(t){this._fps=t,this._frameDuration=t>0?Math.floor(1e3/t):0}},{key:"isPlaying",get:function(){return this._isPlaying}},{key:"now",get:function(){return t.time.now()}}],n&&Nr(e.prototype,n),r&&Nr(e,r),t}();Fr.maxDelta=100,Fr.time=void 0===performance?Date:performance;var wr=new t.WebGLRenderer({powerPreference:"high-performance",stencil:!1});wr.toneMapping=t.ACESFilmicToneMapping;var Pr=wr.domElement;document.getElementById("main").appendChild(Pr);var Lr=new t.Scene;Lr.background=new t.Color(2237222),Lr.fog=new t.Fog(Lr.background,1,50);var Or=new t.PerspectiveCamera(30);Or.near=.5,Or.far=50;var Er=new t.HemisphereLight(6316128,4210752),Rr=new t.DirectionalLight(16777215);Rr.position.set(1,1,1);var Mr={hemisphere:Er,directional:Rr};Object.values(Mr).forEach((function(t){return Lr.add(t)}));var Ir={renderer:wr,canvas:Pr,scene:Lr,camera:Or,lights:Mr,resize:function(t,e,n){wr.setPixelRatio(n),wr.setSize(t,e),Or.aspect=t/e,Or.updateProjectionMatrix()}},Ur=document.body.style,Cr=Ir.camera,Xr=Ir.scene,Dr=new t.Vector2,zr=new t.Raycaster;function Br(t){Dr.x=t.clientX/window.innerWidth*2-1,Dr.y=1-t.clientY/window.innerHeight*2}function Jr(t){Br(t),Yr.intersects&&Jn.random()}function Qr(t){t.preventDefault()}var Yr={pointer:Dr,raycaster:zr,update:function(){var t=Yr.intersects,e=Yr.camera,n=e.target,r=e.origin,i=e.targetXY,o=e.lookAt,a=e.lerpSpeed;n.x=r.x+i.x*Dr.x,n.y=r.y+i.y*Dr.y,n.z=r.z,Cr.position.lerp(n,a),Cr.lookAt(o),Ur.cursor=t?"pointer":"auto"},init:function(){var t=Ir.canvas;t.addEventListener("pointerDown",Br),t.addEventListener("pointermove",Br),t.addEventListener("pointerup",Jr),t.addEventListener("touchstart",Qr)},resize:function(e,n){var r=xt.CAMERA_SPEED,i=xt.CAMERA_X,o=xt.CAMERA_Y,a=xt.CAMERA_Z,s=xt.CAMERA_Z_PORTRAIT;Cr.position.set(i,o,a),e<n&&(Cr.position.z=s),Yr.camera={lookAt:new t.Vector3(0,0,0),origin:new t.Vector3,target:new t.Vector3,targetXY:new t.Vector2(5,1),lerpSpeed:r},Yr.camera.origin.copy(Cr.position)},get intersects(){return zr.setFromCamera(Dr,Cr),zr.intersectObjects(Xr.children,!1).length}},jr=xt.FLOOR_SIZE,Vr=xt.FLOOR_TEXTURE_URL,Gr=xt.FLOOR_Y,Hr=xt.MAX_FPS,kr=xt.ORB_Z_LANDSCAPE,Wr=xt.ORB_Z_PORTRAIT,qr=xt.ORB_SEGMENTS,$r=xt.DIGITS;h.init(),h.digits=$r,Jn.load();var Kr=Ir.renderer,Zr=Ir.scene,ti=Ir.camera,ei=new Q(jr);ei.position.y=Gr,Zr.add(ei);var ni=new Tr(qr);function ri(){var t=window,e=t.innerWidth,n=t.innerHeight,r=t.devicePixelRatio,i=e,o=n;[Ir,Un,ei,Yr].forEach((function(t){return t.resize(i,o,r)})),ni.position.z=i<o?Wr:kr}Zr.add(ni);var ii=new Fr((function(t){Yr.update(),ni.update(t),Un.update()}),Hr);function oi(t){Jn.init(ni),ei.init(t,Zr),Un.init(Kr,Zr,ti),Yr.init(),window.addEventListener("resize",ri),ri(),ii.start(),setTimeout(ir.init,0)}(new t.TextureLoader).load(Vr,(function(t){return oi(t)}),void 0,(function(){return oi()}))})()})();